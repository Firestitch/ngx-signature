{"version":3,"file":"firestitch-autocomplete-chips.js","sources":["../../src/app/helpers/get-object-value.ts","../../src/app/interfaces/data-type.ts","../../src/app/directives/autocomplete-object/autocomplete-object.directive.ts","../../src/app/directives/autocomplete-no-results/autocomplete-no-results.directive.ts","../../src/app/directives/static-template/static-template.directive.ts","../../src/app/directives/chip-suffix/chip-suffix.directive.ts","../../src/app/directives/chips-suffix/chips-suffix.directive.ts","../../src/app/components/autocomplete-chips/autocomplete-chips.component.ts","../../src/app/components/autocomplete-chips/autocomplete-chips.component.html","../../src/app/fs-autocomplete-chips.module.ts","../../src/public_api.ts","../../src/firestitch-autocomplete-chips.ts"],"sourcesContent":["export function getObjectValue(attribute, mapping): any {\n  if (!mapping) {\n    return null;\n  }\n  return _getObjectValue(attribute, mapping.split('.'));\n}\n\nexport function _getObjectValue(value, indexes): any {\n  const index = indexes.shift(indexes);\n\n  if (!index) {\n    return value;\n  }\n\n  if (!value) {\n    return value;\n  }\n\n  value = value[index];\n\n  return _getObjectValue(value, indexes);\n}\n","export enum DataType {\n  Object = 'object',\n  Text = 'text'\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteObject],[fsAutocompleteChipsTemplate]'\n})\nexport class FsAutocompleteObjectDirective {\n\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteChipsNoResults]'\n})\nexport class FsAutocompleteChipsNoResultsDirective {}\n","import { Directive, Output, EventEmitter } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteChipsStatic]'\n})\nexport class FsAutocompleteChipsStaticDirective {\n  @Output() click = new EventEmitter();\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteChipSuffix]'\n})\nexport class FsAutocompleteChipSuffixDirective {\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteChipsSuffix]'\n})\nexport class FsAutocompleteChipsSuffixDirective {\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ContentChildren,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { MatFormField } from '@angular/material/form-field';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { BACKSPACE, DELETE } from '@angular/cdk/keycodes';\n\nimport { isEqual, random } from 'lodash-es';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\nimport { Subject, of, timer, Observable } from 'rxjs';\nimport { takeUntil, switchMap, tap, debounce, filter } from 'rxjs/operators';\n\nimport { getObjectValue } from '../../helpers/get-object-value';\nimport { IAutocompleteItem } from '../../interfaces/autocomplete-item.interface';\nimport { DataType } from '../../interfaces/data-type';\nimport { FsAutocompleteObjectDirective } from '../../directives/autocomplete-object/autocomplete-object.directive';\nimport { FsAutocompleteChipsNoResultsDirective } from '../../directives/autocomplete-no-results/autocomplete-no-results.directive';\nimport { FsAutocompleteChipsStaticDirective } from './../../directives/static-template/static-template.directive';\nimport { FsAutocompleteChipSuffixDirective } from './../../directives/chip-suffix/chip-suffix.directive';\nimport { FsAutocompleteChipsSuffixDirective } from './../../directives/chips-suffix/chips-suffix.directive';\n\n\n@Component({\n  selector: 'fs-autocomplete-chips',\n  templateUrl: './autocomplete-chips.component.html',\n  styleUrls: [ './autocomplete-chips.component.scss' ],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FsAutocompleteChipsComponent),\n    multi: true\n  }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsAutocompleteChipsComponent implements OnInit, OnDestroy, ControlValueAccessor {\n\n  @Input() public fetch = null;\n  @Input() public readonly = false;\n  @Input() public size: 'large' | 'small' = 'large';\n  @Input() public placeholder = '';\n  @Input() public chipImage = 'image';\n  @Input() public chipBackground: string;\n  @Input() public chipColor: string;\n  @Input() public chipIcon: string;\n  @Input() public chipIconColor: string;\n  @Input() public chipClass: string;\n  @Input() public hint: string;\n  @Input() public allowText: boolean;\n  @Input() public allowObject = true;\n  @Input() public delay = 200;\n  @Input() public validateText: (text: string) => boolean;\n  @Input() public invalidTextMessage = '';\n  @Input() public removable = true;\n  @Input() public allowClear = true;\n  @Input() public color = '';\n  @Input() public background = '';\n  @Input() public orderable = false;\n  @Input() public limit = 0;\n  @Input() public initOnClick = false;\n  @Input() public fetchOnFocus = true;\n  @Input() public multiple = true;\n  @Input() public set panelClass(value) {\n    this.panelClasses = [\n      ...['fs-account-picker-autocomplete', 'fs-autocomplete-chips-panel'],\n      value,\n    ].join(' ');\n  };\n\n  @Input()\n  public compareWith = (o1: any, o2: any) => {\n    return isEqual(o1, o2);\n  };\n\n  @Input('disabled')\n  set setDisabled(value) {\n    this.disabled = value;\n  }\n  @Input()\n  public panelWidth: string | number = null;\n\n  @Output() public selected = new EventEmitter();\n  @Output() public removed = new EventEmitter();\n  @Output() public reordered = new EventEmitter();\n  @Output('clear') public clearEvent = new EventEmitter();\n\n  @HostBinding('class.fs-form-wrapper')\n  public formWrapper = true;\n\n  @HostListener('dragstart', ['$event'])\n  public dragStart(e) {\n    e.preventDefault();\n  };\n\n  @ViewChild('input')\n  public input: ElementRef = null;\n\n  @ViewChild('dummyInput')\n  public dummyInput: ElementRef = null;\n\n  @ViewChildren(MatAutocompleteTrigger)\n  public autocompleteTriggers: QueryList<MatAutocompleteTrigger>;\n\n  @ViewChild(MatAutocompleteTrigger)\n  public autocompleteTrigger = null;\n\n  @ViewChild(MatFormField, { read: ElementRef })\n  public formField: ElementRef = null\n\n  @ContentChild(FsAutocompleteObjectDirective, { read: TemplateRef })\n  public objectTemplate: TemplateRef<FsAutocompleteObjectDirective> = null;\n\n  @ContentChild(FsAutocompleteChipSuffixDirective, { read: TemplateRef })\n  public chipSuffixTemplate: TemplateRef<FsAutocompleteChipSuffixDirective> = null;\n\n  @ContentChild(FsAutocompleteChipsSuffixDirective, { read: TemplateRef })\n  public chipsSuffixTemplate: TemplateRef<FsAutocompleteChipsSuffixDirective> = null;\n\n  @ContentChild(FsAutocompleteChipsNoResultsDirective, { read: TemplateRef, static: true })\n  public noResultsTemplate: TemplateRef<FsAutocompleteChipsNoResultsDirective> = null;\n\n  @ContentChildren(FsAutocompleteChipsStaticDirective, { read: TemplateRef })\n  public staticTemplates: TemplateRef<FsAutocompleteChipsStaticDirective>[] = null;\n\n  @ContentChildren(FsAutocompleteChipsStaticDirective)\n  public staticDirectives: QueryList<FsAutocompleteChipsStaticDirective>;\n\n  public data: IAutocompleteItem[];\n  public textData: Partial<IAutocompleteItem> = {};\n  public disabled = false;\n  public dataType = DataType;\n  public keyword: string = null;\n  public noResults = false;\n  public name = 'autocomplete_'.concat(random(1, 9999999));\n  public _model: any[] = [];\n  public inited = false;\n  public panelClasses: string;\n\n  public get model() {\n    return this._model;\n  }\n\n  public get inputEl() {\n    return this.input ? this.input.nativeElement : null;\n  }\n\n  private _keyword$ = new Subject<InputEvent>();\n  private _fetch$ = new Subject<string>();\n  private _destroy$ = new Subject();\n  private _onTouched = () => { };\n  private _onChange = (value: any) => { };\n\n  public registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n  public registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  public constructor(\n    private _cdRef: ChangeDetectorRef,\n  ) {\n    this.panelClass = '';\n  }\n\n  public ngOnInit(): void {\n    this.inited = !this.initOnClick;\n\n    this._listenFetch();\n    this._listenKeywordChange();\n  }\n\n  public init(options = { focus: true }): void {\n    if (!this.disabled) {\n      this.inited = true;\n      this._cdRef.markForCheck();\n      if (options.focus) {\n        this.focus({ delay: 200 });\n      }\n    }\n  }\n\n  public drop(event: CdkDragDrop<{ index: number }>): void {\n    const previousIndex = event.previousContainer.data.index;\n    const index = event.container.data.index;\n\n    moveItemInArray(this._model, previousIndex, index);\n\n    this.reordered.emit({\n      item: this._model[index],\n      from: previousIndex,\n      to: index,\n      items: this._model,\n    });\n    this._updateModel(this._model);\n  }\n\n  public selectAll(): void {\n    this.data.forEach((selected) => {\n      if (selected.type === DataType.Object) {\n        this._addObject(selected);\n      }\n\n      if (selected.type === DataType.Text) {\n        this._addText(selected.data);\n      }\n    });\n  }\n\n  public inputed(event): void {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    this._keyword$.next(event);\n  }\n\n  public keyDown(event: KeyboardEvent): void {\n    if (this.readonly || this.disabled || ['Enter', 'ArrowDown', 'ArrowUp'].indexOf(event.code) !== -1) {\n      return;\n    }\n    \n    if (event.code === 'Tab') {\n      const activeOption = this.autocompleteTrigger.activeOption;\n      if (activeOption) {\n        if(activeOption.value.type === DataType.Object) {\n          this._addObject(activeOption.value);\n          this.selected.emit(activeOption.value);\n        } else if(activeOption.value.type === DataType.Text) {\n          this._addText(this.keyword);\n          this.selected.emit(this.keyword);\n        }\n      }\n    }\n    \n    this._clearData();\n  }\n\n  public chipClick(event: MouseEvent): void {\n    this.focus();\n  }\n\n  public chipKeyDown(event: KeyboardEvent, index): void {\n    if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n      if(this.multiple) {\n        this.model.splice(index, 1);\n        this._updateModel(this.model);\n      } else {        \n        this._updateModel([]);\n      }\n    }\n  }\n\n  public chipRemoved(event: UIEvent, item): void {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this._model = this.model\n      .filter((modelItem) => modelItem !== item);\n\n    this._updateModel(this._model);\n    this.removed.emit(item);\n    this.unfocus();\n  }\n\n  public focus(options = { delay: 0}): void {\n    setTimeout(() => {\n      this.inputEl.focus();\n    }, options.delay); // Hack: Delay to wait for animation to finish\n  }\n\n  public unfocus() {\n    setTimeout(() => {\n      if(this.dummyInput) {\n        this.dummyInput.nativeElement.focus();\n      }\n    });\n  }\n\n  public clearClick(event: KeyboardEvent): void {\n    event.stopPropagation();\n    this.clear(true);\n    this.clearEvent.emit();\n  }\n\n  public clear(closePanel = true): void {\n    if (closePanel) {\n      this.closePanel();\n    }\n\n    this._clearInput();\n    this.noResults = false;\n    this._updateModel([]);\n  }\n\n  public closePanel(): void {\n    if (this.autocompleteTrigger) {\n      this.autocompleteTrigger.closePanel();\n    }\n  }\n\n  public closed(): void {\n    setTimeout(() => {\n      this._close();\n      if (this.initOnClick) {\n        // Wait for keyDown() to fire to process\n          this.inited = false;\n          this._cdRef.markForCheck();\n      }\n      this._clearData();\n    });\n  }\n\n  public focused(e): void {\n    this._clearInput();\n    if (this.fetchOnFocus) {\n      this._fetch();\n      this.autocompleteTrigger.openPanel();\n    }\n  }\n\n  public optionClick(event: UIEvent, value: any, refocus = false): void {\n    event.stopPropagation();\n    event.preventDefault();\n    \n    // Clear input before close to prevent adding text item which was not selected\n    if(!refocus) {\n      this._clearInput();\n    }\n\n    if (this.multiple) {\n      this._select(value, { fetch: !this.fetchOnFocus });\n      if (!refocus) {\n        this.closePanel();\n      }\n    } else {\n      this._select(value, { fetch: false });\n      this._close();\n      this.closePanel();\n    }\n  }\n\n  public optionSelected(event: MatAutocompleteSelectedEvent): void {\n    if (!event.option.value) {\n      return;\n    }\n\n    this._select(event.option.value);\n    this._clearData();\n    this._clearInput();\n  }\n\n  public writeValue(value: any): void {\n    if (value) {\n      value = Array.isArray(value) ? value : [value];\n\n      value = value.map((item) => {\n        return typeof item === 'object' ?\n        this._createObjectItem(item) :\n        this._createTextItem(item, true);\n      });\n\n    } else {\n      value = [];\n    }\n\n    this._model = value;\n    this._cdRef.markForCheck();\n  }\n\n  public staticClick(event: KeyboardEvent, index): void {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const staticDirective: FsAutocompleteChipsStaticDirective = this.staticDirectives.toArray()[index];\n    staticDirective.click.emit(event);\n    if (this.inputEl) {\n      this.inputEl.blur();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _clearData(): void {\n    this.data = null;\n  }\n\n  private _clearInput(): void {\n    if (this.inputEl) {\n      this.inputEl.value = '';\n    }\n\n    this.textData = {};\n    this.keyword = '';\n  }\n\n  private _select(selected, options: { fetch?: boolean } = {}): void {\n    if (!this.multiple) {\n      this._model = [];\n    }\n\n    if (this.data) {\n      const index = this.data.indexOf(selected);\n\n      if (index !== -1) {\n        this.data.splice(index, 1)\n      }\n    }\n\n    const value = this.allowObject && this.allowText ? selected : selected.data;\n    if (selected.type === DataType.Object) {\n      if (!this._model.includes(value)) {\n        this._addObject(selected);\n        this.selected.emit(selected);\n      }\n    }\n\n    if (selected.type === DataType.Text) {\n      if (!this._model.includes(value)) {\n        this._addText(selected.data);\n        this.selected.emit(selected.data);\n      }\n    }\n\n    if (options.fetch !== false) {\n      this._fetch();\n\n      setTimeout(() => {\n        if (this.autocompleteTrigger) {\n          this.autocompleteTrigger.updatePosition();\n        }\n      });\n    }\n  }\n  \n  private _createTextItem(data, valid: boolean): IAutocompleteItem {\n    return {\n      data,\n      type: DataType.Text,\n      valid,\n    }; \n  }\n\n  private _createObjectItem(data): IAutocompleteItem {\n    return {\n      data,\n      type: DataType.Object,\n      image: getObjectValue(data, this.chipImage),\n      icon: getObjectValue(data, this.chipIcon),\n      iconColor: getObjectValue(data, this.chipIconColor) || this.chipIconColor,\n      class: getObjectValue(data, this.chipClass) || this.chipClass,\n      background: getObjectValue(data, this.chipBackground) || this.chipBackground,\n      color: getObjectValue(data, this.chipColor) || this.chipColor\n    };\n  }\n\n  private _validateText(text): boolean {\n    return String(text).trim().length && (!this.validateText || this.validateText(text));\n  }\n\n  private _updateModel(value): void {\n    this._model = value;\n\n    const model = this._model.map((item) => {\n      if (!this.allowText || !this.allowObject) {\n        return item.data;\n      }\n\n      return item;\n    });\n\n    this._onChange(this.multiple ? model : model[0]);\n    this._onTouched();\n  }\n\n  private _addObject(object): void {\n    this._updateModel([...this._model, object]);\n  }\n\n  private _addText(text): void {\n    if (this._validateText(text)) {\n      const textObject = this._createTextItem(text, true);\n      this._updateModel([...this._model, textObject]);\n    }\n  }\n\n  private _close(): void {\n    this._clearInput();\n  }\n\n  private _fetch(): void {\n    this._fetch$.next(null);\n  }\n\n  private _listenKeywordChange(): void {\n    this._keyword$\n      .pipe(\n        filter(() => this.inited),\n        tap((e) => {\n          if (e.data === ',') {\n            this._select({\n              type: DataType.Text,\n              data: this.keyword,\n            });\n            this._clearInput();\n          } else {\n            this.keyword = this.inputEl ? this.inputEl.value.trim() : '';\n          }\n\n          this.data = null;\n        }),\n        debounce(() => {\n          let delay = 0;\n          if (this.keyword.length && this.allowObject) {\n            delay = this.delay;\n          }\n\n          return timer(delay);\n        }),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._fetch$.next(this.keyword);\n      });\n  }\n\n  private _listenFetch(): void {\n    this._fetch$\n      .pipe(\n        filter(() => this.inited),\n        switchMap((keyword) => {\n\n          if (this.allowText) {\n            this.textData = this._createTextItem(keyword, this._validateText(keyword));\n          }\n\n          if (this.allowObject) {\n            this.noResults = false;\n\n            return this._doFetchByKeyword(keyword);\n          } \n\n          return of([]);\n        }),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._cdRef.markForCheck();\n      });\n  }\n\n  private _doFetchByKeyword(keyword: string): Observable<unknown> {\n    return this.fetch(keyword)\n      .pipe(\n        tap((response: unknown) => {\n\n          if (!Array.isArray(response)) {\n            return\n          }\n\n          this.data = response.map(data => {\n            return this._createObjectItem(data);\n          });\n\n          if (this.multiple) {\n            this.data = this.data.filter((item) => {\n              return !this.model.some((model) => {\n                return this.compareWith(model.data, item.data);\n              });\n            });\n          } else {\n            const selected = this.data.find((item) => {\n              return this.model.some((model) => {\n                return this.compareWith(model.data, item.data);\n              });\n            });\n\n            if (selected) {\n              selected.selected = true;\n            }\n          }\n\n          this.noResults = !this.data.length;\n        }),\n      )\n  }\n\n}\n","<ng-container *ngIf=\"inited; else elseInited\">\n  <mat-form-field\n      [ngClass]=\"{ 'mat-form-field-disabled': disabled }\"\n      [floatLabel]=\"initOnClick ? 'always' : 'auto'\"\n      (click)=\"focus()\">\n    <mat-chip-list\n        [tabIndex]=\"-1\"\n        cdkDropListGroup\n        #searchList>\n      <div\n          *ngFor=\"let item of model; let index = index\"\n          cdkDropList\n          [cdkDropListData]=\"{ index: index }\"\n          cdkDropListOrientation=\"horizontal\"\n          (cdkDropListDropped)=\"drop($event)\">\n        <mat-chip\n            [disableRipple]=\"true\"\n            [selectable]=\"!disabled\"\n            [removable]=\"!disabled\"\n            [disabled]=\"disabled\"\n            [class]=\"'fs-autocomplete-chip ' + item.class\"\n            [ngClass]=\"{ \n              imaged: item.image, \n              'size-small': size === 'small', \n              'size-large': size === 'large',\n              'last-chip': model.length - 1 === index\n            }\"\n            [style.backgroundColor]=\"item.background || background\"\n            [style.color]=\"item.color || color\"\n            (keydown)=\"chipKeyDown($event, index)\"\n            (click)=\"chipClick($event)\"\n            [cdkDragDisabled]=\"!orderable || disabled\"\n            [cdkDragData]=\"item\"\n            tabindex=\"-1\"\n            cdkDrag\n            cdkDragHandle>\n          <ng-container\n            [ngTemplateOutlet]=\"itemTemplate\"\n            [ngTemplateOutletContext]=\"{ item: item, selecting: false }\">\n          </ng-container>\n          <ng-container\n            [ngTemplateOutlet]=\"itemSuffixTemplate\"\n            [ngTemplateOutletContext]=\"{ item: item, selecting: false, disabled: disabled }\">\n          </ng-container>\n        </mat-chip>\n      </div>\n\n      <input\n        #input\n        autocomplete=\"off\"\n        [placeholder]=\"placeholder\"\n        [disabled]=\"disabled\"\n        [readonly]=\"readonly\"\n        (input)=\"inputed($event)\"\n        (keydown)=\"keyDown($event)\"\n        (focus)=\"focused($event)\"\n        [name]=\"name\"\n        [matAutocomplete]=\"autocompleteSearch\"\n        [matChipInputFor]=\"searchList\">\n    </mat-chip-list>\n\n    <span *ngIf=\"chipsSuffixTemplate\" matSuffix>\n      <ng-container [ngTemplateOutlet]=\"chipsSuffixTemplate\"></ng-container>\n    </span>\n\n    <span *ngIf=\"!disabled && allowClear\" matSuffix>\n      <mat-icon\n          *ngIf=\"model.length\"\n          class=\"clear\"\n          (click)=\"clearClick($event)\">\n        clear\n      </mat-icon>\n    </span>\n\n    <mat-autocomplete\n        #autocompleteSearch=\"matAutocomplete\"\n        [class]=\"panelClasses\"\n        (optionSelected)=\"optionSelected($event)\"\n        (closed)=\"closed()\"\n        [panelWidth]=\"panelWidth\"\n        [autoActiveFirstOption]=\"true\">\n\n      <ng-container *ngIf=\"keyword && allowText\">\n        <mat-option *ngIf=\"textData.type===dataType.Text\" [value]=\"textData\" [disabled]=\"!textData.valid\">\n          <ng-container\n            [ngTemplateOutlet]=\"itemTemplate\"\n            [ngTemplateOutletContext]=\"{ item: textData }\">\n          </ng-container>\n        </mat-option>\n      </ng-container>        \n      \n      <mat-option\n        [ngClass]=\"{ multiple: multiple }\"\n        class=\"option\"\n        *ngFor=\"let item of data\" [value]=\"item\">\n        <a\n            *ngIf=\"multiple\"\n            class=\"add-icon\"\n            (click)=\"optionClick($event, item, true)\">\n          <mat-icon>add</mat-icon>\n        </a>\n        <div class=\"option-chip\" (click)=\"optionClick($event, item)\">\n          <mat-radio-button *ngIf=\"!multiple\" [checked]=\"item.selected\"></mat-radio-button>\n          <mat-chip\n              (click)=\"optionClick($event, item)\"\n              [disableRipple]=\"true\"\n              [class]=\"'fs-autocomplete-chip ' + item.class\"\n              [ngClass]=\"{ imaged: item.image, 'size-small': size === 'small', 'size-large': size === 'large' }\"\n              [style.backgroundColor]=\"item.background || background\"\n            [style.color]=\"item.color || color\">\n            <ng-container\n              [ngTemplateOutlet]=\"itemTemplate\"\n              [ngTemplateOutletContext]=\"{ item: item, selecting: true }\">\n            </ng-container>\n            <ng-container\n              [ngTemplateOutlet]=\"itemSuffixTemplate\"\n              [ngTemplateOutletContext]=\"{ item: item, selecting: true, disabled: disabled }\">\n            </ng-container>\n          </mat-chip>\n        </div>\n      </mat-option>\n\n      <ng-container *ngIf=\"noResults !== false\">\n        <ng-template\n          *ngIf=\"noResultsTemplate; else noResultsOption\"\n          [ngTemplateOutlet]=\"noResultsTemplate\"\n          [ngTemplateOutletContext]=\"{ keyword: keyword }\">\n        </ng-template>\n        <ng-template #noResultsOption>\n          <mat-option disabled class=\"no-results\">\n            No results <ng-container *ngIf=\"keyword\">for \"{{keyword}}\"</ng-container>\n          </mat-option>\n        </ng-template>\n      </ng-container>\n\n      <ng-container *ngIf=\"staticTemplates.length\">\n        <div class=\"static-templates\">\n          <mat-option\n            *ngFor=\"let staticTemplate of staticTemplates; let i = index\"\n            class=\"static-option\"\n            (click)=\"staticClick($event, i)\">\n            <ng-template *ngTemplateOutlet=\"staticTemplate;context: { test: true }\"></ng-template>\n          </mat-option>\n        </div>\n      </ng-container>\n\n      <mat-option disabled class=\"blank-placeholder\"></mat-option>\n    </mat-autocomplete>\n    <mat-hint *ngIf=\"hint\">{{ hint }}</mat-hint>\n    <input class=\"dummy-input\" #dummyInput tabindex=\"-1\">\n  </mat-form-field>\n</ng-container>\n\n<ng-template #elseInited>\n  <fs-label-field [ngClass]=\"{ 'init-on-click': initOnClick, inited: inited }\">\n    <fs-label>{{placeholder}}</fs-label>\n    <div (click)=\"init()\">\n      <mat-chip-list\n        *ngIf=\"model.length; else none\">\n        <mat-chip\n          class=\"fs-autocomplete-chips-trigger\"\n          *ngFor=\"let item of model\"\n          [disableRipple]=\"true\"\n          [class]=\"'fs-autocomplete-chip ' + item.class\"\n          [disabled]=\"true\"\n          [ngClass]=\"{ imaged: item.image, 'size-small': size === 'small', 'size-large': size === 'large' }\"\n          [style.backgroundColor]=\"item.background || background\"\n          [style.color]=\"item.color || color\">\n          <ng-container\n            [ngTemplateOutlet]=\"itemTemplate\"\n            [ngTemplateOutletContext]=\"{ item: item, selecting: false }\">\n          </ng-container>\n          <ng-container\n            [ngTemplateOutlet]=\"itemSuffixTemplate\"\n            [ngTemplateOutletContext]=\"{ item: item, selecting: false, disabled: disabled }\">\n          </ng-container>\n        </mat-chip>\n      </mat-chip-list>\n    </div>\n    <fs-label-message *ngIf=\"hint\">\n      {{ hint }}\n    </fs-label-message>\n  </fs-label-field>\n\n  <ng-template #none>\n    <span class=\"none-placeholder\" (click)=\"init()\">None</span>\n  </ng-template>\n</ng-template>\n\n<ng-template #itemTemplate let-item=\"item\" let-selecting=\"selecting\">\n  <ng-container *ngIf=\"item.type===dataType.Object\" class=\"item\">\n    <div class=\"item-image\" *ngIf=\"item.image\" [style.backgroundImage]=\"'url(' + item.image + ')'\"></div>\n    <mat-icon class=\"item-icon\" *ngIf=\"item.icon\" [style.color]=\"item.iconColor || item.color\">{{item.icon}}</mat-icon>\n    <span class=\"item-content\">\n      <ng-template\n        [ngTemplateOutlet]=\"objectTemplate\"\n        [ngTemplateOutletContext]=\"{ object: item.data, selecting: selecting }\">\n      </ng-template>\n    </span>\n  </ng-container>\n\n  <ng-container *ngIf=\"item.type===dataType.Text\">\n    {{item.data}}\n  </ng-container>\n</ng-template>\n\n<ng-template #itemSuffixTemplate let-item=\"item\" let-selecting=\"selecting\">\n  <div class=\"item-suffix\">\n    <ng-container\n      *ngIf=\"chipSuffixTemplate\"\n      [ngTemplateOutlet]=\"chipSuffixTemplate\"\n      [ngTemplateOutletContext]=\"{ object: item.data, selecting: selecting, disabled: disabled }\">\n    </ng-container>\n    <a\n        class=\"remove\"\n        *ngIf=\"!selecting && removable && !disabled\"\n        (click)=\"chipRemoved($event, item)\">\n      <mat-icon\n      [style.color]=\"item.color || color\">clear</mat-icon>\n    </a>\n  </div>\n</ng-template>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { FsLabelModule } from '@firestitch/label';\n\nimport { FsAutocompleteChipsComponent } from './components/autocomplete-chips/autocomplete-chips.component';\nimport { FsAutocompleteObjectDirective } from './directives/autocomplete-object/autocomplete-object.directive';\nimport { FsAutocompleteChipsNoResultsDirective } from './directives/autocomplete-no-results/autocomplete-no-results.directive';\nimport { FsAutocompleteChipsStaticDirective } from './directives/static-template/static-template.directive';\nimport { FsAutocompleteChipSuffixDirective } from './directives/chip-suffix/chip-suffix.directive';\nimport { FsAutocompleteChipsSuffixDirective } from './directives/chips-suffix/chips-suffix.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DragDropModule,\n\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatInputModule,\n    MatIconModule,\n    MatRadioModule,\n\n    FsLabelModule,\n  ],\n  exports: [\n    FsAutocompleteChipsComponent,\n    FsAutocompleteObjectDirective,\n    FsAutocompleteChipsStaticDirective,\n    FsAutocompleteChipsNoResultsDirective,\n    FsAutocompleteChipSuffixDirective,\n    FsAutocompleteChipsSuffixDirective,\n  ],\n  declarations: [\n    FsAutocompleteObjectDirective,\n    FsAutocompleteChipsComponent,\n    FsAutocompleteChipsStaticDirective,\n    FsAutocompleteChipsNoResultsDirective,\n    FsAutocompleteChipSuffixDirective,\n    FsAutocompleteChipsSuffixDirective,\n  ],\n})\nexport class FsAutocompleteChipsModule {\n  static forRoot(): ModuleWithProviders<FsAutocompleteChipsModule> {\n    return {\n      ngModule: FsAutocompleteChipsModule,\n    };\n  }\n}\n","/*\n * Public API Surface of fs-menu\n */\n\n// Modules\nexport { FsAutocompleteChipsModule } from './app/fs-autocomplete-chips.module';\n\nexport { FsAutocompleteChipsComponent } from './app/components/autocomplete-chips/autocomplete-chips.component';\nexport { FsAutocompleteObjectDirective } from './app/directives/autocomplete-object/autocomplete-object.directive';\nexport { FsAutocompleteChipsStaticDirective } from './app/directives/static-template/static-template.directive';\nexport { FsAutocompleteChipsNoResultsDirective } from './app/directives/autocomplete-no-results/autocomplete-no-results.directive';\nexport { FsAutocompleteChipSuffixDirective } from './app/directives/chip-suffix/chip-suffix.directive';\nexport { FsAutocompleteChipsSuffixDirective } from './app/directives/chips-suffix/chips-suffix.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAgB,SAAA,cAAc,CAAC,SAAS,EAAE,OAAO,EAAA;IAC/C,IAAI,CAAC,OAAO,EAAE;AACZ,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;IACD,OAAO,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACxD,CAAC;AAEe,SAAA,eAAe,CAAC,KAAK,EAAE,OAAO,EAAA;IAC5C,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAErC,IAAI,CAAC,KAAK,EAAE;AACV,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;IAED,IAAI,CAAC,KAAK,EAAE;AACV,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AAED,IAAA,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAErB,IAAA,OAAO,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACzC;;ACrBA,IAAY,QAGX,CAAA;AAHD,CAAA,UAAY,QAAQ,EAAA;AAClB,IAAA,QAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,QAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAHW,QAAQ,KAAR,QAAQ,GAGnB,EAAA,CAAA,CAAA;;MCGY,6BAA6B,CAAA;;2HAA7B,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;+GAA7B,6BAA6B,EAAA,QAAA,EAAA,sDAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAA7B,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBAHzC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,sDAAsD;AACjE,iBAAA,CAAA;;;MCCY,qCAAqC,CAAA;;mIAArC,qCAAqC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;uHAArC,qCAAqC,EAAA,QAAA,EAAA,gCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAArC,qCAAqC,EAAA,UAAA,EAAA,CAAA;kBAHjD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gCAAgC;AAC3C,iBAAA,CAAA;;;MCCY,kCAAkC,CAAA;AAH/C,IAAA,WAAA,GAAA;AAIY,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACtC,KAAA;;gIAFY,kCAAkC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oHAAlC,kCAAkC,EAAA,QAAA,EAAA,6BAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAAlC,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAH9C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACxC,iBAAA,CAAA;8BAEW,KAAK,EAAA,CAAA;sBAAd,MAAM;;;MCDI,iCAAiC,CAAA;;+HAAjC,iCAAiC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mHAAjC,iCAAiC,EAAA,QAAA,EAAA,4BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAAjC,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAH7C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,4BAA4B;AACvC,iBAAA,CAAA;;;MCCY,kCAAkC,CAAA;;gIAAlC,kCAAkC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oHAAlC,kCAAkC,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAAlC,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAH9C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACxC,iBAAA,CAAA;;;MC8CY,4BAA4B,CAAA;AAwHvC,IAAA,WAAA,CACU,MAAyB,EAAA;QAAzB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAmB;QAvHnB,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;QACb,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QACjB,IAAI,CAAA,IAAA,GAAsB,OAAO,CAAC;QAClC,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;QACjB,IAAS,CAAA,SAAA,GAAG,OAAO,CAAC;QAQpB,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC;QACnB,IAAK,CAAA,KAAA,GAAG,GAAG,CAAC;QAEZ,IAAkB,CAAA,kBAAA,GAAG,EAAE,CAAC;QACxB,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;QACjB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;QACX,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;QAChB,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAClB,IAAK,CAAA,KAAA,GAAG,CAAC,CAAC;QACV,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;QACpB,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC;QACpB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;AASzB,QAAA,IAAA,CAAA,WAAW,GAAG,CAAC,EAAO,EAAE,EAAO,KAAI;AACxC,YAAA,OAAO,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACzB,SAAC,CAAC;QAOK,IAAU,CAAA,UAAA,GAAoB,IAAI,CAAC;AAEzB,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;AAC9B,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;AAC7B,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;AACxB,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAGjD,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC;QAQnB,IAAK,CAAA,KAAA,GAAe,IAAI,CAAC;QAGzB,IAAU,CAAA,UAAA,GAAe,IAAI,CAAC;QAM9B,IAAmB,CAAA,mBAAA,GAAG,IAAI,CAAC;QAG3B,IAAS,CAAA,SAAA,GAAe,IAAI,CAAA;QAG5B,IAAc,CAAA,cAAA,GAA+C,IAAI,CAAC;QAGlE,IAAkB,CAAA,kBAAA,GAAmD,IAAI,CAAC;QAG1E,IAAmB,CAAA,mBAAA,GAAoD,IAAI,CAAC;QAG5E,IAAiB,CAAA,iBAAA,GAAuD,IAAI,CAAC;QAG7E,IAAe,CAAA,eAAA,GAAsD,IAAI,CAAC;QAM1E,IAAQ,CAAA,QAAA,GAA+B,EAAE,CAAC;QAC1C,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QACjB,IAAQ,CAAA,QAAA,GAAG,QAAQ,CAAC;QACpB,IAAO,CAAA,OAAA,GAAW,IAAI,CAAC;QACvB,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAClB,QAAA,IAAA,CAAA,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QAClD,IAAM,CAAA,MAAA,GAAU,EAAE,CAAC;QACnB,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;AAWd,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,OAAO,EAAc,CAAC;AACtC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAU,CAAC;AAChC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;AAC1B,QAAA,IAAA,CAAA,UAAU,GAAG,MAAK,GAAI,CAAC;AACvB,QAAA,IAAA,CAAA,SAAS,GAAG,CAAC,KAAU,KAAI,GAAI,CAAC;AAQtC,QAAA,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACtB;IAjGD,IAAoB,UAAU,CAAC,KAAK,EAAA;QAClC,IAAI,CAAC,YAAY,GAAG;AAClB,YAAA,GAAG,CAAC,gCAAgC,EAAE,6BAA6B,CAAC;YACpE,KAAK;AACN,SAAA,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;;IAOD,IACI,WAAW,CAAC,KAAK,EAAA;AACnB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;AAaM,IAAA,SAAS,CAAC,CAAC,EAAA;QAChB,CAAC,CAAC,cAAc,EAAE,CAAC;KACpB;;AA8CD,IAAA,IAAW,KAAK,GAAA;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;AAED,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;KACrD;IAQM,gBAAgB,CAAC,EAAuB,EAAA,EAAU,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE;IACxE,iBAAiB,CAAC,EAAa,EAAA,EAAU,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE;IAQhE,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QAEhC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;AAEM,IAAA,IAAI,CAAC,OAAO,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,EAAA;AACnC,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,YAAA,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;YAC3B,IAAI,OAAO,CAAC,KAAK,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC5B,aAAA;AACF,SAAA;KACF;AAEM,IAAA,IAAI,CAAC,KAAqC,EAAA;QAC/C,MAAM,aAAa,GAAG,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC;QACzD,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;QAEzC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAEnD,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAClB,YAAA,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACxB,YAAA,IAAI,EAAE,aAAa;AACnB,YAAA,EAAE,EAAE,KAAK;YACT,KAAK,EAAE,IAAI,CAAC,MAAM;AACnB,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;IAEM,SAAS,GAAA;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;AAC7B,YAAA,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,EAAE;AACrC,gBAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC3B,aAAA;AAED,YAAA,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE;AACnC,gBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,OAAO,CAAC,KAAK,EAAA;AAClB,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClC,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;AAEM,IAAA,OAAO,CAAC,KAAoB,EAAA;QACjC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YAClG,OAAO;AACR,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;AACxB,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;AAC3D,YAAA,IAAI,YAAY,EAAE;gBAChB,IAAG,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,EAAE;AAC9C,oBAAA,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;oBACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACxC,iBAAA;qBAAM,IAAG,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE;AACnD,oBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClC,iBAAA;AACF,aAAA;AACF,SAAA;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;AAEM,IAAA,SAAS,CAAC,KAAiB,EAAA;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;IAEM,WAAW,CAAC,KAAoB,EAAE,KAAK,EAAA;QAC5C,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,EAAE;YAC3D,IAAG,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5B,gBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;AACvB,aAAA;AACF,SAAA;KACF;IAEM,WAAW,CAAC,KAAc,EAAE,IAAI,EAAA;QACrC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,KAAK,CAAC,wBAAwB,EAAE,CAAC;AAEjC,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK;aACrB,MAAM,CAAC,CAAC,SAAS,KAAK,SAAS,KAAK,IAAI,CAAC,CAAC;AAE7C,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/B,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;AAEM,IAAA,KAAK,CAAC,OAAO,GAAG,EAAE,KAAK,EAAE,CAAC,EAAC,EAAA;QAChC,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACvB,SAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;KACnB;IAEM,OAAO,GAAA;QACZ,UAAU,CAAC,MAAK;YACd,IAAG,IAAI,CAAC,UAAU,EAAE;AAClB,gBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACvC,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,UAAU,CAAC,KAAoB,EAAA;QACpC,KAAK,CAAC,eAAe,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACjB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;IAEM,KAAK,CAAC,UAAU,GAAG,IAAI,EAAA;AAC5B,QAAA,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,UAAU,EAAE,CAAC;AACnB,SAAA;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;KACvB;IAEM,UAAU,GAAA;QACf,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC5B,YAAA,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,CAAC;AACvC,SAAA;KACF;IAEM,MAAM,GAAA;QACX,UAAU,CAAC,MAAK;YACd,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,IAAI,CAAC,WAAW,EAAE;;AAElB,gBAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,gBAAA,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;AAC9B,aAAA;YACD,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,OAAO,CAAC,CAAC,EAAA;QACd,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,MAAM,EAAE,CAAC;AACd,YAAA,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC;AACtC,SAAA;KACF;AAEM,IAAA,WAAW,CAAC,KAAc,EAAE,KAAU,EAAE,OAAO,GAAG,KAAK,EAAA;QAC5D,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;;QAGvB,IAAG,CAAC,OAAO,EAAE;YACX,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,SAAA;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,YAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,CAAC,UAAU,EAAE,CAAC;AACnB,aAAA;AACF,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,UAAU,EAAE,CAAC;AACnB,SAAA;KACF;AAEM,IAAA,cAAc,CAAC,KAAmC,EAAA;AACvD,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;YACvB,OAAO;AACR,SAAA;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;AAEM,IAAA,UAAU,CAAC,KAAU,EAAA;AAC1B,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;YAE/C,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAI;AACzB,gBAAA,OAAO,OAAO,IAAI,KAAK,QAAQ;AAC/B,oBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;AAC5B,oBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACnC,aAAC,CAAC,CAAC;AAEJ,SAAA;AAAM,aAAA;YACL,KAAK,GAAG,EAAE,CAAC;AACZ,SAAA;AAED,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;KAC5B;IAEM,WAAW,CAAC,KAAoB,EAAE,KAAK,EAAA;QAC5C,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,MAAM,eAAe,GAAuC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;AACnG,QAAA,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACrB,SAAA;KACF;IAEM,WAAW,GAAA;AAChB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;IAEO,UAAU,GAAA;AAChB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAEO,WAAW,GAAA;QACjB,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;AACzB,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACnB;AAEO,IAAA,OAAO,CAAC,QAAQ,EAAE,OAAA,GAA+B,EAAE,EAAA;AACzD,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AAClB,SAAA;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAE1C,YAAA,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;AAC3B,aAAA;AACF,SAAA;AAED,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC5E,QAAA,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAChC,gBAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC1B,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,aAAA;AACF,SAAA;AAED,QAAA,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE;YACnC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAChC,gBAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnC,aAAA;AACF,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;YAEd,UAAU,CAAC,MAAK;gBACd,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC5B,oBAAA,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;AAC3C,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAEO,eAAe,CAAC,IAAI,EAAE,KAAc,EAAA;QAC1C,OAAO;YACL,IAAI;YACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,KAAK;SACN,CAAC;KACH;AAEO,IAAA,iBAAiB,CAAC,IAAI,EAAA;QAC5B,OAAO;YACL,IAAI;YACJ,IAAI,EAAE,QAAQ,CAAC,MAAM;YACrB,KAAK,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC;AACzC,YAAA,SAAS,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,aAAa;AACzE,YAAA,KAAK,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS;AAC7D,YAAA,UAAU,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,cAAc;AAC5E,YAAA,KAAK,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS;SAC9D,CAAC;KACH;AAEO,IAAA,aAAa,CAAC,IAAI,EAAA;QACxB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KACtF;AAEO,IAAA,YAAY,CAAC,KAAK,EAAA;AACxB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,KAAI;YACrC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBACxC,OAAO,IAAI,CAAC,IAAI,CAAC;AAClB,aAAA;AAED,YAAA,OAAO,IAAI,CAAC;AACd,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;AAEO,IAAA,UAAU,CAAC,MAAM,EAAA;AACvB,QAAA,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;KAC7C;AAEO,IAAA,QAAQ,CAAC,IAAI,EAAA;AACnB,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACpD,YAAA,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;AACjD,SAAA;KACF;IAEO,MAAM,GAAA;QACZ,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEO,MAAM,GAAA;AACZ,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;IAEO,oBAAoB,GAAA;AAC1B,QAAA,IAAI,CAAC,SAAS;AACX,aAAA,IAAI,CACH,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,EACzB,GAAG,CAAC,CAAC,CAAC,KAAI;AACR,YAAA,IAAI,CAAC,CAAC,IAAI,KAAK,GAAG,EAAE;gBAClB,IAAI,CAAC,OAAO,CAAC;oBACX,IAAI,EAAE,QAAQ,CAAC,IAAI;oBACnB,IAAI,EAAE,IAAI,CAAC,OAAO;AACnB,iBAAA,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;AAC9D,aAAA;AAED,YAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,SAAC,CAAC,EACF,QAAQ,CAAC,MAAK;YACZ,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC3C,gBAAA,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACpB,aAAA;AAED,YAAA,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC;SACrB,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAC1B;aACA,SAAS,CAAC,MAAK;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClC,SAAC,CAAC,CAAC;KACN;IAEO,YAAY,GAAA;AAClB,QAAA,IAAI,CAAC,OAAO;AACT,aAAA,IAAI,CACH,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,EACzB,SAAS,CAAC,CAAC,OAAO,KAAI;YAEpB,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5E,aAAA;YAED,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAEvB,gBAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACxC,aAAA;AAED,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAC1B;aACA,SAAS,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;AAC7B,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,iBAAiB,CAAC,OAAe,EAAA;AACvC,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AACvB,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,QAAiB,KAAI;AAExB,YAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC5B,OAAM;AACP,aAAA;YAED,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAG;AAC9B,gBAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACtC,aAAC,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,gBAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,KAAI;oBACpC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,KAAI;AAChC,wBAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,qBAAC,CAAC,CAAC;AACL,iBAAC,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,KAAI;oBACvC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,KAAI;AAC/B,wBAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,qBAAC,CAAC,CAAC;AACL,iBAAC,CAAC,CAAC;AAEH,gBAAA,IAAI,QAAQ,EAAE;AACZ,oBAAA,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC1B,iBAAA;AACF,aAAA;YAED,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SACpC,CAAC,CACH,CAAA;KACJ;;0HAriBU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,4BAA4B,g/BAP5B,CAAC;AACV,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,4BAA4B,CAAC;AAC3D,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA,CAAC,EA6EY,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,6BAA6B,EAAU,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,WAAW,EAGlD,EAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,iCAAiC,EAAU,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,WAAW,EAGtD,EAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,kCAAkC,EAAU,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,WAAW,iEAGvD,qCAAqC,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAAU,WAAW,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,SAAA,EAGvD,kCAAkC,EAAA,IAAA,EAAU,WAAW,EAAA,EAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,SAAA,EAGvD,kCAAkC,EArBxC,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,OAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,YAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,YAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,sBAAsB,EAGtB,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAY,EAAU,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,UAAU,EAN7B,EAAA,EAAA,YAAA,EAAA,sBAAA,EAAA,SAAA,EAAA,sBAAsB,gDCpHtC,y6QA6Nc,EAAA,MAAA,EAAA,CAAA,ouKAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,UAAA,EAAA,aAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,wBAAA,EAAA,IAAA,EAAA,2BAAA,EAAA,0BAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,+BAAA,EAAA,wBAAA,EAAA,qBAAA,EAAA,iBAAA,EAAA,2BAAA,CAAA,EAAA,OAAA,EAAA,CAAA,oBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,mBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,UAAA,EAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,0BAAA,EAAA,qBAAA,EAAA,iBAAA,EAAA,oBAAA,EAAA,yBAAA,EAAA,aAAA,EAAA,yBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,mDAAA,EAAA,QAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,CAAA,+BAAA,EAAA,aAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,uBAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,sBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FD1KD,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAXxC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,uBAAuB;AACjC,oBAAA,WAAW,EAAE,qCAAqC;oBAClD,SAAS,EAAE,CAAE,qCAAqC,CAAE;AACpD,oBAAA,SAAS,EAAE,CAAC;AACV,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAE,UAAU,CAAC,kCAAkC,CAAC;AAC3D,4BAAA,KAAK,EAAE,IAAI;yBACZ,CAAC;oBACF,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA,CAAA;wGAGiB,KAAK,EAAA,CAAA;sBAApB,KAAK;gBACU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBACU,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBACU,WAAW,EAAA,CAAA;sBAA1B,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,cAAc,EAAA,CAAA;sBAA7B,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBACU,aAAa,EAAA,CAAA;sBAA5B,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,WAAW,EAAA,CAAA;sBAA1B,KAAK;gBACU,KAAK,EAAA,CAAA;sBAApB,KAAK;gBACU,YAAY,EAAA,CAAA;sBAA3B,KAAK;gBACU,kBAAkB,EAAA,CAAA;sBAAjC,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,UAAU,EAAA,CAAA;sBAAzB,KAAK;gBACU,KAAK,EAAA,CAAA;sBAApB,KAAK;gBACU,UAAU,EAAA,CAAA;sBAAzB,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,KAAK,EAAA,CAAA;sBAApB,KAAK;gBACU,WAAW,EAAA,CAAA;sBAA1B,KAAK;gBACU,YAAY,EAAA,CAAA;sBAA3B,KAAK;gBACU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBACc,UAAU,EAAA,CAAA;sBAA7B,KAAK;gBAQC,WAAW,EAAA,CAAA;sBADjB,KAAK;gBAMF,WAAW,EAAA,CAAA;sBADd,KAAK;uBAAC,UAAU,CAAA;gBAKV,UAAU,EAAA,CAAA;sBADhB,KAAK;gBAGW,QAAQ,EAAA,CAAA;sBAAxB,MAAM;gBACU,OAAO,EAAA,CAAA;sBAAvB,MAAM;gBACU,SAAS,EAAA,CAAA;sBAAzB,MAAM;gBACiB,UAAU,EAAA,CAAA;sBAAjC,MAAM;uBAAC,OAAO,CAAA;gBAGR,WAAW,EAAA,CAAA;sBADjB,WAAW;uBAAC,uBAAuB,CAAA;gBAI7B,SAAS,EAAA,CAAA;sBADf,YAAY;uBAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAM9B,KAAK,EAAA,CAAA;sBADX,SAAS;uBAAC,OAAO,CAAA;gBAIX,UAAU,EAAA,CAAA;sBADhB,SAAS;uBAAC,YAAY,CAAA;gBAIhB,oBAAoB,EAAA,CAAA;sBAD1B,YAAY;uBAAC,sBAAsB,CAAA;gBAI7B,mBAAmB,EAAA,CAAA;sBADzB,SAAS;uBAAC,sBAAsB,CAAA;gBAI1B,SAAS,EAAA,CAAA;sBADf,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,YAAY,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAA;gBAItC,cAAc,EAAA,CAAA;sBADpB,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,6BAA6B,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAA;gBAI3D,kBAAkB,EAAA,CAAA;sBADxB,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,iCAAiC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAA;gBAI/D,mBAAmB,EAAA,CAAA;sBADzB,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,kCAAkC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAA;gBAIhE,iBAAiB,EAAA,CAAA;sBADvB,YAAY;uBAAC,qCAAqC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBAIjF,eAAe,EAAA,CAAA;sBADrB,eAAe;AAAC,gBAAA,IAAA,EAAA,CAAA,kCAAkC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAA;gBAInE,gBAAgB,EAAA,CAAA;sBADtB,eAAe;uBAAC,kCAAkC,CAAA;;;MExFxC,yBAAyB,CAAA;AACpC,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,yBAAyB;SACpC,CAAC;KACH;;uHALU,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,iBARlC,6BAA6B;QAC7B,4BAA4B;QAC5B,kCAAkC;QAClC,qCAAqC;QACrC,iCAAiC;AACjC,QAAA,kCAAkC,aA1BlC,YAAY;QACZ,WAAW;QACX,cAAc;QAEd,qBAAqB;QACrB,cAAc;QACd,cAAc;QACd,aAAa;QACb,cAAc;AAEd,QAAA,aAAa,aAGb,4BAA4B;QAC5B,6BAA6B;QAC7B,kCAAkC;QAClC,qCAAqC;QACrC,iCAAiC;QACjC,kCAAkC,CAAA,EAAA,CAAA,CAAA;AAWzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EA9B3B,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,WAAW;YACX,cAAc;YAEd,qBAAqB;YACrB,cAAc;YACd,cAAc;YACd,aAAa;YACb,cAAc;YAEd,aAAa;AACd,SAAA,CAAA,EAAA,CAAA,CAAA;4FAkBU,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBA/BrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,cAAc;wBAEd,qBAAqB;wBACrB,cAAc;wBACd,cAAc;wBACd,aAAa;wBACb,cAAc;wBAEd,aAAa;AACd,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,4BAA4B;wBAC5B,6BAA6B;wBAC7B,kCAAkC;wBAClC,qCAAqC;wBACrC,iCAAiC;wBACjC,kCAAkC;AACnC,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,6BAA6B;wBAC7B,4BAA4B;wBAC5B,kCAAkC;wBAClC,qCAAqC;wBACrC,iCAAiC;wBACjC,kCAAkC;AACnC,qBAAA;AACF,iBAAA,CAAA;;;ACnDD;;AAEG;;ACFH;;AAEG;;;;"}