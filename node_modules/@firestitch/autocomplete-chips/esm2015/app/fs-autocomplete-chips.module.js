import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MatAutocompleteModule } from '@angular/material/autocomplete';
import { MatChipsModule } from '@angular/material/chips';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { MatRadioModule } from '@angular/material/radio';
import { DragDropModule } from '@angular/cdk/drag-drop';
import { FsLabelModule } from '@firestitch/label';
import { FsAutocompleteChipsComponent } from './components/autocomplete-chips/autocomplete-chips.component';
import { FsAutocompleteObjectDirective } from './directives/autocomplete-object/autocomplete-object.directive';
import { FsAutocompleteChipsNoResultsDirective } from './directives/autocomplete-no-results/autocomplete-no-results.directive';
import { FsAutocompleteChipsStaticDirective } from './directives/static-template/static-template.directive';
import { FsAutocompleteChipSuffixDirective } from './directives/chip-suffix/chip-suffix.directive';
import { FsAutocompleteChipsSuffixDirective } from './directives/chips-suffix/chips-suffix.directive';
import * as i0 from "@angular/core";
export class FsAutocompleteChipsModule {
    static forRoot() {
        return {
            ngModule: FsAutocompleteChipsModule,
        };
    }
}
FsAutocompleteChipsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsAutocompleteChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FsAutocompleteChipsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsAutocompleteChipsModule, declarations: [FsAutocompleteObjectDirective,
        FsAutocompleteChipsComponent,
        FsAutocompleteChipsStaticDirective,
        FsAutocompleteChipsNoResultsDirective,
        FsAutocompleteChipSuffixDirective,
        FsAutocompleteChipsSuffixDirective], imports: [CommonModule,
        FormsModule,
        DragDropModule,
        MatAutocompleteModule,
        MatChipsModule,
        MatInputModule,
        MatIconModule,
        MatRadioModule,
        FsLabelModule], exports: [FsAutocompleteChipsComponent,
        FsAutocompleteObjectDirective,
        FsAutocompleteChipsStaticDirective,
        FsAutocompleteChipsNoResultsDirective,
        FsAutocompleteChipSuffixDirective,
        FsAutocompleteChipsSuffixDirective] });
FsAutocompleteChipsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsAutocompleteChipsModule, imports: [[
            CommonModule,
            FormsModule,
            DragDropModule,
            MatAutocompleteModule,
            MatChipsModule,
            MatInputModule,
            MatIconModule,
            MatRadioModule,
            FsLabelModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsAutocompleteChipsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        DragDropModule,
                        MatAutocompleteModule,
                        MatChipsModule,
                        MatInputModule,
                        MatIconModule,
                        MatRadioModule,
                        FsLabelModule,
                    ],
                    exports: [
                        FsAutocompleteChipsComponent,
                        FsAutocompleteObjectDirective,
                        FsAutocompleteChipsStaticDirective,
                        FsAutocompleteChipsNoResultsDirective,
                        FsAutocompleteChipSuffixDirective,
                        FsAutocompleteChipsSuffixDirective,
                    ],
                    declarations: [
                        FsAutocompleteObjectDirective,
                        FsAutocompleteChipsComponent,
                        FsAutocompleteChipsStaticDirective,
                        FsAutocompleteChipsNoResultsDirective,
                        FsAutocompleteChipSuffixDirective,
                        FsAutocompleteChipsSuffixDirective,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnMtYXV0b2NvbXBsZXRlLWNoaXBzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hcHAvZnMtYXV0b2NvbXBsZXRlLWNoaXBzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWxELE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDhEQUE4RCxDQUFDO0FBQzVHLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGdFQUFnRSxDQUFDO0FBQy9HLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLHdFQUF3RSxDQUFDO0FBQy9ILE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQzVHLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ25HLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLGtEQUFrRCxDQUFDOztBQWtDdEcsTUFBTSxPQUFPLHlCQUF5QjtJQUNwQyxNQUFNLENBQUMsT0FBTztRQUNaLE9BQU87WUFDTCxRQUFRLEVBQUUseUJBQXlCO1NBQ3BDLENBQUM7SUFDSixDQUFDOzt1SEFMVSx5QkFBeUI7d0hBQXpCLHlCQUF5QixpQkFSbEMsNkJBQTZCO1FBQzdCLDRCQUE0QjtRQUM1QixrQ0FBa0M7UUFDbEMscUNBQXFDO1FBQ3JDLGlDQUFpQztRQUNqQyxrQ0FBa0MsYUExQmxDLFlBQVk7UUFDWixXQUFXO1FBQ1gsY0FBYztRQUVkLHFCQUFxQjtRQUNyQixjQUFjO1FBQ2QsY0FBYztRQUNkLGFBQWE7UUFDYixjQUFjO1FBRWQsYUFBYSxhQUdiLDRCQUE0QjtRQUM1Qiw2QkFBNkI7UUFDN0Isa0NBQWtDO1FBQ2xDLHFDQUFxQztRQUNyQyxpQ0FBaUM7UUFDakMsa0NBQWtDO3dIQVd6Qix5QkFBeUIsWUE5QjNCO1lBQ1AsWUFBWTtZQUNaLFdBQVc7WUFDWCxjQUFjO1lBRWQscUJBQXFCO1lBQ3JCLGNBQWM7WUFDZCxjQUFjO1lBQ2QsYUFBYTtZQUNiLGNBQWM7WUFFZCxhQUFhO1NBQ2Q7NEZBa0JVLHlCQUF5QjtrQkEvQnJDLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxjQUFjO3dCQUVkLHFCQUFxQjt3QkFDckIsY0FBYzt3QkFDZCxjQUFjO3dCQUNkLGFBQWE7d0JBQ2IsY0FBYzt3QkFFZCxhQUFhO3FCQUNkO29CQUNELE9BQU8sRUFBRTt3QkFDUCw0QkFBNEI7d0JBQzVCLDZCQUE2Qjt3QkFDN0Isa0NBQWtDO3dCQUNsQyxxQ0FBcUM7d0JBQ3JDLGlDQUFpQzt3QkFDakMsa0NBQWtDO3FCQUNuQztvQkFDRCxZQUFZLEVBQUU7d0JBQ1osNkJBQTZCO3dCQUM3Qiw0QkFBNEI7d0JBQzVCLGtDQUFrQzt3QkFDbEMscUNBQXFDO3dCQUNyQyxpQ0FBaUM7d0JBQ2pDLGtDQUFrQztxQkFDbkM7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBNYXRBdXRvY29tcGxldGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9hdXRvY29tcGxldGUnO1xuaW1wb3J0IHsgTWF0Q2hpcHNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jaGlwcyc7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5pbXBvcnQgeyBNYXRJbnB1dE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2lucHV0JztcbmltcG9ydCB7IE1hdFJhZGlvTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvcmFkaW8nO1xuaW1wb3J0IHsgRHJhZ0Ryb3BNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvZHJhZy1kcm9wJztcblxuaW1wb3J0IHsgRnNMYWJlbE1vZHVsZSB9IGZyb20gJ0BmaXJlc3RpdGNoL2xhYmVsJztcblxuaW1wb3J0IHsgRnNBdXRvY29tcGxldGVDaGlwc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9hdXRvY29tcGxldGUtY2hpcHMvYXV0b2NvbXBsZXRlLWNoaXBzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGc0F1dG9jb21wbGV0ZU9iamVjdERpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9hdXRvY29tcGxldGUtb2JqZWN0L2F1dG9jb21wbGV0ZS1vYmplY3QuZGlyZWN0aXZlJztcbmltcG9ydCB7IEZzQXV0b2NvbXBsZXRlQ2hpcHNOb1Jlc3VsdHNEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvYXV0b2NvbXBsZXRlLW5vLXJlc3VsdHMvYXV0b2NvbXBsZXRlLW5vLXJlc3VsdHMuZGlyZWN0aXZlJztcbmltcG9ydCB7IEZzQXV0b2NvbXBsZXRlQ2hpcHNTdGF0aWNEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvc3RhdGljLXRlbXBsYXRlL3N0YXRpYy10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRnNBdXRvY29tcGxldGVDaGlwU3VmZml4RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NoaXAtc3VmZml4L2NoaXAtc3VmZml4LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBGc0F1dG9jb21wbGV0ZUNoaXBzU3VmZml4RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NoaXBzLXN1ZmZpeC9jaGlwcy1zdWZmaXguZGlyZWN0aXZlJztcblxuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIERyYWdEcm9wTW9kdWxlLFxuXG4gICAgTWF0QXV0b2NvbXBsZXRlTW9kdWxlLFxuICAgIE1hdENoaXBzTW9kdWxlLFxuICAgIE1hdElucHV0TW9kdWxlLFxuICAgIE1hdEljb25Nb2R1bGUsXG4gICAgTWF0UmFkaW9Nb2R1bGUsXG5cbiAgICBGc0xhYmVsTW9kdWxlLFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgRnNBdXRvY29tcGxldGVDaGlwc0NvbXBvbmVudCxcbiAgICBGc0F1dG9jb21wbGV0ZU9iamVjdERpcmVjdGl2ZSxcbiAgICBGc0F1dG9jb21wbGV0ZUNoaXBzU3RhdGljRGlyZWN0aXZlLFxuICAgIEZzQXV0b2NvbXBsZXRlQ2hpcHNOb1Jlc3VsdHNEaXJlY3RpdmUsXG4gICAgRnNBdXRvY29tcGxldGVDaGlwU3VmZml4RGlyZWN0aXZlLFxuICAgIEZzQXV0b2NvbXBsZXRlQ2hpcHNTdWZmaXhEaXJlY3RpdmUsXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIEZzQXV0b2NvbXBsZXRlT2JqZWN0RGlyZWN0aXZlLFxuICAgIEZzQXV0b2NvbXBsZXRlQ2hpcHNDb21wb25lbnQsXG4gICAgRnNBdXRvY29tcGxldGVDaGlwc1N0YXRpY0RpcmVjdGl2ZSxcbiAgICBGc0F1dG9jb21wbGV0ZUNoaXBzTm9SZXN1bHRzRGlyZWN0aXZlLFxuICAgIEZzQXV0b2NvbXBsZXRlQ2hpcFN1ZmZpeERpcmVjdGl2ZSxcbiAgICBGc0F1dG9jb21wbGV0ZUNoaXBzU3VmZml4RGlyZWN0aXZlLFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBGc0F1dG9jb21wbGV0ZUNoaXBzTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxGc0F1dG9jb21wbGV0ZUNoaXBzTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBGc0F1dG9jb21wbGV0ZUNoaXBzTW9kdWxlLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==