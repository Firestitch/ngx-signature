{"version":3,"file":"firestitch-autocomplete.js","sources":["../../src/app/directives/autocomplete-template/autocomplete-template.directive.ts","../../src/app/directives/autocomplete-suffix/autocomplete-suffix.directive.ts","../../src/app/directives/autocomplete-static/autocomplete-static.directive.ts","../../src/app/directives/no-results-template/no-results-template.directive.ts","../../src/app/directives/autocomplete-hint/autocomplete-hint.directive.ts","../../src/app/components/autocomplete/autocomplete.component.ts","../../src/app/components/autocomplete/autocomplete.component.html","../../src/app/fs-autocomplete.module.ts","../../src/public_api.ts","../../src/firestitch-autocomplete.ts"],"sourcesContent":["import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteTemplate]'\n})\nexport class FsAutocompleteTemplateDirective {\n\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteSuffix]'\n})\nexport class FsAutocompleteSuffixDirective {\n\n}\n","import { Directive, Output, EventEmitter, Input, TemplateRef } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteStatic],[fsAutocompleteStaticTemplate]'\n})\nexport class FsAutocompleteStaticDirective {\n\n  @Input()\n  public showWhenKeyword = false\n\n  @Output() selected = new EventEmitter();\n\n  constructor(public templateRef: TemplateRef<any>) {\n  }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteNoResults]'\n})\nexport class FsAutocompleteNoResultsDirective {}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteHint]'\n})\nexport class FsAutocompleteHintDirective {\n\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  QueryList,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NgModel, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { MatAutocompleteTrigger, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatOptionSelectionChange } from '@angular/material/core';\n\nimport { debounceTime, takeUntil, switchMap, tap, filter } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { trim, random, isObject } from 'lodash-es';\n\nimport { FsAutocompleteTemplateDirective } from '../../directives/autocomplete-template/autocomplete-template.directive';\nimport { FsAutocompleteSuffixDirective } from '../../directives/autocomplete-suffix/autocomplete-suffix.directive';\nimport { FsAutocompleteStaticDirective } from '../../directives/autocomplete-static/autocomplete-static.directive';\nimport { FsAutocompleteNoResultsDirective } from '../../directives/no-results-template/no-results-template.directive';\nimport { FsAutocompleteHintDirective } from '../../directives/autocomplete-hint/autocomplete-hint.directive';\n\n\n@Component({\n  selector: 'fs-autocomplete',\n  templateUrl: 'autocomplete.component.html',\n  styleUrls: [ 'autocomplete.component.scss' ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FsAutocompleteComponent),\n      multi: true\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsAutocompleteComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n  @ViewChild(MatAutocompleteTrigger, { static: true }) autocomplete: MatAutocompleteTrigger;\n\n  @ContentChild(FsAutocompleteTemplateDirective, { read: TemplateRef, static: true })\n  public template: TemplateRef<FsAutocompleteTemplateDirective> = null;\n\n  @ContentChildren(FsAutocompleteStaticDirective)\n  public staticTemplates: FsAutocompleteStaticDirective[] = null;\n\n  @ContentChildren(FsAutocompleteStaticDirective)\n  public staticDirectives: QueryList<FsAutocompleteStaticDirective>;\n\n  @ContentChild(FsAutocompleteNoResultsDirective, { read: TemplateRef, static: true })\n  public noResultsTemplate: TemplateRef<FsAutocompleteNoResultsDirective>[] = null;\n\n  @ContentChild(FsAutocompleteSuffixDirective, { read: TemplateRef, static: true })\n  public suffix: TemplateRef<FsAutocompleteSuffixDirective> = null;\n\n  @ContentChild(FsAutocompleteHintDirective, { read: TemplateRef, static: true })\n  public hintTemplate: TemplateRef<FsAutocompleteHintDirective> = null;\n\n  @HostBinding('class.fs-form-wrapper') \n  public formWrapper = true;\n\n  @ViewChild('keywordInput', { static: true }) \n  public keywordInput: ElementRef;\n\n  @ViewChild('keywordNgModel', { static: true }) \n  public keywordNgModel: NgModel;\n\n  @Input() public fetch: Function = null;\n  @Input() public placeholder = '';\n  @Input() public displayWith: Function = null;\n  @Input() public fetchOnFocus = false;\n  @Input() public readonly = false;\n  @Input() public required = false;\n  @Input() public disabled = false;\n  @Input() public hint: string = null;\n  @Input()\n  public panelWidth: string | number = null;\n\n  @Input('panelClass')\n  set setPanelClass(value) {\n    this.panelClasses.push(value);\n  }\n\n  @Input() public set showClear(value: boolean) {\n    this._showClear = value;\n    this._cdRef.detectChanges();\n  }\n\n  public get showClear(): boolean {\n    return this._showClear;\n  }\n\n  @Output() public cleared = new EventEmitter();\n\n  public data: any[] = [];\n  public keyword = '';\n  public panelClasses = ['fs-autocomplete-panel'];\n  public noResults = false;\n  public name = 'autocomplete_'.concat(random(1, 9999999));\n  public model = null;\n  public searching = false;\n\n  private _showClear = true;\n  private _destroy$ = new Subject();\n  private _keyword$ = new Subject();\n  private _ignoreKeys = [\n    'Enter', 'Escape', 'ArrowUp', 'ArrowLeft', 'ArrowRight',\n    'ArrowDown', 'Alt', 'Control', 'Shift',\n  ];\n  private _onTouched = () => { };\n  private _onChange = (value: any) => {};\n\n  public registerOnChange(fn: (value: any) => any): void { this._onChange = fn }\n  public registerOnTouched(fn: () => any): void { this._onTouched = fn }\n\n  constructor(\n    private _cdRef: ChangeDetectorRef,\n  ) {}\n\n  public ngOnInit() {\n    // Because the input display is set natively the delay\n    // ensure its set after this.keyword\n    setTimeout(() => {\n      this._updateKeywordDisplay();\n    });\n\n    // _setValueAndClose() override to change the order of focus() and _onChange()\n    const autocompleteTrigger = (<any>this.autocomplete);\n    autocompleteTrigger._setValueAndClose = (event: MatOptionSelectionChange) => {\n      if (event && event.source) {\n        if (event.source.value.staticOptionIndex === undefined) {\n          autocompleteTrigger._clearPreviousSelectedOption(event.source);\n          autocompleteTrigger._setTriggerValue(event.source.value);\n          autocompleteTrigger._onChange(event.source.value);\n        }\n\n        autocompleteTrigger.autocomplete._emitSelectEvent(event.source);\n      }\n\n      autocompleteTrigger.closePanel();\n    }\n\n    this._keyword$\n      .pipe(\n        debounceTime(150),\n        filter((event: KeyboardEvent) => {\n          return !event || this._ignoreKeys.indexOf(event.key) === -1;\n        }),\n        switchMap((event: any) => {\n          this.data = [];\n          this.searching = true;\n          this._cdRef.markForCheck();\n          return this.fetch(trim(event.target.value))\n            .pipe(\n              tap((response: any) => {\n                this.data = response;\n                this.noResults = !response.length;\n                this._cdRef.markForCheck();\n                this.autocomplete.openPanel();\n                this.searching = false;\n              }),\n              takeUntil(this._destroy$)\n          );\n        }),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._onTouched();\n      });\n  }\n\n  public load() {\n    this.searching = true;\n    this._keyword$.next({ target: { value: this._getKeyword() } });\n  }\n\n  public focus() {\n    this.keywordInput.nativeElement.focus();\n  }\n\n  public inputFocus(e: KeyboardEvent) {\n\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (this.fetchOnFocus) {\n      if (!this.model) {\n        this.load();\n      }\n    }\n  }\n\n  public inputBlur() {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    setTimeout(() => {\n      if (!this.model) {\n        this.clearKeyword();\n      }\n\n      this._updateKeywordDisplay();\n      this.clearResults();\n    }, 200);\n  }\n\n  public display = (data) => {\n    if (data && this.displayWith) {\n      return this.displayWith(data);\n    }\n    return '';\n  }\n\n  public select(value) {\n    if (isObject(value) && value.staticOptionIndex !== undefined) {\n      this.staticSelect(value.staticOptionIndex);\n    } else {\n      this.model = value;\n      this.data = [];\n      this._updateKeywordDisplay();\n      this._onChange(value);\n    }\n\n    this.clearResults();\n  }\n\n  public optionSelected(event: MatAutocompleteSelectedEvent) {\n    this.select(event.option.value);\n    this.autocomplete.closePanel();\n  }\n\n  public close() {\n    this.autocomplete.closePanel();\n  }\n\n  public writeValue(value: any): void {\n    this.model = value;\n    this._updateKeywordDisplay();\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  public input(event) {\n\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (!event.target.value.length) {\n      return this.clear();\n    }\n\n    this._keyword$.next(event);\n  }\n\n  public keyDown(event: KeyboardEvent) {\n\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (event.code === 'Tab') {\n      if (!this.model && this.autocomplete.activeOption) {\n        this.keyword = 'dummy';      \n        this.select(this.autocomplete.activeOption.value);\n      }\n    } else if (event.code === 'Backspace') {\n      if (this.model) {\n        this.model = null;\n        this.clearKeyword();\n      }\n\n    } else if (!this._isWindows() && !this._isMacOS()) {\n\n      if (this._ignoreKeys.indexOf(event.key) === -1) {\n        this.searching = true;\n        this.data = [];\n        if (this.model) {\n          this.clear();\n        }\n      }\n    }\n  }\n\n  public keyUp(event: any) {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (event.code === 'Backspace' && !event.target.value.length) {\n      this.clear();\n      this.load();\n    }\n  }\n\n  public staticSelect(index) {\n    if(!this.model) {\n      this.keywordNgModel.reset();\n    }\n\n    const staticDirective: FsAutocompleteStaticDirective = this.staticDirectives.toArray()[index];\n    staticDirective.selected.emit();\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public clearResults(closePanel = true) {\n    this.data = [];\n    this.noResults = false;\n    \n    if (closePanel) {\n      this.autocomplete.closePanel();\n    }\n  }\n\n  public clear(closePanel = true) {\n    this.model = null;\n    this.clearResults(closePanel);    \n    this.clearKeyword();\n    this._onChange(null);\n  }\n\n  public clearKeyword() {\n    this.keyword = null;\n    this._updateKeywordDisplay();\n  }\n\n  public clearClick(event: KeyboardEvent) {\n    event.stopPropagation();\n    this.clear(false);\n    this.keywordInput.nativeElement.focus();\n    this.cleared.emit();\n  }\n\n  private _updateKeywordDisplay() {\n    const value = this.model ? this.display(this.model) : '';\n    this.keyword = this.model;\n    this.keywordInput.nativeElement.value = value;\n    this._cdRef.markForCheck();\n  }\n\n  private _getKeyword() {\n    return this.keywordInput.nativeElement.value;\n  }\n\n  private _isMacOS() {\n    return navigator.platform.indexOf('Mac') > -1;\n  }\n\n  private _isWindows() {\n    return navigator.platform.indexOf('Win') > -1;\n  }\n\n}\n","<mat-form-field>\n  <mat-label [attr.data-after-content]=\"placeholder\"></mat-label>\n  <input\n    #keywordInput\n    #keywordNgModel=\"ngModel\"\n    matInput\n    type=\"search\"\n    [(ngModel)]=\"keyword\"\n    [name]=\"name\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [required]=\"required\"\n    (focus)=\"inputFocus($event)\"\n    (blur)=\"inputBlur()\"\n    (input)=\"input($event)\"\n    (keydown)=\"keyDown($event)\"\n    (keyup)=\"keyUp($event)\"\n    [matAutocomplete]=\"userAutocompleteInput\">\n\n  <div *ngIf=\"!disabled\" matSuffix>\n    <ng-container\n      [ngTemplateOutlet]=\"suffix\"\n      [ngTemplateOutletContext]=\"{ data: model }\">\n    </ng-container>\n\n    <mat-icon\n      *ngIf=\"showClear && model\"\n      class=\"clear\"\n      (click)=\"clearClick($event)\">clear</mat-icon>\n  </div>\n\n  <mat-autocomplete\n    #userAutocompleteInput=\"matAutocomplete\"\n    [autoActiveFirstOption]=\"true\"\n    [panelWidth]=\"panelWidth\"\n    [class]=\"panelClasses.join(' ')\"\n    [displayWith]=\"display\"\n    (optionSelected)=\"optionSelected($event)\">\n\n    <mat-option *ngFor=\"let item of data\" [value]=\"item\">\n      <ng-container\n        [ngTemplateOutlet]=\"template\"\n        [ngTemplateOutletContext]=\"{ data: item }\">\n      </ng-container>\n    </mat-option>\n\n    <ng-container *ngIf=\"!searching\">\n      <ng-container *ngIf=\"noResults\">\n        <ng-template\n          *ngIf=\"noResultsTemplate; else noResultsOption\"\n          [ngTemplateOutlet]=\"noResultsTemplate\"\n          [ngTemplateOutletContext]=\"{ $implicit: keyword }\">\n        </ng-template>\n        <ng-template #noResultsOption>\n          <mat-option disabled class=\"no-results\">\n            No results <ng-container *ngIf=\"keyword\">for \"{{keyword}}\"</ng-container>\n          </mat-option>\n        </ng-template>\n      </ng-container>\n\n      <ng-container *ngIf=\"!model && (!searching || keyword) && staticTemplates?.length\">\n        <div class=\"static-templates\">\n          <ng-container *ngFor=\"let staticTemplate of staticTemplates; let i = index\">\n            <ng-container *ngIf=\"!staticTemplate.showWhenKeyword || !!keyword\">\n              <mat-option\n                class=\"static-option\"\n                [value]=\"{ staticOptionIndex: i }\"\n                [ngClass]=\"{ 'static-option-first': !i }\">\n                <ng-template\n                  [ngTemplateOutlet]=\"staticTemplate.templateRef\"\n                  [ngTemplateOutletContext]=\"{ $implicit: keyword }\"\n                ></ng-template>\n              </mat-option>\n            </ng-container>\n          </ng-container>\n        </div>\n      </ng-container>\n    </ng-container>\n  </mat-autocomplete>\n\n  <mat-hint *ngIf=\"hint\">{{ hint }}</mat-hint>\n  <mat-hint *ngIf=\"hintTemplate\">\n    <ng-container\n      [ngTemplateOutlet]=\"hintTemplate\">\n    </ng-container>\n  </mat-hint>\n</mat-form-field>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { FsAutocompleteComponent } from './components/autocomplete/autocomplete.component';\nimport { FsAutocompleteTemplateDirective } from './directives/autocomplete-template/autocomplete-template.directive';\nimport { FsAutocompleteSuffixDirective } from './directives/autocomplete-suffix/autocomplete-suffix.directive';\nimport { FsAutocompleteStaticDirective } from './directives/autocomplete-static/autocomplete-static.directive';\nimport { FsAutocompleteNoResultsDirective } from './directives/no-results-template/no-results-template.directive';\nimport { FsAutocompleteHintDirective } from './directives/autocomplete-hint/autocomplete-hint.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatInputModule,\n    MatIconModule,\n  ],\n  exports: [\n    FsAutocompleteComponent,\n    FsAutocompleteTemplateDirective,\n    FsAutocompleteSuffixDirective,\n    FsAutocompleteStaticDirective,\n    FsAutocompleteNoResultsDirective,\n    FsAutocompleteHintDirective,\n  ],\n  declarations: [\n    FsAutocompleteComponent,\n    FsAutocompleteTemplateDirective,\n    FsAutocompleteSuffixDirective,\n    FsAutocompleteStaticDirective,\n    FsAutocompleteNoResultsDirective,\n    FsAutocompleteHintDirective,\n  ],\n  providers: [\n  ],\n})\nexport class FsAutocompleteModule {\n}\n","/*\n * Public API Surface of ngx-autocomplete\n */\n\n// Modules\nexport { FsAutocompleteModule } from './app/fs-autocomplete.module';\n\n// Components\nexport { FsAutocompleteComponent } from './app/components/autocomplete/autocomplete.component';\n\n// Services\n// export { FsMessage } from './app/message.service';\n\nexport { FsAutocompleteSuffixDirective } from './app/directives/autocomplete-suffix/autocomplete-suffix.directive';\nexport { FsAutocompleteNoResultsDirective } from './app/directives/no-results-template/no-results-template.directive';\nexport { FsAutocompleteTemplateDirective } from './app/directives/autocomplete-template/autocomplete-template.directive';\nexport { FsAutocompleteStaticDirective } from './app/directives/autocomplete-static/autocomplete-static.directive';\nexport { FsAutocompleteHintDirective } from './app/directives/autocomplete-hint/autocomplete-hint.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}