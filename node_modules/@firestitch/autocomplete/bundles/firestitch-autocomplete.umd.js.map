{"version":3,"file":"firestitch-autocomplete.umd.js","sources":["../../src/app/directives/autocomplete-template/autocomplete-template.directive.ts","../../src/app/directives/autocomplete-suffix/autocomplete-suffix.directive.ts","../../src/app/directives/autocomplete-static/autocomplete-static.directive.ts","../../src/app/directives/no-results-template/no-results-template.directive.ts","../../src/app/directives/autocomplete-hint/autocomplete-hint.directive.ts","../../src/app/components/autocomplete/autocomplete.component.ts","../../src/app/components/autocomplete/autocomplete.component.html","../../src/app/fs-autocomplete.module.ts","../../src/public_api.ts","../../src/firestitch-autocomplete.ts"],"sourcesContent":["import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteTemplate]'\n})\nexport class FsAutocompleteTemplateDirective {\n\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteSuffix]'\n})\nexport class FsAutocompleteSuffixDirective {\n\n}\n","import { Directive, Output, EventEmitter, Input, TemplateRef } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteStatic],[fsAutocompleteStaticTemplate]'\n})\nexport class FsAutocompleteStaticDirective {\n\n  @Input()\n  public showWhenKeyword = false\n\n  @Output() selected = new EventEmitter();\n\n  constructor(public templateRef: TemplateRef<any>) {\n  }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteNoResults]'\n})\nexport class FsAutocompleteNoResultsDirective {}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n  selector: '[fsAutocompleteHint]'\n})\nexport class FsAutocompleteHintDirective {\n\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  QueryList,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NgModel, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { MatAutocompleteTrigger, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatOptionSelectionChange } from '@angular/material/core';\n\nimport { debounceTime, takeUntil, switchMap, tap, filter } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { trim, random, isObject } from 'lodash-es';\n\nimport { FsAutocompleteTemplateDirective } from '../../directives/autocomplete-template/autocomplete-template.directive';\nimport { FsAutocompleteSuffixDirective } from '../../directives/autocomplete-suffix/autocomplete-suffix.directive';\nimport { FsAutocompleteStaticDirective } from '../../directives/autocomplete-static/autocomplete-static.directive';\nimport { FsAutocompleteNoResultsDirective } from '../../directives/no-results-template/no-results-template.directive';\nimport { FsAutocompleteHintDirective } from '../../directives/autocomplete-hint/autocomplete-hint.directive';\n\n\n@Component({\n  selector: 'fs-autocomplete',\n  templateUrl: 'autocomplete.component.html',\n  styleUrls: [ 'autocomplete.component.scss' ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FsAutocompleteComponent),\n      multi: true\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsAutocompleteComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n  @ViewChild(MatAutocompleteTrigger, { static: true }) autocomplete: MatAutocompleteTrigger;\n\n  @ContentChild(FsAutocompleteTemplateDirective, { read: TemplateRef, static: true })\n  public template: TemplateRef<FsAutocompleteTemplateDirective> = null;\n\n  @ContentChildren(FsAutocompleteStaticDirective)\n  public staticTemplates: FsAutocompleteStaticDirective[] = null;\n\n  @ContentChildren(FsAutocompleteStaticDirective)\n  public staticDirectives: QueryList<FsAutocompleteStaticDirective>;\n\n  @ContentChild(FsAutocompleteNoResultsDirective, { read: TemplateRef, static: true })\n  public noResultsTemplate: TemplateRef<FsAutocompleteNoResultsDirective>[] = null;\n\n  @ContentChild(FsAutocompleteSuffixDirective, { read: TemplateRef, static: true })\n  public suffix: TemplateRef<FsAutocompleteSuffixDirective> = null;\n\n  @ContentChild(FsAutocompleteHintDirective, { read: TemplateRef, static: true })\n  public hintTemplate: TemplateRef<FsAutocompleteHintDirective> = null;\n\n  @HostBinding('class.fs-form-wrapper') \n  public formWrapper = true;\n\n  @ViewChild('keywordInput', { static: true }) \n  public keywordInput: ElementRef;\n\n  @ViewChild('keywordNgModel', { static: true }) \n  public keywordNgModel: NgModel;\n\n  @Input() public fetch: Function = null;\n  @Input() public placeholder = '';\n  @Input() public displayWith: Function = null;\n  @Input() public fetchOnFocus = false;\n  @Input() public readonly = false;\n  @Input() public required = false;\n  @Input() public disabled = false;\n  @Input() public hint: string = null;\n  @Input()\n  public panelWidth: string | number = null;\n\n  @Input('panelClass')\n  set setPanelClass(value) {\n    this.panelClasses.push(value);\n  }\n\n  @Input() public set showClear(value: boolean) {\n    this._showClear = value;\n    this._cdRef.detectChanges();\n  }\n\n  public get showClear(): boolean {\n    return this._showClear;\n  }\n\n  @Output() public cleared = new EventEmitter();\n\n  public data: any[] = [];\n  public keyword = '';\n  public panelClasses = ['fs-autocomplete-panel'];\n  public noResults = false;\n  public name = 'autocomplete_'.concat(random(1, 9999999));\n  public model = null;\n  public searching = false;\n\n  private _showClear = true;\n  private _destroy$ = new Subject();\n  private _keyword$ = new Subject();\n  private _ignoreKeys = [\n    'Enter', 'Escape', 'ArrowUp', 'ArrowLeft', 'ArrowRight',\n    'ArrowDown', 'Alt', 'Control', 'Shift',\n  ];\n  private _onTouched = () => { };\n  private _onChange = (value: any) => {};\n\n  public registerOnChange(fn: (value: any) => any): void { this._onChange = fn }\n  public registerOnTouched(fn: () => any): void { this._onTouched = fn }\n\n  constructor(\n    private _cdRef: ChangeDetectorRef,\n  ) {}\n\n  public ngOnInit() {\n    // Because the input display is set natively the delay\n    // ensure its set after this.keyword\n    setTimeout(() => {\n      this._updateKeywordDisplay();\n    });\n\n    // _setValueAndClose() override to change the order of focus() and _onChange()\n    const autocompleteTrigger = (<any>this.autocomplete);\n    autocompleteTrigger._setValueAndClose = (event: MatOptionSelectionChange) => {\n      if (event && event.source) {\n        if (event.source.value.staticOptionIndex === undefined) {\n          autocompleteTrigger._clearPreviousSelectedOption(event.source);\n          autocompleteTrigger._setTriggerValue(event.source.value);\n          autocompleteTrigger._onChange(event.source.value);\n        }\n\n        autocompleteTrigger.autocomplete._emitSelectEvent(event.source);\n      }\n\n      autocompleteTrigger.closePanel();\n    }\n\n    this._keyword$\n      .pipe(\n        debounceTime(150),\n        filter((event: KeyboardEvent) => {\n          return !event || this._ignoreKeys.indexOf(event.key) === -1;\n        }),\n        switchMap((event: any) => {\n          this.data = [];\n          this.searching = true;\n          this._cdRef.markForCheck();\n          return this.fetch(trim(event.target.value))\n            .pipe(\n              tap((response: any) => {\n                this.data = response;\n                this.noResults = !response.length;\n                this._cdRef.markForCheck();\n                this.autocomplete.openPanel();\n                this.searching = false;\n              }),\n              takeUntil(this._destroy$)\n          );\n        }),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._onTouched();\n      });\n  }\n\n  public load() {\n    this.searching = true;\n    this._keyword$.next({ target: { value: this._getKeyword() } });\n  }\n\n  public focus() {\n    this.keywordInput.nativeElement.focus();\n  }\n\n  public inputFocus(e: KeyboardEvent) {\n\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (this.fetchOnFocus) {\n      if (!this.model) {\n        this.load();\n      }\n    }\n  }\n\n  public inputBlur() {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    setTimeout(() => {\n      if (!this.model) {\n        this.clearKeyword();\n      }\n\n      this._updateKeywordDisplay();\n      this.clearResults();\n    }, 200);\n  }\n\n  public display = (data) => {\n    if (data && this.displayWith) {\n      return this.displayWith(data);\n    }\n    return '';\n  }\n\n  public select(value) {\n    if (isObject(value) && value.staticOptionIndex !== undefined) {\n      this.staticSelect(value.staticOptionIndex);\n    } else {\n      this.model = value;\n      this.data = [];\n      this._updateKeywordDisplay();\n      this._onChange(value);\n    }\n\n    this.clearResults();\n  }\n\n  public optionSelected(event: MatAutocompleteSelectedEvent) {\n    this.select(event.option.value);\n    this.autocomplete.closePanel();\n  }\n\n  public close() {\n    this.autocomplete.closePanel();\n  }\n\n  public writeValue(value: any): void {\n    this.model = value;\n    this._updateKeywordDisplay();\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  public input(event) {\n\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (!event.target.value.length) {\n      return this.clear();\n    }\n\n    this._keyword$.next(event);\n  }\n\n  public keyDown(event: KeyboardEvent) {\n\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (event.code === 'Tab') {\n      if (!this.model && this.autocomplete.activeOption) {\n        this.keyword = 'dummy';      \n        this.select(this.autocomplete.activeOption.value);\n      }\n    } else if (event.code === 'Backspace') {\n      if (this.model) {\n        this.model = null;\n        this.clearKeyword();\n      }\n\n    } else if (!this._isWindows() && !this._isMacOS()) {\n\n      if (this._ignoreKeys.indexOf(event.key) === -1) {\n        this.searching = true;\n        this.data = [];\n        if (this.model) {\n          this.clear();\n        }\n      }\n    }\n  }\n\n  public keyUp(event: any) {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n\n    if (event.code === 'Backspace' && !event.target.value.length) {\n      this.clear();\n      this.load();\n    }\n  }\n\n  public staticSelect(index) {\n    if(!this.model) {\n      this.keywordNgModel.reset();\n    }\n\n    const staticDirective: FsAutocompleteStaticDirective = this.staticDirectives.toArray()[index];\n    staticDirective.selected.emit();\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public clearResults(closePanel = true) {\n    this.data = [];\n    this.noResults = false;\n    \n    if (closePanel) {\n      this.autocomplete.closePanel();\n    }\n  }\n\n  public clear(closePanel = true) {\n    this.model = null;\n    this.clearResults(closePanel);    \n    this.clearKeyword();\n    this._onChange(null);\n  }\n\n  public clearKeyword() {\n    this.keyword = null;\n    this._updateKeywordDisplay();\n  }\n\n  public clearClick(event: KeyboardEvent) {\n    event.stopPropagation();\n    this.clear(false);\n    this.keywordInput.nativeElement.focus();\n    this.cleared.emit();\n  }\n\n  private _updateKeywordDisplay() {\n    const value = this.model ? this.display(this.model) : '';\n    this.keyword = this.model;\n    this.keywordInput.nativeElement.value = value;\n    this._cdRef.markForCheck();\n  }\n\n  private _getKeyword() {\n    return this.keywordInput.nativeElement.value;\n  }\n\n  private _isMacOS() {\n    return navigator.platform.indexOf('Mac') > -1;\n  }\n\n  private _isWindows() {\n    return navigator.platform.indexOf('Win') > -1;\n  }\n\n}\n","<mat-form-field>\n  <mat-label [attr.data-after-content]=\"placeholder\"></mat-label>\n  <input\n    #keywordInput\n    #keywordNgModel=\"ngModel\"\n    matInput\n    type=\"search\"\n    [(ngModel)]=\"keyword\"\n    [name]=\"name\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [required]=\"required\"\n    (focus)=\"inputFocus($event)\"\n    (blur)=\"inputBlur()\"\n    (input)=\"input($event)\"\n    (keydown)=\"keyDown($event)\"\n    (keyup)=\"keyUp($event)\"\n    [matAutocomplete]=\"userAutocompleteInput\">\n\n  <div *ngIf=\"!disabled\" matSuffix>\n    <ng-container\n      [ngTemplateOutlet]=\"suffix\"\n      [ngTemplateOutletContext]=\"{ data: model }\">\n    </ng-container>\n\n    <mat-icon\n      *ngIf=\"showClear && model\"\n      class=\"clear\"\n      (click)=\"clearClick($event)\">clear</mat-icon>\n  </div>\n\n  <mat-autocomplete\n    #userAutocompleteInput=\"matAutocomplete\"\n    [autoActiveFirstOption]=\"true\"\n    [panelWidth]=\"panelWidth\"\n    [class]=\"panelClasses.join(' ')\"\n    [displayWith]=\"display\"\n    (optionSelected)=\"optionSelected($event)\">\n\n    <mat-option *ngFor=\"let item of data\" [value]=\"item\">\n      <ng-container\n        [ngTemplateOutlet]=\"template\"\n        [ngTemplateOutletContext]=\"{ data: item }\">\n      </ng-container>\n    </mat-option>\n\n    <ng-container *ngIf=\"!searching\">\n      <ng-container *ngIf=\"noResults\">\n        <ng-template\n          *ngIf=\"noResultsTemplate; else noResultsOption\"\n          [ngTemplateOutlet]=\"noResultsTemplate\"\n          [ngTemplateOutletContext]=\"{ $implicit: keyword }\">\n        </ng-template>\n        <ng-template #noResultsOption>\n          <mat-option disabled class=\"no-results\">\n            No results <ng-container *ngIf=\"keyword\">for \"{{keyword}}\"</ng-container>\n          </mat-option>\n        </ng-template>\n      </ng-container>\n\n      <ng-container *ngIf=\"!model && (!searching || keyword) && staticTemplates?.length\">\n        <div class=\"static-templates\">\n          <ng-container *ngFor=\"let staticTemplate of staticTemplates; let i = index\">\n            <ng-container *ngIf=\"!staticTemplate.showWhenKeyword || !!keyword\">\n              <mat-option\n                class=\"static-option\"\n                [value]=\"{ staticOptionIndex: i }\"\n                [ngClass]=\"{ 'static-option-first': !i }\">\n                <ng-template\n                  [ngTemplateOutlet]=\"staticTemplate.templateRef\"\n                  [ngTemplateOutletContext]=\"{ $implicit: keyword }\"\n                ></ng-template>\n              </mat-option>\n            </ng-container>\n          </ng-container>\n        </div>\n      </ng-container>\n    </ng-container>\n  </mat-autocomplete>\n\n  <mat-hint *ngIf=\"hint\">{{ hint }}</mat-hint>\n  <mat-hint *ngIf=\"hintTemplate\">\n    <ng-container\n      [ngTemplateOutlet]=\"hintTemplate\">\n    </ng-container>\n  </mat-hint>\n</mat-form-field>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { FsAutocompleteComponent } from './components/autocomplete/autocomplete.component';\nimport { FsAutocompleteTemplateDirective } from './directives/autocomplete-template/autocomplete-template.directive';\nimport { FsAutocompleteSuffixDirective } from './directives/autocomplete-suffix/autocomplete-suffix.directive';\nimport { FsAutocompleteStaticDirective } from './directives/autocomplete-static/autocomplete-static.directive';\nimport { FsAutocompleteNoResultsDirective } from './directives/no-results-template/no-results-template.directive';\nimport { FsAutocompleteHintDirective } from './directives/autocomplete-hint/autocomplete-hint.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatInputModule,\n    MatIconModule,\n  ],\n  exports: [\n    FsAutocompleteComponent,\n    FsAutocompleteTemplateDirective,\n    FsAutocompleteSuffixDirective,\n    FsAutocompleteStaticDirective,\n    FsAutocompleteNoResultsDirective,\n    FsAutocompleteHintDirective,\n  ],\n  declarations: [\n    FsAutocompleteComponent,\n    FsAutocompleteTemplateDirective,\n    FsAutocompleteSuffixDirective,\n    FsAutocompleteStaticDirective,\n    FsAutocompleteNoResultsDirective,\n    FsAutocompleteHintDirective,\n  ],\n  providers: [\n  ],\n})\nexport class FsAutocompleteModule {\n}\n","/*\n * Public API Surface of ngx-autocomplete\n */\n\n// Modules\nexport { FsAutocompleteModule } from './app/fs-autocomplete.module';\n\n// Components\nexport { FsAutocompleteComponent } from './app/components/autocomplete/autocomplete.component';\n\n// Services\n// export { FsMessage } from './app/message.service';\n\nexport { FsAutocompleteSuffixDirective } from './app/directives/autocomplete-suffix/autocomplete-suffix.directive';\nexport { FsAutocompleteNoResultsDirective } from './app/directives/no-results-template/no-results-template.directive';\nexport { FsAutocompleteTemplateDirective } from './app/directives/autocomplete-template/autocomplete-template.directive';\nexport { FsAutocompleteStaticDirective } from './app/directives/autocomplete-static/autocomplete-static.directive';\nexport { FsAutocompleteHintDirective } from './app/directives/autocomplete-hint/autocomplete-hint.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0","Directive","EventEmitter","Input","Output","random","Subject","debounceTime","filter","switchMap","trim","tap","takeUntil","isObject","NG_VALUE_ACCESSOR","forwardRef","TemplateRef","MatAutocompleteTrigger","i1","i2","i3","i4","i5","i6","i7","Component","ChangeDetectionStrategy","ViewChild","ContentChild","ContentChildren","HostBinding","CommonModule","FormsModule","MatAutocompleteModule","MatChipsModule","MatInputModule","MatIconModule","NgModule"],"mappings":"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"}