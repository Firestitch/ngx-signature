{"version":3,"file":"firestitch-dialog.js","sources":["../../src/app/components/fs-dialog/fs-dialog.component.ts","../../src/app/serivces/fs-dialog-router.ts","../../src/app/components/route/route.component.ts","../../src/app/fs-dialog.module.ts","../../src/app/serivces/fs-dialog.ts","../../src/public_api.ts","../../src/firestitch-dialog.ts"],"sourcesContent":["import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  Optional,\n  SkipSelf\n} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'fs-dialog',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDialogComponent implements AfterContentInit, OnDestroy {\n\n  @Input('mobileMode') mobileMode = 'full';\n\n  constructor(@Optional() @SkipSelf() private _dialogRef: MatDialogRef<any>) {}\n\n  ngAfterContentInit() {\n\n    const mobileMode = 'fs-dialog-mobile-mode-' + this.mobileMode;\n\n    if (this._dialogRef) {\n      const pane = (<any>this._dialogRef)._overlayRef.overlayElement;\n\n      if (pane) {\n        pane.classList.add('fs-dialog-overlay-pane');\n        pane.classList.add(mobileMode);\n      }\n\n      const backdrop = (<any>this._dialogRef)._overlayRef.backdropElement;\n\n      if (backdrop) {\n        backdrop.classList.add('fs-dialog-overlay-backdrop');\n        backdrop.classList.add(mobileMode);\n      }\n    }\n\n    (<any>window).document.body.classList.add('fs-dialog-open', mobileMode);\n  }\n\n  ngOnDestroy() {\n    (<any>window).document.body.classList.remove('fs-dialog-open', `fs-dialog-mobile-mode-${this.mobileMode}`);\n  }\n}\n","import { Injectable, Type } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\n\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\n\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FsDialogRouter {\n\n  private _activeDialogs: WeakMap<Type<any>, MatDialogRef<unknown>> = new WeakMap();\n\n  private _dialogOpened$ = new BehaviorSubject<void>(null);\n\n  constructor(\n    private _router: Router,\n    private _dialog: MatDialog,\n  ) {\n  }\n\n  public openDialogForRoute(\n    component: ComponentType<unknown>,\n    config: MatDialogConfig<unknown>,\n  ): MatDialogRef<unknown, unknown> {\n    const dialog = this.openDialog(component, config);\n\n    this._registerDialog(component, dialog);\n\n    return dialog;\n  }\n\n  public navigate(commands: any[], extras?: NavigationExtras): Promise<boolean> {\n    return this._router.navigate(commands, extras);\n  }\n\n  public openDialog<T, D = any, R = any>(component: ComponentType<T>, config?: MatDialogConfig<D>): MatDialogRef<T, R> {\n    const dialog = this._dialog.open<T, D, R>(component, config);\n\n    this._registerDialog(component, dialog);\n\n    return dialog;\n  }\n\n  public dialogRef$(component: Type<any>): Observable<MatDialogRef<any>> {\n    return this._dialogOpened$\n      .pipe(\n        filter(() => {\n          return this._activeDialogs.has(component);\n        }),\n        map(() => this._activeDialogs.get(component)),\n      );\n  }\n\n  private _registerDialog(component: Type<any>, ref: MatDialogRef<unknown, unknown>): void {\n    if (!this._activeDialogs.has(component)) {\n      this._activeDialogs.set(component, ref);\n\n      this._listenDialogClose(component, ref);\n\n      this._dialogOpened$.next();\n    }\n  }\n\n  private _listenDialogClose(component: Type<any>, ref: MatDialogRef<unknown, unknown>): void {\n    ref.afterClosed()\n      .pipe(\n        take(1)\n      )\n      .subscribe(() => {\n        this._activeDialogs.delete(component);\n      })\n\n  }\n}\n","import { Component, ComponentFactoryResolver, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from '@angular/router';\n\nimport { MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { merge, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { FsDialogRouter } from '../../serivces/fs-dialog-router';\nimport { IFsDialogRouteConfig } from '../../interfaces/route-data.interface';\n\n\n@Component({\n  template: '<router-outlet></router-outlet>',\n})\nexport class FsDialogRouteComponent implements OnInit, OnDestroy {\n\n  private _dialog: MatDialogRef<unknown, unknown>;\n  private _hasActiveNavigation = false;\n  private _destroy$ = new Subject<void>();\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _dialogRouter: FsDialogRouter,\n    private _componentFactory: ComponentFactoryResolver,\n    private _viewContainerRef?: ViewContainerRef\n  ) {}\n\n  public ngOnInit(): void {\n    this._listenNavigationEvents();\n    this.openDialog();\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  public async openDialog(): Promise<void> {\n    const dialogConfig: IFsDialogRouteConfig = { ...this._route.snapshot.data?.fsDialog };\n\n    if (dialogConfig?.component) {\n      if (dialogConfig.component instanceof Promise) {\n        this._dialog = await this._openLazyDialog(dialogConfig);\n      } else {\n        this._dialog = this._openDialog(dialogConfig);\n      }\n\n      this._listenDialogClose();\n    }\n  }\n\n  private _listenNavigationEvents(): void {\n    this._router.events\n      .pipe(\n        filter((event) => {\n          return event instanceof NavigationStart\n        }),\n        takeUntil(this._destroy$),\n      )\n      .subscribe((event) => {\n        this._hasActiveNavigation = true;\n      });\n\n    this._router.events\n      .pipe(\n        filter((event) => {\n          return event instanceof NavigationEnd\n        }),\n        takeUntil(this._destroy$),\n      )\n      .subscribe((event) => {\n        this._hasActiveNavigation = false;\n      })\n  }\n\n  private _listenDialogClose(): void {\n    merge(\n      this._dialog.afterClosed(),\n    )\n      .pipe(\n        filter(() => !this._hasActiveNavigation),\n        takeUntil(this._destroy$),\n      )\n      .subscribe(() => {\n        this._navigateOutFromDialog();\n      });\n  }\n\n  private _navigateOutFromDialog(): void {\n    let stepsBack = 1;\n    let route = this._route.parent;\n\n    // we are looking for parent route to navigate from current dialog\n    // but we have to skip routes like loadChildren or redirectTo\n    // because it does not make sence to do navigation to them\n    while (route.routeConfig && (route.routeConfig.redirectTo || route.routeConfig.path === '') && route.parent) {\n      stepsBack++;\n\n      if (route.routeConfig.path === '' && route.parent?.routeConfig.loadChildren && route.parent?.parent) {\n        route = route.parent.parent\n      } else {\n        route = route.parent;\n      }\n    }\n\n    // make relative navigation path like '../../../';\n    const navigationPath = Array\n      .from(Array(stepsBack), () => '../')\n      .join('');\n\n    // Do it!\n    this._router.navigate([navigationPath], { relativeTo: this._route, queryParamsHandling: 'merge' });\n  }\n\n  private async _openLazyDialog(dialogConfig: IFsDialogRouteConfig): Promise<MatDialogRef<unknown, unknown>> {\n    const loadedComponent = await dialogConfig.component;\n    const componentName = Object.keys(loadedComponent)[0];\n\n    if (!componentName) {\n      throw Error('Lazy loading dialog component error! Component not found!')\n    }\n\n    const factory = this._componentFactory.resolveComponentFactory(loadedComponent[componentName])\n    dialogConfig.component = factory.componentType;\n\n    return this._openDialog(dialogConfig);\n  }\n\n  private _openDialog(routeDialogConfig: IFsDialogRouteConfig): MatDialogRef<unknown, unknown> {\n    const {component: dialogComponent, ...dialogConfig}:\n      { component: ComponentType<unknown> } & MatDialogConfig<unknown> = routeDialogConfig;\n\n    dialogConfig.viewContainerRef = this._viewContainerRef;\n\n    return this._dialogRouter.openDialogForRoute(dialogComponent, dialogConfig);\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MAT_DIALOG_DEFAULT_OPTIONS, MatDialogModule } from '@angular/material/dialog';\n\nimport { FsDialogComponent } from './components/fs-dialog/fs-dialog.component';\nimport { FsDialogRouteComponent } from './components/route/route.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n  ],\n  declarations: [\n    FsDialogComponent,\n    FsDialogRouteComponent,\n  ],\n  exports: [\n    MatDialogModule,\n    FsDialogComponent,\n    FsDialogRouteComponent,\n  ]\n})\nexport class FsDialogModule {\n  static forRoot(): ModuleWithProviders<FsDialogModule> {\n    return {\n      ngModule: FsDialogModule,\n      providers: [\n        {\n          provide: MAT_DIALOG_DEFAULT_OPTIONS,\n          useValue: {\n            panelClass: 'fs-dialog-overlay-pane',\n            maxWidth: '95vw',\n            disableClose: false,\n            autoFocus: true,\n            hasBackdrop: true\n          }\n        },\n      ]\n    };\n  }\n}\n","import { Injectable, Type } from '@angular/core';\nimport { NavigationExtras } from '@angular/router';\n\nimport { MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\n\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { Observable } from 'rxjs';\n\nimport { FsDialogRouter } from './fs-dialog-router';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FsDialog {\n\n  constructor(private _dialogRouter: FsDialogRouter) {}\n\n  public open<T, D = any, R = any>(component: ComponentType<T>, config?: MatDialogConfig<D>): MatDialogRef<T, R> {\n    return this._dialogRouter.openDialog<T, D, R>(component, config);\n  }\n\n  public navigate(commands: any[], extras?: NavigationExtras): Promise<boolean> {\n    return this._dialogRouter.navigate(commands, extras);\n  }\n\n  public dialogRef$<T, R = any>(component: ComponentType<T>): Observable<MatDialogRef<T, R> | undefined> {\n    return this._dialogRouter.dialogRef$(component);\n  }\n\n}\n","/*\n * Public API Surface of fs-menu\n */\n\nexport { FsDialogModule } from './app/fs-dialog.module';\n\nexport { FsDialog } from './app/serivces/fs-dialog';\n\nexport { FsDialogComponent } from './app/components/fs-dialog/fs-dialog.component';\nexport { FsDialogRouteComponent } from './app/components/route/route.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i2","i2.FsDialogRouter","i1.FsDialogRouter"],"mappings":"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"}