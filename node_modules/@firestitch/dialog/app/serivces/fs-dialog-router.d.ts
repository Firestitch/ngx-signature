import { Type } from '@angular/core';
import { NavigationExtras, Router } from '@angular/router';
import { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';
import { ComponentType } from '@angular/cdk/portal';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class FsDialogRouter {
    private _router;
    private _dialog;
    private _activeDialogs;
    private _dialogOpened$;
    constructor(_router: Router, _dialog: MatDialog);
    openDialogForRoute(component: ComponentType<unknown>, config: MatDialogConfig<unknown>): MatDialogRef<unknown, unknown>;
    navigate(commands: any[], extras?: NavigationExtras): Promise<boolean>;
    openDialog<T, D = any, R = any>(component: ComponentType<T>, config?: MatDialogConfig<D>): MatDialogRef<T, R>;
    dialogRef$(component: Type<any>): Observable<MatDialogRef<any>>;
    private _registerDialog;
    private _listenDialogClose;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsDialogRouter, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<FsDialogRouter>;
}
//# sourceMappingURL=fs-dialog-router.d.ts.map