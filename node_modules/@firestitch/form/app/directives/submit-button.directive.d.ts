import { OnInit, ElementRef, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { MatButton } from '@angular/material/button';
import { FsFormDirective } from '../directives/form/form.directive';
import * as i0 from "@angular/core";
export declare class FsSubmitButtonDirective implements OnInit, OnDestroy {
    private _matButton;
    private _form;
    private _elementRef;
    private _cdRef;
    name: any;
    dirtySubmit: boolean;
    transitionStyle: any;
    active: boolean;
    private _destroy$;
    constructor(_matButton: MatButton, _form: FsFormDirective, _elementRef: ElementRef, _cdRef: ChangeDetectorRef);
    ngOnInit(): void;
    disable(): void;
    enable(): void;
    process(): void;
    success(): void;
    error(): void;
    setClass(cls: any): void;
    get element(): any;
    reset(): void;
    ngOnDestroy(): void;
    private _disableShadowAnimation;
    private _resetClass;
    private _getSvg;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsSubmitButtonDirective, [{ optional: true; host: true; }, { optional: true; }, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<FsSubmitButtonDirective, "button[type=\"submit\"]", never, { "name": "name"; "dirtySubmit": "dirtySubmit"; }, {}, never>;
}
