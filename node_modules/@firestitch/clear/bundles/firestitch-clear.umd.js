(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/material/button'), require('@angular/material/icon'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@firestitch/clear', ['exports', '@angular/core', '@angular/material/button', '@angular/material/icon', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.firestitch = global.firestitch || {}, global.firestitch.clear = {}), global.ng.core, global.ng.material.button, global.ng.material.icon, global.ng.common));
})(this, (function (exports, i0, button, i1, i2) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    var FsClearElementComponent = /** @class */ (function () {
        function FsClearElementComponent(el) {
            this.el = el;
            this.clear = new i0.EventEmitter();
            this.show = false;
        }
        FsClearElementComponent.prototype.ngAfterViewInit = function () {
            this.el.nativeElement.parentElement.parentElement.parentElement
                .appendChild(this.el.nativeElement.querySelector('.fs-clear-wrapper'));
        };
        FsClearElementComponent.prototype.clearClick = function (event) {
            this.clear.emit(event);
        };
        return FsClearElementComponent;
    }());
    FsClearElementComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsClearElementComponent, deps: [{ token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    FsClearElementComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsClearElementComponent, selector: "fs-clear", inputs: { show: "show" }, outputs: { clear: "clear" }, ngImport: i0__namespace, template: "\n\n<div class=\"mat-form-field-suffix fs-clear-wrapper\">\n  <mat-icon (click)=\"clearClick($event)\" *ngIf=\"show\">clear</mat-icon>\n</div>\n", styles: [".fs-clear-wrapper{align-self:flex-end}.fs-clear-wrapper mat-icon{cursor:pointer}\n"], components: [{ type: i1__namespace.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsClearElementComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'fs-clear',
                        templateUrl: 'clear-element.component.html',
                        styleUrls: ['clear-element.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ElementRef }]; }, propDecorators: { clear: [{
                    type: i0.Output
                }], show: [{
                    type: i0.Input
                }] } });

    var FsClearComponent = /** @class */ (function () {
        function FsClearComponent() {
            this.ngModel = null;
            this.ngModelChange = new i0.EventEmitter();
            this.cleared = new i0.EventEmitter();
        }
        FsClearComponent.prototype.clear = function () {
            this.ngModelChange.emit(null);
            this.cleared.emit();
        };
        return FsClearComponent;
    }());
    FsClearComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsClearComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    FsClearComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsClearComponent, selector: "[fsClear]", inputs: { ngModel: "ngModel" }, outputs: { ngModelChange: "ngModelChange", cleared: "cleared" }, ngImport: i0__namespace, template: "<fs-clear (clear)=\"clear()\" [show]=\"ngModel\"></fs-clear>", styles: [""], components: [{ type: FsClearElementComponent, selector: "fs-clear", inputs: ["show"], outputs: ["clear"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsClearComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: '[fsClear]',
                        templateUrl: 'clear.component.html',
                        styleUrls: ['clear.component.scss'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { ngModel: [{
                    type: i0.Input
                }], ngModelChange: [{
                    type: i0.Output
                }], cleared: [{
                    type: i0.Output
                }] } });

    var FsClearModule = /** @class */ (function () {
        function FsClearModule() {
        }
        FsClearModule.forRoot = function () {
            return {
                ngModule: FsClearModule
            };
        };
        return FsClearModule;
    }());
    FsClearModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsClearModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    FsClearModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsClearModule, declarations: [FsClearComponent,
            FsClearElementComponent], imports: [i2.CommonModule,
            i1.MatIconModule,
            button.MatButtonModule], exports: [FsClearComponent,
            FsClearElementComponent] });
    FsClearModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsClearModule, imports: [[
                i2.CommonModule,
                i1.MatIconModule,
                button.MatButtonModule
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FsClearModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i2.CommonModule,
                            i1.MatIconModule,
                            button.MatButtonModule
                        ],
                        exports: [
                            FsClearComponent,
                            FsClearElementComponent
                        ],
                        declarations: [
                            FsClearComponent,
                            FsClearElementComponent
                        ]
                    }]
            }] });

    /*
     * Public API Surface of fs-menu
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.FsClearComponent = FsClearComponent;
    exports.FsClearElementComponent = FsClearElementComponent;
    exports.FsClearModule = FsClearModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=firestitch-clear.umd.js.map
