import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/icon";
import * as i2 from "@angular/common";
export class FsClearElementComponent {
    constructor(el) {
        this.el = el;
        this.clear = new EventEmitter();
        this.show = false;
    }
    ngAfterViewInit() {
        this.el.nativeElement.parentElement.parentElement.parentElement
            .appendChild(this.el.nativeElement.querySelector('.fs-clear-wrapper'));
    }
    clearClick(event) {
        this.clear.emit(event);
    }
}
FsClearElementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearElementComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
FsClearElementComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsClearElementComponent, selector: "fs-clear", inputs: { show: "show" }, outputs: { clear: "clear" }, ngImport: i0, template: "\n\n<div class=\"mat-form-field-suffix fs-clear-wrapper\">\n  <mat-icon (click)=\"clearClick($event)\" *ngIf=\"show\">clear</mat-icon>\n</div>\n", styles: [".fs-clear-wrapper{align-self:flex-end}.fs-clear-wrapper mat-icon{cursor:pointer}\n"], components: [{ type: i1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearElementComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'fs-clear',
                    templateUrl: 'clear-element.component.html',
                    styleUrls: ['clear-element.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { clear: [{
                type: Output
            }], show: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXItZWxlbWVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvYXBwL2NvbXBvbmVudHMvY2xlYXItZWxlbWVudC9jbGVhci1lbGVtZW50LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvY29tcG9uZW50cy9jbGVhci1lbGVtZW50L2NsZWFyLWVsZW1lbnQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNQLE1BQU0sZUFBZSxDQUFDOzs7O0FBUXZCLE1BQU0sT0FBTyx1QkFBdUI7SUFLbEMsWUFBb0IsRUFBYztRQUFkLE9BQUUsR0FBRixFQUFFLENBQVk7UUFIakIsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7UUFDeEMsU0FBSSxHQUFHLEtBQUssQ0FBQztJQUVRLENBQUM7SUFFL0IsZUFBZTtRQUNwQixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGFBQWE7YUFDNUQsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVNLFVBQVUsQ0FBQyxLQUFLO1FBQ3JCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7O3FIQWRVLHVCQUF1Qjt5R0FBdkIsdUJBQXVCLHVHQ2hCcEMsa0pBS0E7NEZEV2EsdUJBQXVCO2tCQU5uQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxVQUFVO29CQUNwQixXQUFXLEVBQUUsOEJBQThCO29CQUMzQyxTQUFTLEVBQUUsQ0FBRSw4QkFBOEIsQ0FBRTtvQkFDN0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEO2lHQUdrQixLQUFLO3NCQUFyQixNQUFNO2dCQUNTLElBQUk7c0JBQW5CLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBZnRlclZpZXdJbml0LFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPdXRwdXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZzLWNsZWFyJyxcbiAgdGVtcGxhdGVVcmw6ICdjbGVhci1lbGVtZW50LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbICdjbGVhci1lbGVtZW50LmNvbXBvbmVudC5zY3NzJyBdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgRnNDbGVhckVsZW1lbnRDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcblxuICBAT3V0cHV0KCkgcHVibGljIGNsZWFyID0gbmV3IEV2ZW50RW1pdHRlcjxNb3VzZUV2ZW50PigpO1xuICBASW5wdXQoKSBwdWJsaWMgc2hvdyA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHt9XG5cbiAgcHVibGljIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnRcbiAgICAgIC5hcHBlbmRDaGlsZCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLmZzLWNsZWFyLXdyYXBwZXInKSk7XG4gIH1cblxuICBwdWJsaWMgY2xlYXJDbGljayhldmVudCkge1xuICAgIHRoaXMuY2xlYXIuZW1pdChldmVudCk7XG4gIH1cblxufVxuIiwiXG5cbjxkaXYgY2xhc3M9XCJtYXQtZm9ybS1maWVsZC1zdWZmaXggZnMtY2xlYXItd3JhcHBlclwiPlxuICA8bWF0LWljb24gKGNsaWNrKT1cImNsZWFyQ2xpY2soJGV2ZW50KVwiICpuZ0lmPVwic2hvd1wiPmNsZWFyPC9tYXQtaWNvbj5cbjwvZGl2PlxuIl19