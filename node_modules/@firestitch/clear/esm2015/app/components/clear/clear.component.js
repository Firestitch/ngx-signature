import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../clear-element/clear-element.component";
export class FsClearComponent {
    constructor() {
        this.ngModel = null;
        this.ngModelChange = new EventEmitter();
        this.cleared = new EventEmitter();
    }
    clear() {
        this.ngModelChange.emit(null);
        this.cleared.emit();
    }
}
FsClearComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
FsClearComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsClearComponent, selector: "[fsClear]", inputs: { ngModel: "ngModel" }, outputs: { ngModelChange: "ngModelChange", cleared: "cleared" }, ngImport: i0, template: "<fs-clear (clear)=\"clear()\" [show]=\"ngModel\"></fs-clear>", styles: [""], components: [{ type: i1.FsClearElementComponent, selector: "fs-clear", inputs: ["show"], outputs: ["clear"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[fsClear]',
                    templateUrl: 'clear.component.html',
                    styleUrls: ['clear.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { ngModel: [{
                type: Input
            }], ngModelChange: [{
                type: Output
            }], cleared: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2FwcC9jb21wb25lbnRzL2NsZWFyL2NsZWFyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvY29tcG9uZW50cy9jbGVhci9jbGVhci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sRUFDUCxNQUFNLGVBQWUsQ0FBQzs7O0FBU3ZCLE1BQU0sT0FBTyxnQkFBZ0I7SUFON0I7UUFRa0IsWUFBTyxHQUFrQixJQUFJLENBQUM7UUFDN0Isa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBQzNDLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0tBTS9DO0lBSlEsS0FBSztRQUNWLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7OEdBVFUsZ0JBQWdCO2tHQUFoQixnQkFBZ0Isa0pDZjdCLDhEQUF3RDs0RkRlM0MsZ0JBQWdCO2tCQU41QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixXQUFXLEVBQUUsc0JBQXNCO29CQUNuQyxTQUFTLEVBQUUsQ0FBRSxzQkFBc0IsQ0FBRTtvQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzhCQUdpQixPQUFPO3NCQUF0QixLQUFLO2dCQUNXLGFBQWE7c0JBQTdCLE1BQU07Z0JBQ1UsT0FBTztzQkFBdkIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdbZnNDbGVhcl0nLFxuICB0ZW1wbGF0ZVVybDogJ2NsZWFyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbICdjbGVhci5jb21wb25lbnQuc2NzcycgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEZzQ2xlYXJDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIHB1YmxpYyBuZ01vZGVsOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgQE91dHB1dCgpIHB1YmxpYyBuZ01vZGVsQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgY2xlYXJlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBwdWJsaWMgY2xlYXIoKSB7XG4gICAgdGhpcy5uZ01vZGVsQ2hhbmdlLmVtaXQobnVsbCk7XG4gICAgdGhpcy5jbGVhcmVkLmVtaXQoKTtcbiAgfVxufVxuIiwiPGZzLWNsZWFyIChjbGVhcik9XCJjbGVhcigpXCIgW3Nob3ddPVwibmdNb2RlbFwiPjwvZnMtY2xlYXI+Il19