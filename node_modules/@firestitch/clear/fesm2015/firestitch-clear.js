import * as i0 from '@angular/core';
import { EventEmitter, Component, ChangeDetectionStrategy, Output, Input, NgModule } from '@angular/core';
import { MatButtonModule } from '@angular/material/button';
import * as i1 from '@angular/material/icon';
import { MatIconModule } from '@angular/material/icon';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';

class FsClearElementComponent {
    constructor(el) {
        this.el = el;
        this.clear = new EventEmitter();
        this.show = false;
    }
    ngAfterViewInit() {
        this.el.nativeElement.parentElement.parentElement.parentElement
            .appendChild(this.el.nativeElement.querySelector('.fs-clear-wrapper'));
    }
    clearClick(event) {
        this.clear.emit(event);
    }
}
FsClearElementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearElementComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
FsClearElementComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsClearElementComponent, selector: "fs-clear", inputs: { show: "show" }, outputs: { clear: "clear" }, ngImport: i0, template: "\n\n<div class=\"mat-form-field-suffix fs-clear-wrapper\">\n  <mat-icon (click)=\"clearClick($event)\" *ngIf=\"show\">clear</mat-icon>\n</div>\n", styles: [".fs-clear-wrapper{align-self:flex-end}.fs-clear-wrapper mat-icon{cursor:pointer}\n"], components: [{ type: i1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearElementComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'fs-clear',
                    templateUrl: 'clear-element.component.html',
                    styleUrls: ['clear-element.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { clear: [{
                type: Output
            }], show: [{
                type: Input
            }] } });

class FsClearComponent {
    constructor() {
        this.ngModel = null;
        this.ngModelChange = new EventEmitter();
        this.cleared = new EventEmitter();
    }
    clear() {
        this.ngModelChange.emit(null);
        this.cleared.emit();
    }
}
FsClearComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
FsClearComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsClearComponent, selector: "[fsClear]", inputs: { ngModel: "ngModel" }, outputs: { ngModelChange: "ngModelChange", cleared: "cleared" }, ngImport: i0, template: "<fs-clear (clear)=\"clear()\" [show]=\"ngModel\"></fs-clear>", styles: [""], components: [{ type: FsClearElementComponent, selector: "fs-clear", inputs: ["show"], outputs: ["clear"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[fsClear]',
                    templateUrl: 'clear.component.html',
                    styleUrls: ['clear.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { ngModel: [{
                type: Input
            }], ngModelChange: [{
                type: Output
            }], cleared: [{
                type: Output
            }] } });

class FsClearModule {
    static forRoot() {
        return {
            ngModule: FsClearModule
        };
    }
}
FsClearModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FsClearModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearModule, declarations: [FsClearComponent,
        FsClearElementComponent], imports: [CommonModule,
        MatIconModule,
        MatButtonModule], exports: [FsClearComponent,
        FsClearElementComponent] });
FsClearModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearModule, imports: [[
            CommonModule,
            MatIconModule,
            MatButtonModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsClearModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        MatIconModule,
                        MatButtonModule
                    ],
                    exports: [
                        FsClearComponent,
                        FsClearElementComponent
                    ],
                    declarations: [
                        FsClearComponent,
                        FsClearElementComponent
                    ]
                }]
        }] });

/*
 * Public API Surface of fs-menu
 */

/**
 * Generated bundle index. Do not edit.
 */

export { FsClearComponent, FsClearElementComponent, FsClearModule };
//# sourceMappingURL=firestitch-clear.js.map
