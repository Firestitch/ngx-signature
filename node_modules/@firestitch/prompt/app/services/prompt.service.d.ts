import { MatDialog } from '@angular/material/dialog';
import { IFsPromptAutocompleteChipsConfig, IFsPromptConfig } from '../interfaces';
import * as i0 from "@angular/core";
export declare class FsPrompt {
    private dialog;
    constructor(dialog: MatDialog);
    /**
     * Open confirmation window and return close observable
     */
    confirm(config?: IFsPromptConfig): import("rxjs").Observable<any>;
    /**
     * Open window with input field for filling
     */
    input(config?: IFsPromptConfig): import("rxjs").Observable<any>;
    /**
     * Open modal with list
     */
    select(config?: IFsPromptConfig): import("rxjs").Observable<any>;
    /**
     * Open modal with autocomplete
     */
    autocomplete(config?: IFsPromptConfig): import("rxjs").Observable<any>;
    /**
     * Open modal with autocomplete chips
     */
    autocompleteChips(config?: IFsPromptAutocompleteChipsConfig): import("rxjs").Observable<any>;
    /**
     * Open modal with list
     */
    dateTime(config?: IFsPromptConfig): import("rxjs").Observable<any>;
    /**
     * Open modal with list
     */
    date(config?: IFsPromptConfig): import("rxjs").Observable<any>;
    /**
     * Open modal dialog depends from type
     */
    private open;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsPrompt, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<FsPrompt>;
}
