import { Component, Inject } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { DomSanitizer } from '@angular/platform-browser';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/platform-browser";
import * as i3 from "@firestitch/dialog";
import * as i4 from "@angular/material/button";
import * as i5 from "@angular/common";
export class FsPromptConfirmComponent {
    constructor(dialogRef, sanitizer, data) {
        this.dialogRef = dialogRef;
        this.sanitizer = sanitizer;
        this.data = data;
        this.template = this.sanitizer.bypassSecurityTrustHtml(data.template);
    }
    close(button) {
        const value = button.cancel ? undefined : button.value || true;
        this.dialogRef.close(value);
    }
}
FsPromptConfirmComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsPromptConfirmComponent, deps: [{ token: i1.MatDialogRef }, { token: i2.DomSanitizer }, { token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });
FsPromptConfirmComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsPromptConfirmComponent, selector: "ng-component", ngImport: i0, template: "<fs-dialog mobileMode=\"float\">\n  <h2 mat-dialog-title>{{data.title}}</h2>\n  <mat-dialog-content>\n    <span [innerHtml]=\"template\"></span>\n  </mat-dialog-content>\n\n  <mat-dialog-actions>\n    <button mat-button\n            (click)=\"close(button)\"\n            type=\"button\"\n            [color]=\"button.color\"\n            [ngClass]=\"button.class\"\n            *ngFor=\"let button of data.buttons\">{{button.label}}</button>\n  </mat-dialog-actions>\n</fs-dialog>\n", styles: [".mat-form-field{display:block}.dialog-title{margin:0 0 20px;display:block}.mat-dialog-content{outline:none}\n"], components: [{ type: i3.FsDialogComponent, selector: "fs-dialog", inputs: ["mobileMode"] }, { type: i4.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]" }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsPromptConfirmComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './prompt-confirm.component.html',
                    styleUrls: ['../../prompt.css'],
                }]
        }], ctorParameters: function () { return [{ type: i1.MatDialogRef }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbXB0LWNvbmZpcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2FwcC9jb21wb25lbnRzL3Byb21wdC1jb25maXJtL3Byb21wdC1jb25maXJtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvY29tcG9uZW50cy9wcm9tcHQtY29uZmlybS9wcm9tcHQtY29uZmlybS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7OztBQU16RCxNQUFNLE9BQU8sd0JBQXdCO0lBSW5DLFlBQ1MsU0FBaUQsRUFDOUMsU0FBdUIsRUFDRCxJQUFTO1FBRmxDLGNBQVMsR0FBVCxTQUFTLENBQXdDO1FBQzlDLGNBQVMsR0FBVCxTQUFTLENBQWM7UUFDRCxTQUFJLEdBQUosSUFBSSxDQUFLO1FBRXpDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVELEtBQUssQ0FBQyxNQUFNO1FBQ1YsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQztRQUMvRCxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5QixDQUFDOztzSEFmVSx3QkFBd0IsMEVBT3pCLGVBQWU7MEdBUGQsd0JBQXdCLG9EQ1JyQyxxZUFlQTs0RkRQYSx3QkFBd0I7a0JBSnBDLFNBQVM7bUJBQUM7b0JBQ1QsV0FBVyxFQUFFLGlDQUFpQztvQkFDOUMsU0FBUyxFQUFFLENBQUUsa0JBQWtCLENBQUU7aUJBQ2xDOzswQkFRSSxNQUFNOzJCQUFDLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0RGlhbG9nUmVmLCBNQVRfRElBTE9HX0RBVEEgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZVVybDogJy4vcHJvbXB0LWNvbmZpcm0uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsgJy4uLy4uL3Byb21wdC5jc3MnIF0sXG59KVxuZXhwb3J0IGNsYXNzIEZzUHJvbXB0Q29uZmlybUNvbXBvbmVudCB7XG5cbiAgcHVibGljIHRlbXBsYXRlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxGc1Byb21wdENvbmZpcm1Db21wb25lbnQ+LFxuICAgIHByb3RlY3RlZCBzYW5pdGl6ZXI6IERvbVNhbml0aXplcixcbiAgICBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRhdGE6IGFueVxuICApIHtcbiAgICB0aGlzLnRlbXBsYXRlID0gdGhpcy5zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwoZGF0YS50ZW1wbGF0ZSk7XG4gIH1cblxuICBjbG9zZShidXR0b24pIHtcbiAgICBjb25zdCB2YWx1ZSA9IGJ1dHRvbi5jYW5jZWwgPyB1bmRlZmluZWQgOiBidXR0b24udmFsdWUgfHwgdHJ1ZTtcbiAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZSh2YWx1ZSk7XG4gIH1cbn1cbiIsIjxmcy1kaWFsb2cgbW9iaWxlTW9kZT1cImZsb2F0XCI+XG4gIDxoMiBtYXQtZGlhbG9nLXRpdGxlPnt7ZGF0YS50aXRsZX19PC9oMj5cbiAgPG1hdC1kaWFsb2ctY29udGVudD5cbiAgICA8c3BhbiBbaW5uZXJIdG1sXT1cInRlbXBsYXRlXCI+PC9zcGFuPlxuICA8L21hdC1kaWFsb2ctY29udGVudD5cblxuICA8bWF0LWRpYWxvZy1hY3Rpb25zPlxuICAgIDxidXR0b24gbWF0LWJ1dHRvblxuICAgICAgICAgICAgKGNsaWNrKT1cImNsb3NlKGJ1dHRvbilcIlxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBbY29sb3JdPVwiYnV0dG9uLmNvbG9yXCJcbiAgICAgICAgICAgIFtuZ0NsYXNzXT1cImJ1dHRvbi5jbGFzc1wiXG4gICAgICAgICAgICAqbmdGb3I9XCJsZXQgYnV0dG9uIG9mIGRhdGEuYnV0dG9uc1wiPnt7YnV0dG9uLmxhYmVsfX08L2J1dHRvbj5cbiAgPC9tYXQtZGlhbG9nLWFjdGlvbnM+XG48L2ZzLWRpYWxvZz5cbiJdfQ==