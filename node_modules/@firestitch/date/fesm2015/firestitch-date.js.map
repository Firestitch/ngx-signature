{"version":3,"file":"firestitch-date.js","sources":["../../src/libs/get-format-string.ts","../../src/libs/sanitize-date.ts","../../src/libs/parse.ts","../../src/libs/format.ts","../../src/app/constants/seconds.ts","../../src/libs/parse-duration.ts","../../src/libs/duration.ts","../../src/libs/ago.ts","../../src/libs/iso8601.ts","../../src/libs/range.ts","../../src/libs/granularduration.ts","../../src/libs/simple-format.ts","../../src/libs/utc.ts","../../src/libs/date.ts","../../src/libs/parse-local.ts","../../src/app/pipes/date-format.pipe.ts","../../src/app/pipes/date.pipe.ts","../../src/app/pipes/date-range.pipe.ts","../../src/app/pipes/date-duration.pipe.ts","../../src/app/pipes/date-ago.pipe.ts","../../src/app/components/date-ago/date-ago.component.ts","../../src/app/components/date-ago/date-ago.component.html","../../src/app/services/date-ago-factory.service.ts","../../src/app/directives/fs-date-ago.directive.ts","../../src/app/fs-date.module.ts","../../src/app/constants/timezones.ts","../../src/public_api.ts","../../src/firestitch-date.ts"],"sourcesContent":["import { isSameYear } from 'date-fns';\n\nexport function getFormatString(formatTo = 'date', date: Date = null) {\n\n  const formatParts = formatTo.split('-');\n\n  const hasTime = formatParts.indexOf('time') != -1;\n  const hasDate = formatParts.indexOf('date') != -1;\n  const parts = [];\n\n  if (hasDate || hasTime) {\n\n    if (hasDate) {\n      const hasYear = formatParts.indexOf('yearless') === -1;\n      const hasYearDiff = formatParts.indexOf('yeardiff') !== -1;\n      const sameYear = date && isSameYear(date, new Date());\n      const showYear = hasYear &&\n        !(hasYearDiff && sameYear);\n\n      // day of week\n      if (formatParts.indexOf('day') != -1) {\n        parts.push(formatParts.indexOf('full') != -1 ? 'EEEE' : 'EEE');\n      }\n\n      // month\n      parts.push(formatParts.indexOf('full') != -1 ? 'MMMM' : 'MMM');\n\n      // day\n      if (formatParts.indexOf('dayless') === -1) {\n\n        let day = formatParts.indexOf('ordinal') != -1 ? 'do' : 'd';\n\n        if (showYear) {\n          day += ',';\n        }\n\n        parts.push(day);\n      }\n\n      // year\n      if (showYear) {\n        parts.push('yyyy');\n      }\n    }\n\n\n    if (hasTime) {\n      parts.push(formatParts.indexOf('24') != -1 ? 'HH:mm' : 'h:mm aaa');\n\n      // if (formatParts.indexOf('tz') != -1) {\n      //   timeFormat += ' [' + moment.tz(date, moment.tz.guess()).format('z') + ']';\n      // }\n\n      if (formatParts.indexOf('tz') != -1 || formatParts.indexOf('gmt') != -1) {\n        parts.push(\"'('OOOO')'\");\n      }\n    }\n\n  } else {\n\n    parts.push(formatTo);\n  }\n    return parts.join(' ').trim();\n}\n","export function sanitizeDate(date: string): string {\n\n  const matches = date.match(/^(\\d{2}:\\d{2}:\\d{2})(.*)/);\n  if (matches) {\n    date = `1970-01-01T${matches[1]}${matches[2] || '+00:00'}`;\n  }\n\n  return date;\n}\n","import { parseISO, isValid } from 'date-fns';\nimport { sanitizeDate } from './sanitize-date';\n\n\nexport function parse(date): Date {\n  if (typeof date === 'string') {\n    date = parseISO(sanitizeDate(date));\n  }\n\n  return isValid(date) ? date : null;\n}\n","import { format as fnsFormat } from 'date-fns-tz';\nimport { getFormatString } from './get-format-string';\nimport { parse } from './parse';\n\nexport function format(date, formatTo?: string, options: { timezone?: string } = {}): string {\n    date = parse(date);\n    const outputFormat = getFormatString(formatTo, date);\n\n    return date ? fnsFormat(date, outputFormat, { timeZone: options.timezone }) : null;\n}\n","export const SECONDS = {\n    YEAR: 3600 * 24 * 365,\n    MONTH: 3600 * 24 * 30.417,\n    DAY: 3600 * 24,\n    HOUR: 3600,\n    MINUTE: 60\n};","import { Observable, of } from 'rxjs';\nimport { SECONDS } from '../app/constants/seconds';\n\n\nexport function parseDuration(value: string): Observable<Object> {\n\n  let time = 0;\n\n  if (!value && typeof value !== 'string') {\n    return of({error: 'Invalid duration format'});\n  }\n\n  value = value\n    .trim()\n    .replace(/(\\d+)\\s+/g, '$1')\n    .replace(/\\s+/, ' ')\n    .replace(/^\\./, '0.');\n\n  value.split(' ').forEach((chunk) => {\n\n    const matches = chunk.match(/^(\\d+\\.?\\d*)([YMdhms]?)$/);\n\n    if (!matches) {\n      return;\n    }\n\n    const factor = {\n      Y: SECONDS.YEAR,\n      M: SECONDS.MONTH,\n      d: SECONDS.DAY,\n      h: SECONDS.HOUR,\n      m: SECONDS.MINUTE,\n      s: 1\n    }[matches[2]];\n\n    time += Math.round(+matches[1]) * (factor || 1);\n  });\n\n  return of({time: time});\n}\n","import { round, isNumber } from 'lodash-es';\nimport { SECONDS } from '../app/constants/seconds';\nimport { parseDuration } from './parse-duration';\n\nexport function duration(time: any, options?) {\n    options = options || {};\n    if (typeof options === 'string') {\n      options = {\n        seconds: !!options.match(/second/),\n        minutes: !!options.match(/minute/),\n        hours: !!options.match(/hour/),\n        days: !!options.match(/day/),\n        months: !!options.match(/month/),\n        years: !!options.match(/year/),\n      };\n    }\n\n    if (!isNumber(time)) {\n      let parsedResult;\n\n      parseDuration(time).subscribe((result: any) => {\n        parsedResult = result;\n      });\n\n      if (parsedResult && parsedResult.error || !parsedResult.time) {\n        return 'error';\n      } else {\n        time = parsedResult.time;\n      }\n      options.unit = 'seconds';\n    }\n\n    options = Object.assign({}, options);\n    options.unit = options.unit === undefined ? 'seconds' : options.unit;\n    options.abr = options.abr === undefined ? true : options.abr;\n    options.suffix = options.suffix === true ? (time > 0 ? ' ago' : ' from now') : '';\n    options.pad = options.pad === undefined ? false : options.pad;\n    options.thousandsSeperator = options.thousandsSeperator === undefined ? true : options.thousandsSeperator;\n\n    if (!options.seconds && !options.minutes && !options.hours && !options.days && !options.months && !options.years) {\n      options.seconds = true;\n      options.minutes = false;\n      options.hours = false;\n      options.days = false;\n      options.months = false;\n      options.years = false;\n    } else {\n      options.seconds = options.seconds === undefined ? false : options.seconds;\n      options.minutes = options.minutes === undefined ? false : options.minutes;\n      options.hours = options.hours === undefined ? false : options.hours;\n      options.days = options.days === undefined ? false : options.days;\n      options.months = options.months === undefined ? false : options.months;\n      options.years = options.years === undefined ? false : options.years;\n    }\n\n    if (options.unit === 'minutes') {\n        time = time * 60;\n    } else if (options.unit === 'hours') {\n        time = Math.round(time * 60 * 60);\n    }\n\n    time = Math.abs(parseInt(time));\n\n    const units = {\n        years:      { abr: 'Y', single: 'year', plural: 'years', seconds: SECONDS.YEAR, next: 'months' },\n        months:     { abr: 'M', single: 'month', plural: 'months', seconds: SECONDS.MONTH, next: 'days' },\n        days:       { abr: 'd', single: 'day', plural: 'days', seconds: SECONDS.DAY, next: 'hours' },\n        hours:      { abr: 'h', single: 'hour', plural: 'hours', seconds: SECONDS.HOUR, next: 'months' },\n        minutes:    { abr: 'm', single: 'minute', plural: 'minutes', seconds: SECONDS.MINUTE, next: 'seconds' },\n        seconds:    { abr: 's', single: 'second', plural: 'seconds', seconds: 1, next: null },\n    };\n\n    const pieces = {\n        years: 0,\n        months: 0,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n    };\n\n    let remainder = time;\n\n    if (options.years) {\n      const years = remainder / SECONDS.YEAR;\n      if (years >= 1) {\n        if (!options.months && !options.days && !options.hours && !options.minutes && !options.seconds) {\n          pieces.years = Math.round(years);\n        } else {\n          pieces.years = Math.floor(years);\n        }\n        remainder = remainder - (pieces.years * SECONDS.YEAR);\n      }\n    }\n\n    if (options.months) {\n      const months = remainder / SECONDS.MONTH;\n      if (months >= 1) {\n        if (!options.days && !options.hours && !options.minutes && !options.seconds) {\n          pieces.months = Math.round(months);\n        } else {\n          pieces.months = Math.floor(months);\n        }\n        remainder = remainder - (pieces.months * SECONDS.MONTH);\n      }\n    }\n\n    if (options.days) {\n      const days = remainder / SECONDS.DAY;\n      if (days >= 1) {\n        if (!options.hours && !options.minutes && !options.seconds) {\n          pieces.days = Math.round(days);\n        } else {\n          pieces.days = Math.floor(days);\n        }\n        remainder = remainder - (pieces.days * SECONDS.DAY);\n      }\n    }\n\n    if (options.hours) {\n      const hours = remainder / SECONDS.HOUR;\n      if (hours >= 1) {\n        if (!options.minutes && !options.seconds) {\n          pieces.hours = Math.round(hours);\n        } else {\n          pieces.hours = Math.floor(hours);\n        }\n        remainder = remainder - (pieces.hours * SECONDS.HOUR);\n      }\n    }\n\n    if (options.minutes) {\n      const minutes = remainder / 60;\n      if (minutes >= 1) {\n        if (!options.seconds) {\n          pieces.minutes = Math.round(minutes);\n        } else {\n          pieces.minutes = Math.floor(minutes);\n        }\n        remainder = remainder - (pieces.minutes * SECONDS.MINUTE);\n      }\n    }\n\n    pieces.seconds = Math.round(remainder);\n\n    const enabled = [];\n    let totalSeconds = 0;\n    for (const name in units) {\n      if (units.hasOwnProperty(name)) {\n        if (options[name]) {\n          enabled.push(name);\n        }\n        totalSeconds += pieces[name] * units[name].seconds;\n      }\n    }\n\n    let output = [];\n\n    if (enabled.length === 1) {\n        options.precision = options.precision === undefined ? 1 : options.precision;\n        const name = enabled.join('');\n        const value = numberFormat(totalSeconds / units[name]['seconds'], options);\n        output.push(value + (options.abr ? units[name].abr :  ' ' + (value == 1 ? units[name].single : units[name].plural)));\n    } else {\n        options.precision = options.precision === undefined ? enabled.length : options.precision;\n\n        for (const name in units) {\n          if (units.hasOwnProperty(name)) {\n            if (options.precision && output.length >= options.precision) {\n              continue;\n            }\n\n            if (options[name]) {\n              let value = pieces[name];\n              if (value) {\n                  output.push(numberFormat(value, options) + (options.abr ? units[name].abr :  ' ' + (value == 1 ? units[name].single : units[name].plural)));\n              }\n            }\n          }\n        }\n    }\n\n    // there are no values so show zero of the smallest unit (i.e. \"0s\")\n    if (output.length === 0) {\n      for (const name in units) {\n        if (units.hasOwnProperty(name)) {\n          if (options[name]) {\n            output = [ numberFormat(0, options) + (options.abr ? units[name].abr :  ' ' + (units[name] == 1 ? units[name].single : units[name].plural)) ];\n          }\n        }\n      }\n    }\n\n    // to cut off output depends on maxOutput value\n    if (options.maxOutputs && options.maxOutputs < output.length) {\n      output = output.splice(0, options.maxOutputs);\n    }\n\n    // add suffix if required\n    if (options.suffix) {\n      output.push(options.suffix);\n    }\n\n    return output.join(' ');\n}\n\n\nfunction numberFormat(number, options: any = {}) {\n  const precision = options.precision === undefined ? -1 : options.precision;\n  const pad = options.pad === undefined ? false : options.pad;\n  const thousandsSeperator = options.thousandsSeperator === undefined ? true : options.thousandsSeperator;\n\n  if(thousandsSeperator) {\n    if (precision >= 0) {\n      number = round(number, precision);\n    }\n\n    return number.toLocaleString('en-US', { minimumFractionDigits: pad ? precision : 0 });\n  }\n\n  if (precision >= 0 && pad) {\n    return number.toFixed(precision);\n  }\n\n  if (precision >= 0) {\n    return round(number, precision);\n  }\n\n  return number;\n}\n","import { round } from 'lodash-es';\nimport { differenceInMinutes, differenceInSeconds } from 'date-fns';\n\nimport { format } from './format';\nimport { duration } from './duration';\nimport { parse } from './parse';\n\n\nexport function ago(date, frmt = 'date') {\n\n    date = parse(date);\n    if (!date) {\n      return '';\n    }\n\n    const minDiff = round(differenceInSeconds(new Date(), date) / 60, 0);\n    const hourDiff = round(differenceInMinutes(new Date(), date) / 60, 0);\n\n    if (Math.abs(hourDiff) >= 24) {\n      if (date.getFullYear() == new Date().getFullYear()) {\n        return format(date, 'date-yearless');\n      } else {\n        return format(date, frmt);\n      }\n\n    } else if (hourDiff == 0 && minDiff == 0) {\n      return 'now';\n     } else {\n      return duration(minDiff, {\n        unit: 'minutes',\n        suffix: true,\n        minutes: true,\n        hours: true\n      });\n    }\n}\n","import { format } from 'date-fns';\nimport { parse } from './parse';\n\n\nexport function iso8601(date) {\n\n    date = parse(date);\n\n    if (!date) {\n        return '';\n    }\n\n    return format(date, `yyyy-MM-dd'T'HH:mm:ssxxx`);\n}\n","import { format as fnsFormat, differenceInMilliseconds } from 'date-fns';\nimport { getFormatString } from './get-format-string';\nimport { parse } from './parse';\n\n\nexport function range(from: Date, to: Date, format = 'date'): string {\n\n    from = parse(from);\n    to = parse(to);\n\n    if (!to && !from) {\n      return '';\n    }\n\n    if (from && !to) {\n      to = from;\n    }\n\n    if (to && !from) {\n      from = to;\n    }\n\n    const formatParts = format.split('-');\n\n    let fromFormat = getFormatString(format);\n    let toFormat = getFormatString(format);\n\n    if (formatParts.indexOf('yearless') !== -1) {\n      fromFormat = fromFormat.replace(' yyyy', '');\n      toFormat = toFormat.replace(' yyyy', '');\n    }\n\n    if (differenceInMilliseconds(from, to) == 0) {\n      return fnsFormat(from, fromFormat);\n    }\n\n    if (formatParts.indexOf('time') !== -1) {\n      // date and time\n\n      if (!from.getMinutes()) {\n        fromFormat = fromFormat.replace(':mm', '');\n      }\n\n      if (!to.getMinutes()) {\n        toFormat = toFormat.replace(':mm', '');\n      }\n\n      if (from.getFullYear() === to.getFullYear()) {\n\n        if ((new Date()).getFullYear() === from.getFullYear()) {\n          fromFormat = fromFormat.replace(', yyyy', '');\n        }\n\n        toFormat = toFormat.replace(', yyyy', '');\n\n        if (from.getMonth() == to.getMonth()) {\n          if (from.getDate() == to.getDate()) {\n\n            if (\n              (from.getHours() < 12 && to.getHours() < 12) ||\n              (from.getHours() > 12 && to.getHours() > 12)\n            ) {\n              fromFormat = fromFormat.replace(' aaa', '');\n            }\n\n            toFormat = toFormat\n                .replace('MMMM', '')\n                .replace('MMM', '')\n                .replace('EEEE', '')\n                .replace('EEE', '')\n                .replace(' do', '')\n                .replace(' d', '')\n                .trim();\n          } else {\n            // add comma after day\n            toFormat = toFormat\n                .replace(' do', ' do,')\n                .replace(' d', ' d,');\n          }\n        } else {\n          // add comma after day\n          toFormat = toFormat\n              .replace(' do', ' do,')\n              .replace(' d', ' d,');\n        }\n      }\n\n      fromFormat = fromFormat.replace('MM d h', 'MM d · h');\n    } else {\n      // date only\n      if (from.getFullYear() == to.getFullYear()) {\n        fromFormat = fromFormat\n          .replace(' yyyy', '')\n          .replace(',', '')\n          .trim();\n\n        if (from.getMonth() == to.getMonth()) {\n\n          if (formatParts.indexOf('day') == -1) {\n            toFormat = toFormat\n              .replace('MMMM', '')\n              .replace('MMM', '')\n              .trim();\n          }\n\n          if (from.getDate() == to.getDate()) {\n            if (formatParts.indexOf('time') === -1) {\n              fromFormat = getFormatString(format);\n              toFormat = '';\n            }\n          }\n        }\n      }\n    }\n\n    let output = fnsFormat(from, fromFormat);\n    if (toFormat) {\n      output += ' – ' + fnsFormat(to, toFormat);\n    }\n\n    return output;\n}\n","import { duration } from './duration';\n\nexport function granularDuration(time, options = {}) {\n    options['seconds'] = options['seconds'] === undefined ? false : options['seconds'];\n    options['months'] = options['months'] === undefined ? false : options['months'];\n    options['years'] = options['years'] === undefined ? false : options['years'];\n    options['precision'] = options['precision'] === undefined ? 3 : options['precision'];\n\n    return duration(time, options);\n}\n","import { format } from 'date-fns';\n\n\nexport function simpleFormat(date) {\n  return format(date, 'yyyy-MM-dd\\'T\\'HH:mm:ssxxxxx');\n}\n","export function toUTC(date: Date) {\n  const UTC =  Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(),\n    date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\n  return new Date(UTC);\n}\n","import { parseISO, isValid } from 'date-fns';\n\n\nexport function date(value) {\n  let dateObject = typeof value === 'string' ? parseISO(value) : value;\n\n  if (!isValid(dateObject)) {\n    dateObject = null;\n  }\n\n  return dateObject;\n}\n","import { isValid } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz'\nimport { sanitizeDate } from './sanitize-date';\n\n\nexport function parseLocal(date): Date {\n    if (typeof date === 'string') {\n        date = utcToZonedTime(sanitizeDate(date), null);\n    }\n\n    return isValid(date) ? date : null;\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { format } from '../../libs';\n\n\n@Pipe({\n    name: 'fsDateFormat'\n})\nexport class FsDateFormatPipe implements PipeTransform {\n\n    transform(value: any, fmt?: string): string {\n      return format(value, fmt);\n    }\n}\n","import { Pipe } from '@angular/core';\n\nimport { FsDateFormatPipe } from './date-format.pipe';\n\n\n@Pipe({\n    name: 'fsDate'\n})\nexport class FsDatePipe extends FsDateFormatPipe {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { range } from '../../libs';\n\n\n@Pipe({\n  name: 'fsDateRange'\n})\nexport class FsDateRangePipe implements PipeTransform {\n  transform(value: any[], format?: string): string {\n    return range(value[0], value[1], format);\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { duration } from '../../libs';\n\n\n@Pipe({\n  name: 'fsDateDuration'\n})\nexport class FsDateDurationPipe implements PipeTransform {\n\n  transform(value: any, fmt?: Object): string {\n    return duration(value, fmt);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ago } from '../../libs';\n\n\n@Pipe({\n  name: 'fsDateAgo'\n})\nexport class FsDateAgoPipe implements PipeTransform {\n  transform(value: any, format?: string): string {\n    return ago(value, format);\n  }\n}\n\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Observable, interval, Subject } from 'rxjs';\nimport { takeWhile, takeUntil } from 'rxjs/operators';\n\nimport { differenceInSeconds } from 'date-fns';\n\nimport { ago, duration as fsDuration, format as fsFormat, parse } from '../../../libs';\n\n\n@Component({\n  selector: 'fs-date-ago',\n  templateUrl: './date-ago.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FsDateAgoComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input()\n  public set date(value) {\n    this._date = parse(value);\n  }\n  public get date(): Date {\n    return this._date;\n  }\n  @Input() public showTime = false;\n  @Input() public format = 'date';\n  @Input() public showTooltip = true;\n\n  @Input() public tooltipDateFormat: string = null;\n\n  public formattedDate: string = null;\n  public tooltip: string = null;\n\n  private _period = 60;\n  private _timer$: Observable<number>;\n\n  private _destroy$ = new Subject();\n  private _date: Date = null;\n\n  constructor(\n    public elementRef: ElementRef,\n    private _cd: ChangeDetectorRef,\n  ) { }\n\n  public ngOnInit() {\n    this._init();\n  }\n\n  public ngOnChanges() {\n    this._init();\n  }\n\n  public ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private updateFormatted() {\n    this.formattedDate = ago(this.date, this.format);\n\n    if (this.showTooltip) {\n      const tooltipFormat = this.getTooltipFormat();\n      const tooltipAgo = this.getTooltipAgo();\n\n      this.tooltip = fsFormat(this.date, tooltipFormat) + ' · ' + tooltipAgo;\n    }\n    this._cd.markForCheck();\n  }\n\n  /**\n   * Setting format w/o year if year is the same\n   */\n  private getTooltipFormat(): string {\n\n    if (this.tooltipDateFormat) {\n      return this.tooltipDateFormat;\n    }\n\n    let format = 'date-time';\n    const todayYear = new Date().getFullYear();\n    const dateYear = new Date(this.date).getFullYear();\n\n    if (todayYear === dateYear) {\n      format = 'date-time-yearless';\n    }\n\n    return format\n  }\n\n  /**\n   * Forming second part of the tooltip\n   */\n  private getTooltipAgo(): string {\n    let tooltip = 'now';\n\n    if (!this.date) {\n      return '';\n    }\n\n    const dateDifference = this._difference(this.date);\n\n    const options = {\n      maxOutputs: 1,\n      suffix: true,\n      years: true,\n      months: true,\n      days: true,\n      hours: true,\n      minutes: true\n    };\n\n    // if difference more than 1 minute\n    if (dateDifference > 59 || dateDifference < 0) {\n      tooltip = fsDuration(dateDifference, options)\n    }\n\n    return tooltip;\n  }\n\n  private _init(): void {\n    this.updateFormatted();\n    if (this._updateWhile(this.date) && !this._timer$) {\n      this._timerInit();\n    }\n  }\n\n  private _timerInit(): void {\n    this._timer$ = interval(this._period * 1000)\n      .pipe(\n        takeWhile((v, index) => this._updateWhile(this.date)),\n        takeUntil(this._destroy$),\n      );\n\n    this._timer$\n      .subscribe({\n        next: () => {\n          this.updateFormatted();\n        },\n        complete:\n          () => {\n            this._timer$ = null;\n          },\n      });\n  }\n\n  private _difference(date: Date): number {\n    return differenceInSeconds(new Date(), date);\n  }\n\n  private _updateWhile(date: Date): boolean {\n    return Math.abs(this._difference(date)) <= (86400 + this._period);\n  }\n\n}\n","<span [matTooltip]=\"tooltip\">{{ formattedDate }}</span>\n","import { ComponentFactoryResolver, Injectable, Inject } from '@angular/core';\n\nimport { FsDateAgoComponent } from '../components/date-ago/date-ago.component';\n\n\n@Injectable()\nexport class FsDateAgoFactory {\n\n  private factoryResolver = null;\n  private rootViewContainer = null;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  public setRootViewContainerRef(viewContainerRef) {\n    this.rootViewContainer = viewContainerRef;\n  }\n\n  public addDynamicComponent() {\n    const factory = this.factoryResolver\n                        .resolveComponentFactory(FsDateAgoComponent);\n\n    const component = factory\n      .create(this.rootViewContainer.injector);\n\n    this.rootViewContainer.insert(component.hostView);\n\n    return component;\n  }\n\n}\n","import {\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { FsDateAgoComponent } from '../components/date-ago/date-ago.component';\nimport { FsDateAgoFactory } from '../services/date-ago-factory.service';\n\n\n@Directive({\n  selector: '[fsDateAgo]'\n})\nexport class FsDateAgoDirective implements OnInit, OnChanges {\n\n  @Input() public date = null;\n  @Input() public showTime = false;\n  @Input() public format = 'date';\n\n  private dateAgoRef: ComponentRef<FsDateAgoComponent> = null;\n\n  constructor(\n    private fsDateAgoFactory: FsDateAgoFactory,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    @Inject(ViewContainerRef) private viewContainerRef\n  ) {\n  }\n\n  public ngOnInit() {\n  }\n\n  public ngOnChanges() {\n    this.renderDateAgo();\n  }\n\n  private renderDateAgo() {\n    this.removeDateAgo();\n    this.fsDateAgoFactory.setRootViewContainerRef(this.viewContainerRef);\n    this.dateAgoRef = this.fsDateAgoFactory.addDynamicComponent();\n    Object.assign(this.dateAgoRef.instance, {\n      date: this.date,\n      showTime: this.showTime,\n      format: this.format\n    });\n  }\n\n  private removeDateAgo() {\n    if (this.dateAgoRef) {\n      this.renderer.removeChild(this.elementRef.nativeElement, this.dateAgoRef.instance.elementRef.nativeElement);\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { CommonModule } from '@angular/common';\n\nimport { FsCommonModule } from '@firestitch/common';\nimport { FsDatePipe } from './pipes/date.pipe';\nimport { FsDateRangePipe } from './pipes/date-range.pipe';\nimport { FsDateFormatPipe } from './pipes/date-format.pipe';\nimport { FsDateDurationPipe } from './pipes/date-duration.pipe';\nimport { FsDateAgoPipe } from './pipes/date-ago.pipe';\n\nimport { FsDateAgoDirective } from './directives/fs-date-ago.directive';\n\nimport { FsDateAgoComponent } from './components/date-ago/date-ago.component';\n\nimport { FsDateAgoFactory } from './services/date-ago-factory.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    FsCommonModule\n  ],\n  exports: [\n    FsDatePipe,\n    FsDateAgoPipe,\n    FsDateDurationPipe,\n    FsDateFormatPipe,\n    FsDateRangePipe,\n\n    FsDateAgoDirective,\n\n    FsDateAgoComponent\n  ],\n  entryComponents: [\n    FsDateAgoComponent\n  ],\n  declarations: [\n    FsDatePipe,\n    FsDateAgoPipe,\n    FsDateDurationPipe,\n    FsDateFormatPipe,\n    FsDateRangePipe,\n\n    FsDateAgoDirective,\n\n    FsDateAgoComponent\n  ],\n  providers: [],\n})\nexport class FsDateModule {\n  static forRoot(): ModuleWithProviders<FsDateModule> {\n    return {\n      ngModule: FsDateModule,\n      providers: [\n        FsDateAgoFactory\n      ]\n    };\n  }\n}\n","export const TIMEZONES = [\n    { name: 'A', value: '1' },\n    { name: 'ACDT', value: '10:30' },\n    { name: 'ACST', value: '9:30' },\n    { name: 'ADT', value: '-3' },\n    { name: 'ADT', value: '-3' },\n    { name: 'AEDT', value: '11' },\n    { name: 'AEST', value: '10' },\n    { name: 'AFT', value: '4:30' },\n    { name: 'AKDT', value: '-8' },\n    { name: 'AKST', value: '-9' },\n    { name: 'ALMT', value: '6' },\n    { name: 'AMST', value: '5' },\n    { name: 'AMST', value: '-3' },\n    { name: 'AMT', value: '4' },\n    { name: 'AMT', value: '-4' },\n    { name: 'ANAST', value: '12' },\n    { name: 'ANAT', value: '12' },\n    { name: 'AQTT', value: '5' },\n    { name: 'ART', value: '-3' },\n    { name: 'AST', value: '3' },\n    { name: 'AST', value: '-4' },\n    { name: 'AWDT', value: '9' },\n    { name: 'AWST', value: '8' },\n    { name: 'AZOST', value: '0' },\n    { name: 'AZOT', value: '-1' },\n    { name: 'AZST', value: '5' },\n    { name: 'AZT', value: '4' },\n    { name: 'B', value: '2' },\n    { name: 'BNT', value: '8' },\n    { name: 'BOT', value: '-4' },\n    { name: 'BRST', value: '-2' },\n    { name: 'BRT', value: '-3' },\n    { name: 'BST', value: '6' },\n    { name: 'BST', value: '1' },\n    { name: 'BTT', value: '6' },\n    { name: 'C', value: '3' },\n    { name: 'CAST', value: '8' },\n    { name: 'CAT', value: '2' },\n    { name: 'CCT', value: '6:30' },\n    { name: 'CDT', value: '-4' },\n    { name: 'CDT', value: '-5' },\n    { name: 'CEST', value: '2' },\n    { name: 'CET', value: '1' },\n    { name: 'CHADT', value: '13:45' },\n    { name: 'CHAST', value: '12:45' },\n    { name: 'CKT', value: '-10' },\n    { name: 'CLST', value: '-3' },\n    { name: 'CLT', value: '-4' },\n    { name: 'COT', value: '-5' },\n    { name: 'CST', value: '8' },\n    { name: 'CST', value: '-6' },\n    { name: 'CST', value: '-5' },\n    { name: 'CVT', value: '-1' },\n    { name: 'CXT', value: '7' },\n    { name: 'ChST', value: '10' },\n    { name: 'D', value: '4' },\n    { name: 'DAVT', value: '7' },\n    { name: 'E', value: '5' },\n    { name: 'EASST', value: '-5' },\n    { name: 'EAST', value: '-6' },\n    { name: 'EAT', value: '3' },\n    { name: 'EAT', value: '3' },\n    { name: 'ECT', value: '-5' },\n    { name: 'EDT', value: '-4' },\n    { name: 'EEST', value: '3' },\n    { name: 'EET', value: '2' },\n    { name: 'EGST', value: '0' },\n    { name: 'EGT', value: '-1' },\n    { name: 'EST', value: '-5' },\n    { name: 'ET', value: '-5' },\n    { name: 'F', value: '6' },\n    { name: 'FJST', value: '13' },\n    { name: 'FJT', value: '12' },\n    { name: 'FKST', value: '-3' },\n    { name: 'FKT', value: '-4' },\n    { name: 'FNT', value: '-2' },\n    { name: 'G', value: '7' },\n    { name: 'GALT', value: '-6' },\n    { name: 'GAMT', value: '-9' },\n    { name: 'GET', value: '4' },\n    { name: 'GFT', value: '-3' },\n    { name: 'GILT', value: '12' },\n    { name: 'GMT', value: '0' },\n    { name: 'GST', value: '4' },\n    { name: 'GYT', value: '-4' },\n    { name: 'H', value: '8' },\n    { name: 'HAA', value: '-3' },\n    { name: 'HAC', value: '-5' },\n    { name: 'HADT', value: '-9' },\n    { name: 'HAE', value: '-4' },\n    { name: 'HAP', value: '-7' },\n    { name: 'HAR', value: '-6' },\n    { name: 'HAST', value: '-10' },\n    { name: 'HAT', value: '-2:30' },\n    { name: 'HAY', value: '-8' },\n    { name: 'HKT', value: '8' },\n    { name: 'HLV', value: '-4:30' },\n    { name: 'HNA', value: '-4' },\n    { name: 'HNC', value: '-6' },\n    { name: 'HNE', value: '-5' },\n    { name: 'HNP', value: '-8' },\n    { name: 'HNR', value: '-7' },\n    { name: 'HNT', value: '-3:30' },\n    { name: 'HNY', value: '-9' },\n    { name: 'HOVT', value: '7' },\n    { name: 'I', value: '9' },\n    { name: 'ICT', value: '7' },\n    { name: 'IDT', value: '3' },\n    { name: 'IOT', value: '6' },\n    { name: 'IRDT', value: '4:30' },\n    { name: 'IRKST', value: '9' },\n    { name: 'IRKT', value: '9' },\n    { name: 'IRST', value: '3:30' },\n    { name: 'IST', value: '2' },\n    { name: 'IST', value: '5:30' },\n    { name: 'IST', value: '1' },\n    { name: 'JST', value: '9' },\n    { name: 'K', value: '10' },\n    { name: 'KGT', value: '6' },\n    { name: 'KRAST', value: '8' },\n    { name: 'KRAT', value: '8' },\n    { name: 'KST', value: '9' },\n    { name: 'KUYT', value: '4' },\n    { name: 'L', value: '11' },\n    { name: 'LHDT', value: '11' },\n    { name: 'LHST', value: '10:30' },\n    { name: 'LINT', value: '14' },\n    { name: 'M', value: '12' },\n    { name: 'MAGST', value: '12' },\n    { name: 'MAGT', value: '12' },\n    { name: 'MART', value: '-9:30' },\n    { name: 'MAWT', value: '5' },\n    { name: 'MDT', value: '-6' },\n    { name: 'MESZ', value: '2' },\n    { name: 'MEZ', value: '1' },\n    { name: 'MHT', value: '12' },\n    { name: 'MMT', value: '6:30' },\n    { name: 'MSD', value: '4' },\n    { name: 'MSK', value: '4' },\n    { name: 'MST', value: '-7' },\n    { name: 'MUT', value: '4' },\n    { name: 'MVT', value: '5' },\n    { name: 'MYT', value: '8' },\n    { name: 'N', value: '-1' },\n    { name: 'NCT', value: '11' },\n    { name: 'NDT', value: '-2:30' },\n    { name: 'NFT', value: '11:30' },\n    { name: 'NOVST', value: '7' },\n    { name: 'NOVT', value: '6' },\n    { name: 'NPT', value: '5:45' },\n    { name: 'NST', value: '-3:30' },\n    { name: 'NUT', value: '-11' },\n    { name: 'NZDT', value: '13' },\n    { name: 'NZST', value: '12' },\n    { name: 'O', value: '-2' },\n    { name: 'OMSST', value: '7' },\n    { name: 'OMST', value: '7' },\n    { name: 'P', value: '-3' },\n    { name: 'PDT', value: '-7' },\n    { name: 'PET', value: '-5' },\n    { name: 'PETST', value: '12' },\n    { name: 'PETT', value: '12' },\n    { name: 'PGT', value: '10' },\n    { name: 'PHOT', value: '13' },\n    { name: 'PHT', value: '8' },\n    { name: 'PKT', value: '5' },\n    { name: 'PMDT', value: '-2' },\n    { name: 'PMST', value: '-3' },\n    { name: 'PONT', value: '11' },\n    { name: 'PST', value: '-8' },\n    { name: 'PST', value: '-8' },\n    { name: 'PT', value: '-8' },\n    { name: 'PWT', value: '9' },\n    { name: 'PYST', value: '-3' },\n    { name: 'PYT', value: '-4' },\n    { name: 'Q', value: '-4' },\n    { name: 'R', value: '-5' },\n    { name: 'RET', value: '4' },\n    { name: 'S', value: '-6' },\n    { name: 'SAMT', value: '4' },\n    { name: 'SAST', value: '2' },\n    { name: 'SBT', value: '11' },\n    { name: 'SCT', value: '4' },\n    { name: 'SGT', value: '8' },\n    { name: 'SRT', value: '-3' },\n    { name: 'SST', value: '-11' },\n    { name: 'T', value: '-7' },\n    { name: 'TAHT', value: '-10' },\n    { name: 'TFT', value: '5' },\n    { name: 'TJT', value: '5' },\n    { name: 'TKT', value: '13' },\n    { name: 'TLT', value: '9' },\n    { name: 'TMT', value: '5' },\n    { name: 'TVT', value: '12' },\n    { name: 'U', value: '-8' },\n    { name: 'ULAT', value: '8' },\n    { name: 'UTC', value: '0' },\n    { name: 'UYST', value: '-2' },\n    { name: 'UYT', value: '-3' },\n    { name: 'UZT', value: '5' },\n    { name: 'V', value: '-9' },\n    { name: 'VET', value: '-4:30' },\n    { name: 'VLAST', value: '11' },\n    { name: 'VLAT', value: '11' },\n    { name: 'VUT', value: '11' },\n    { name: 'W', value: '-10' },\n    { name: 'WAST', value: '2' },\n    { name: 'WAT', value: '1' },\n    { name: 'WEST', value: '1' },\n    { name: 'WESZ', value: '1' },\n    { name: 'WET', value: '0' },\n    { name: 'WEZ', value: '0' },\n    { name: 'WFT', value: '12' },\n    { name: 'WGST', value: '-2' },\n    { name: 'WGT', value: '-3' },\n    { name: 'WIB', value: '7' },\n    { name: 'WIT', value: '9' },\n    { name: 'WITA', value: '8' },\n    { name: 'WST', value: '1' },\n    { name: 'WST', value: '13' },\n    { name: 'WT', value: '0' },\n    { name: 'X', value: '-11' },\n    { name: 'Y', value: '-12' },\n    { name: 'YAKST', value: '10' },\n    { name: 'YAKT', value: '10' },\n    { name: 'YAPT', value: '10' },\n    { name: 'YEKST', value: '6' },\n    { name: 'YEKT', value: '6' },\n    { name: 'Z', value: '0' },\n];\n","/*\n * Public API Surface of fs-menu\n */\n\n// Modules\nexport { FsDateModule } from './app/fs-date.module';\n\nexport { FsDateAgoDirective } from './app/directives/fs-date-ago.directive';\n\nexport { FsDateAgoComponent } from './app/components/date-ago/date-ago.component';\n\n// Constants\nexport { SECONDS } from './app/constants/seconds';\nexport { TIMEZONES } from './app/constants/timezones';\n\n// Pipes\nexport { FsDateAgoPipe } from './app/pipes/date-ago.pipe';\nexport { FsDateDurationPipe } from './app/pipes/date-duration.pipe';\nexport { FsDateFormatPipe } from './app/pipes/date-format.pipe';\nexport { FsDateRangePipe } from './app/pipes/date-range.pipe';\nexport { FsDatePipe } from './app/pipes/date.pipe';\n\n// Services\nexport { FsDateAgoFactory } from './app/services/date-ago-factory.service';\n\nexport * from './libs';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["fnsFormat","format","fsFormat","fsDuration"],"mappings":"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"}