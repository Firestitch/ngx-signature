import { Directive, ElementRef, Inject, Input, Renderer2, ViewContainerRef } from '@angular/core';
import { FsDateAgoFactory } from '../services/date-ago-factory.service';
import * as i0 from "@angular/core";
import * as i1 from "../services/date-ago-factory.service";
export class FsDateAgoDirective {
    constructor(fsDateAgoFactory, renderer, elementRef, viewContainerRef) {
        this.fsDateAgoFactory = fsDateAgoFactory;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.viewContainerRef = viewContainerRef;
        this.date = null;
        this.showTime = false;
        this.format = 'date';
        this.dateAgoRef = null;
    }
    ngOnInit() {
    }
    ngOnChanges() {
        this.renderDateAgo();
    }
    renderDateAgo() {
        this.removeDateAgo();
        this.fsDateAgoFactory.setRootViewContainerRef(this.viewContainerRef);
        this.dateAgoRef = this.fsDateAgoFactory.addDynamicComponent();
        Object.assign(this.dateAgoRef.instance, {
            date: this.date,
            showTime: this.showTime,
            format: this.format
        });
    }
    removeDateAgo() {
        if (this.dateAgoRef) {
            this.renderer.removeChild(this.elementRef.nativeElement, this.dateAgoRef.instance.elementRef.nativeElement);
        }
    }
}
FsDateAgoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDateAgoDirective, deps: [{ token: i1.FsDateAgoFactory }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });
FsDateAgoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: FsDateAgoDirective, selector: "[fsDateAgo]", inputs: { date: "date", showTime: "showTime", format: "format" }, usesOnChanges: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDateAgoDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[fsDateAgo]'
                }]
        }], ctorParameters: function () { return [{ type: i1.FsDateAgoFactory }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [ViewContainerRef]
                }] }]; }, propDecorators: { date: [{
                type: Input
            }], showTime: [{
                type: Input
            }], format: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnMtZGF0ZS1hZ28uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2FwcC9kaXJlY3RpdmVzL2ZzLWRhdGUtYWdvLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBRUwsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEVBQ04sS0FBSyxFQUdMLFNBQVMsRUFDVCxnQkFBZ0IsRUFDakIsTUFBTSxlQUFlLENBQUM7QUFHdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7OztBQU14RSxNQUFNLE9BQU8sa0JBQWtCO0lBUTdCLFlBQ1UsZ0JBQWtDLEVBQ2xDLFFBQW1CLEVBQ25CLFVBQXNCLEVBQ0ksZ0JBQWdCO1FBSDFDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ0kscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFBO1FBVnBDLFNBQUksR0FBRyxJQUFJLENBQUM7UUFDWixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLFdBQU0sR0FBRyxNQUFNLENBQUM7UUFFeEIsZUFBVSxHQUFxQyxJQUFJLENBQUM7SUFRNUQsQ0FBQztJQUVNLFFBQVE7SUFDZixDQUFDO0lBRU0sV0FBVztRQUNoQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVPLGFBQWE7UUFDbkIsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNyRSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQzlELE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUU7WUFDdEMsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtTQUNwQixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU8sYUFBYTtRQUNuQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQzdHO0lBQ0gsQ0FBQzs7Z0hBdENVLGtCQUFrQixxR0FZbkIsZ0JBQWdCO29HQVpmLGtCQUFrQjs0RkFBbEIsa0JBQWtCO2tCQUg5QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO2lCQUN4Qjs7MEJBYUksTUFBTTsyQkFBQyxnQkFBZ0I7NENBVlYsSUFBSTtzQkFBbkIsS0FBSztnQkFDVSxRQUFRO3NCQUF2QixLQUFLO2dCQUNVLE1BQU07c0JBQXJCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnRSZWYsXG4gIERpcmVjdGl2ZSxcbiAgRWxlbWVudFJlZixcbiAgSW5qZWN0LFxuICBJbnB1dCxcbiAgT25DaGFuZ2VzLFxuICBPbkluaXQsXG4gIFJlbmRlcmVyMixcbiAgVmlld0NvbnRhaW5lclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgRnNEYXRlQWdvQ29tcG9uZW50IH0gZnJvbSAnLi4vY29tcG9uZW50cy9kYXRlLWFnby9kYXRlLWFnby5jb21wb25lbnQnO1xuaW1wb3J0IHsgRnNEYXRlQWdvRmFjdG9yeSB9IGZyb20gJy4uL3NlcnZpY2VzL2RhdGUtYWdvLWZhY3Rvcnkuc2VydmljZSc7XG5cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2ZzRGF0ZUFnb10nXG59KVxuZXhwb3J0IGNsYXNzIEZzRGF0ZUFnb0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcblxuICBASW5wdXQoKSBwdWJsaWMgZGF0ZSA9IG51bGw7XG4gIEBJbnB1dCgpIHB1YmxpYyBzaG93VGltZSA9IGZhbHNlO1xuICBASW5wdXQoKSBwdWJsaWMgZm9ybWF0ID0gJ2RhdGUnO1xuXG4gIHByaXZhdGUgZGF0ZUFnb1JlZjogQ29tcG9uZW50UmVmPEZzRGF0ZUFnb0NvbXBvbmVudD4gPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZnNEYXRlQWdvRmFjdG9yeTogRnNEYXRlQWdvRmFjdG9yeSxcbiAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgIEBJbmplY3QoVmlld0NvbnRhaW5lclJlZikgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmXG4gICkge1xuICB9XG5cbiAgcHVibGljIG5nT25Jbml0KCkge1xuICB9XG5cbiAgcHVibGljIG5nT25DaGFuZ2VzKCkge1xuICAgIHRoaXMucmVuZGVyRGF0ZUFnbygpO1xuICB9XG5cbiAgcHJpdmF0ZSByZW5kZXJEYXRlQWdvKCkge1xuICAgIHRoaXMucmVtb3ZlRGF0ZUFnbygpO1xuICAgIHRoaXMuZnNEYXRlQWdvRmFjdG9yeS5zZXRSb290Vmlld0NvbnRhaW5lclJlZih0aGlzLnZpZXdDb250YWluZXJSZWYpO1xuICAgIHRoaXMuZGF0ZUFnb1JlZiA9IHRoaXMuZnNEYXRlQWdvRmFjdG9yeS5hZGREeW5hbWljQ29tcG9uZW50KCk7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLmRhdGVBZ29SZWYuaW5zdGFuY2UsIHtcbiAgICAgIGRhdGU6IHRoaXMuZGF0ZSxcbiAgICAgIHNob3dUaW1lOiB0aGlzLnNob3dUaW1lLFxuICAgICAgZm9ybWF0OiB0aGlzLmZvcm1hdFxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSByZW1vdmVEYXRlQWdvKCkge1xuICAgIGlmICh0aGlzLmRhdGVBZ29SZWYpIHtcbiAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2hpbGQodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsIHRoaXMuZGF0ZUFnb1JlZi5pbnN0YW5jZS5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=