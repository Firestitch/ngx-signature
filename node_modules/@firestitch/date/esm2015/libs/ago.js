import { round } from 'lodash-es';
import { differenceInMinutes, differenceInSeconds } from 'date-fns';
import { format } from './format';
import { duration } from './duration';
import { parse } from './parse';
export function ago(date, frmt = 'date') {
    date = parse(date);
    if (!date) {
        return '';
    }
    const minDiff = round(differenceInSeconds(new Date(), date) / 60, 0);
    const hourDiff = round(differenceInMinutes(new Date(), date) / 60, 0);
    if (Math.abs(hourDiff) >= 24) {
        if (date.getFullYear() == new Date().getFullYear()) {
            return format(date, 'date-yearless');
        }
        else {
            return format(date, frmt);
        }
    }
    else if (hourDiff == 0 && minDiff == 0) {
        return 'now';
    }
    else {
        return duration(minDiff, {
            unit: 'minutes',
            suffix: true,
            minutes: true,
            hours: true
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWdvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYnMvYWdvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDbEMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRXBFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDbEMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN0QyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBR2hDLE1BQU0sVUFBVSxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksR0FBRyxNQUFNO0lBRW5DLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkIsSUFBSSxDQUFDLElBQUksRUFBRTtRQUNULE9BQU8sRUFBRSxDQUFDO0tBQ1g7SUFFRCxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsbUJBQW1CLENBQUMsSUFBSSxJQUFJLEVBQUUsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDckUsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLG1CQUFtQixDQUFDLElBQUksSUFBSSxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRXRFLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDNUIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksSUFBSSxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUNsRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7U0FDdEM7YUFBTTtZQUNMLE9BQU8sTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztTQUMzQjtLQUVGO1NBQU0sSUFBSSxRQUFRLElBQUksQ0FBQyxJQUFJLE9BQU8sSUFBSSxDQUFDLEVBQUU7UUFDeEMsT0FBTyxLQUFLLENBQUM7S0FDYjtTQUFNO1FBQ04sT0FBTyxRQUFRLENBQUMsT0FBTyxFQUFFO1lBQ3ZCLElBQUksRUFBRSxTQUFTO1lBQ2YsTUFBTSxFQUFFLElBQUk7WUFDWixPQUFPLEVBQUUsSUFBSTtZQUNiLEtBQUssRUFBRSxJQUFJO1NBQ1osQ0FBQyxDQUFDO0tBQ0o7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcm91bmQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgZGlmZmVyZW5jZUluTWludXRlcywgZGlmZmVyZW5jZUluU2Vjb25kcyB9IGZyb20gJ2RhdGUtZm5zJztcblxuaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnLi9mb3JtYXQnO1xuaW1wb3J0IHsgZHVyYXRpb24gfSBmcm9tICcuL2R1cmF0aW9uJztcbmltcG9ydCB7IHBhcnNlIH0gZnJvbSAnLi9wYXJzZSc7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGFnbyhkYXRlLCBmcm10ID0gJ2RhdGUnKSB7XG5cbiAgICBkYXRlID0gcGFyc2UoZGF0ZSk7XG4gICAgaWYgKCFkYXRlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuXG4gICAgY29uc3QgbWluRGlmZiA9IHJvdW5kKGRpZmZlcmVuY2VJblNlY29uZHMobmV3IERhdGUoKSwgZGF0ZSkgLyA2MCwgMCk7XG4gICAgY29uc3QgaG91ckRpZmYgPSByb3VuZChkaWZmZXJlbmNlSW5NaW51dGVzKG5ldyBEYXRlKCksIGRhdGUpIC8gNjAsIDApO1xuXG4gICAgaWYgKE1hdGguYWJzKGhvdXJEaWZmKSA+PSAyNCkge1xuICAgICAgaWYgKGRhdGUuZ2V0RnVsbFllYXIoKSA9PSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkpIHtcbiAgICAgICAgcmV0dXJuIGZvcm1hdChkYXRlLCAnZGF0ZS15ZWFybGVzcycpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZvcm1hdChkYXRlLCBmcm10KTtcbiAgICAgIH1cblxuICAgIH0gZWxzZSBpZiAoaG91ckRpZmYgPT0gMCAmJiBtaW5EaWZmID09IDApIHtcbiAgICAgIHJldHVybiAnbm93JztcbiAgICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBkdXJhdGlvbihtaW5EaWZmLCB7XG4gICAgICAgIHVuaXQ6ICdtaW51dGVzJyxcbiAgICAgICAgc3VmZml4OiB0cnVlLFxuICAgICAgICBtaW51dGVzOiB0cnVlLFxuICAgICAgICBob3VyczogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxufVxuIl19