import { of } from 'rxjs';
import { SECONDS } from '../app/constants/seconds';
export function parseDuration(value) {
    let time = 0;
    if (!value && typeof value !== 'string') {
        return of({ error: 'Invalid duration format' });
    }
    value = value
        .trim()
        .replace(/(\d+)\s+/g, '$1')
        .replace(/\s+/, ' ')
        .replace(/^\./, '0.');
    value.split(' ').forEach((chunk) => {
        const matches = chunk.match(/^(\d+\.?\d*)([YMdhms]?)$/);
        if (!matches) {
            return;
        }
        const factor = {
            Y: SECONDS.YEAR,
            M: SECONDS.MONTH,
            d: SECONDS.DAY,
            h: SECONDS.HOUR,
            m: SECONDS.MINUTE,
            s: 1
        }[matches[2]];
        time += Math.round(+matches[1]) * (factor || 1);
    });
    return of({ time: time });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2UtZHVyYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGlicy9wYXJzZS1kdXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUduRCxNQUFNLFVBQVUsYUFBYSxDQUFDLEtBQWE7SUFFekMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBRWIsSUFBSSxDQUFDLEtBQUssSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDdkMsT0FBTyxFQUFFLENBQUMsRUFBQyxLQUFLLEVBQUUseUJBQXlCLEVBQUMsQ0FBQyxDQUFDO0tBQy9DO0lBRUQsS0FBSyxHQUFHLEtBQUs7U0FDVixJQUFJLEVBQUU7U0FDTixPQUFPLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQztTQUMxQixPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQztTQUNuQixPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBRXhCLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFFakMsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBRXhELElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFPO1NBQ1I7UUFFRCxNQUFNLE1BQU0sR0FBRztZQUNiLENBQUMsRUFBRSxPQUFPLENBQUMsSUFBSTtZQUNmLENBQUMsRUFBRSxPQUFPLENBQUMsS0FBSztZQUNoQixDQUFDLEVBQUUsT0FBTyxDQUFDLEdBQUc7WUFDZCxDQUFDLEVBQUUsT0FBTyxDQUFDLElBQUk7WUFDZixDQUFDLEVBQUUsT0FBTyxDQUFDLE1BQU07WUFDakIsQ0FBQyxFQUFFLENBQUM7U0FDTCxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWQsSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNsRCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sRUFBRSxDQUFDLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUM7QUFDMUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBTRUNPTkRTIH0gZnJvbSAnLi4vYXBwL2NvbnN0YW50cy9zZWNvbmRzJztcblxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VEdXJhdGlvbih2YWx1ZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxPYmplY3Q+IHtcblxuICBsZXQgdGltZSA9IDA7XG5cbiAgaWYgKCF2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG9mKHtlcnJvcjogJ0ludmFsaWQgZHVyYXRpb24gZm9ybWF0J30pO1xuICB9XG5cbiAgdmFsdWUgPSB2YWx1ZVxuICAgIC50cmltKClcbiAgICAucmVwbGFjZSgvKFxcZCspXFxzKy9nLCAnJDEnKVxuICAgIC5yZXBsYWNlKC9cXHMrLywgJyAnKVxuICAgIC5yZXBsYWNlKC9eXFwuLywgJzAuJyk7XG5cbiAgdmFsdWUuc3BsaXQoJyAnKS5mb3JFYWNoKChjaHVuaykgPT4ge1xuXG4gICAgY29uc3QgbWF0Y2hlcyA9IGNodW5rLm1hdGNoKC9eKFxcZCtcXC4/XFxkKikoW1lNZGhtc10/KSQvKTtcblxuICAgIGlmICghbWF0Y2hlcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGZhY3RvciA9IHtcbiAgICAgIFk6IFNFQ09ORFMuWUVBUixcbiAgICAgIE06IFNFQ09ORFMuTU9OVEgsXG4gICAgICBkOiBTRUNPTkRTLkRBWSxcbiAgICAgIGg6IFNFQ09ORFMuSE9VUixcbiAgICAgIG06IFNFQ09ORFMuTUlOVVRFLFxuICAgICAgczogMVxuICAgIH1bbWF0Y2hlc1syXV07XG5cbiAgICB0aW1lICs9IE1hdGgucm91bmQoK21hdGNoZXNbMV0pICogKGZhY3RvciB8fCAxKTtcbiAgfSk7XG5cbiAgcmV0dXJuIG9mKHt0aW1lOiB0aW1lfSk7XG59XG4iXX0=