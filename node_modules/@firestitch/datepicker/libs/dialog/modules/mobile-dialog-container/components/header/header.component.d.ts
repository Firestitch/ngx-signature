import { AfterViewInit, OnChanges, SimpleChanges, EventEmitter, ElementRef } from '@angular/core';
import * as i0 from "@angular/core";
interface IYearListItem {
    value: number;
    disabled: boolean;
}
interface IMonthListItem {
    value: number;
    name: string;
    abr: string;
    disabled: boolean;
}
export declare class FsDatePickerMobileHeaderComponent implements OnChanges, AfterViewInit {
    private _elRef;
    viewMode: string;
    minYear: number;
    maxYear: number;
    disabledDays: [Date, Date][];
    calendarDate: Date;
    monthChange: EventEmitter<number>;
    yearChange: EventEmitter<number>;
    goNextMonth: EventEmitter<void>;
    goPrevMonth: EventEmitter<void>;
    viewModeChange: EventEmitter<string>;
    readonly now: Date;
    readonly monthNow: number;
    readonly yearNow: number;
    yearsList: IYearListItem[];
    monthList: IMonthListItem[];
    constructor(_elRef: ElementRef);
    get calendarMonth(): number;
    get calendarYear(): number;
    get calendarDay(): number;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    selectMonth(month: number): void;
    selectYear(year: number): void;
    setViewMode(mode: string): void;
    nextMonth(): void;
    prevMonth(): void;
    private _createYearsList;
    private _createMonthsList;
    private _isYearDisabled;
    private _scrollToSelectedYear;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsDatePickerMobileHeaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FsDatePickerMobileHeaderComponent, "fs-date-picker-mobile-header", never, { "viewMode": "viewMode"; "minYear": "minYear"; "maxYear": "maxYear"; "disabledDays": "disabledDays"; "calendarDate": "calendarDate"; }, { "monthChange": "monthChange"; "yearChange": "yearChange"; "goNextMonth": "goNextMonth"; "goPrevMonth": "goPrevMonth"; "viewModeChange": "viewModeChange"; }, never, never>;
}
export {};
