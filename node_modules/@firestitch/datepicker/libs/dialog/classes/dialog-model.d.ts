import { Observable } from 'rxjs';
import { IDialogFactoryOptions } from '../../dialog/interfaces/dialog-factory-data.interface';
import { IPeriod } from '../../common/interfaces/period.interface';
import { RangePickerRef } from '../../../app/classes/range-picker-ref';
export declare class FsDatePickerDialogModel {
    /**
     * year | month | date
     *
     * Current mode of calendar. For ranges consist values for both: start and end date
     */
    dateMode: any;
    minDate: any;
    maxDate: any;
    startOfDay: boolean;
    seedDate: any;
    periodWeeks: any;
    minutes: boolean;
    private _minYear;
    private _maxYear;
    private _pickerOptions;
    private _model$;
    private _period$;
    private _now$;
    private _disabledDays$;
    private _disabledTimes$;
    private _calendarDate$;
    private _calendarMode$;
    private _timeExpanded$;
    /**
     * date | datetime | time | week
     * View is options selected on init. Can't be changed manually
     */
    private _view$;
    constructor(pickerOptions: IDialogFactoryOptions);
    get now(): Date;
    set calendarDate(value: Date);
    get calendarDate(): Date;
    get calendarDate$(): Observable<Date>;
    get view$(): Observable<string>;
    get view(): string;
    set view(view: string);
    get isDateView(): boolean;
    get isDateTimeView(): boolean;
    get isTimeView(): boolean;
    get isWeekView(): boolean;
    get isMonthRangeView(): boolean;
    get calendarMode$(): Observable<string>;
    get calendarMode(): string;
    set model(value: Date | null);
    get model(): Date | null;
    get model$(): Observable<Date | null>;
    set period(value: IPeriod | null);
    get period(): IPeriod | null;
    get period$(): Observable<IPeriod | null>;
    set disabledDays(value: [Date, Date][]);
    get disabledDays$(): Observable<[Date, Date][]>;
    set disabledTimes(value: [Date, Date][]);
    get disabledTimes$(): Observable<[Date, Date][]>;
    set minYear(minYear: any);
    get minYear(): any;
    set maxYear(maxYear: any);
    get maxYear(): any;
    private set _calendarMode(value);
    get timeExpanded$(): Observable<boolean>;
    get timeExpanded(): boolean;
    set timeExpanded(flag: boolean);
    get rangePickerRef(): RangePickerRef | null;
    setCalendarMonth(month: number): void;
    setCalendarYear(year: number): void;
    nextMonth(): void;
    prevMonth(): void;
    setCalendarMode(mode: string): void;
    private _initCalendar;
    private _updateDisabled;
    private _updateDisabledDays;
    private _updateDisabledTimes;
}
