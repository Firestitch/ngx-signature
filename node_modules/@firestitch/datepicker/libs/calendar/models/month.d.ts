import { Week } from './week';
import { Period } from './period';
export declare class Month {
    date: Date;
    seedDate: Date;
    periodWeeks: number;
    private _disabledDays;
    private _hideExtraDays;
    name: any;
    number: any;
    year: any;
    monthAndYear: any;
    months: any;
    years: any;
    weeks: Week[];
    weeksByPeriod: Map<number, Period>;
    private _prevMonthDaysCount;
    private _monthStartDay;
    private _daysInMonth;
    private _seedDay;
    constructor(date: Date, seedDate: Date, periodWeeks: number, _disabledDays: any, _hideExtraDays: boolean);
    get seedDay(): number;
    /**
     * Render days and weeks
     */
    renderDays(): void;
    getPeriodById(id: number): false | Period;
    /**
     * Input period means that instance of period is not same instance
     * that was created for month.
     * It means that period and weeksByPeriod can have same periodIds but different object refs
     * @param period
     */
    updateSelectionForPeriod(period: Period): false | Period;
    /**
     * Init base month field
     * @param date
     */
    private _initMonth;
    /**
     * Depends on week day start it counts total number of days in month
     * @param seedDay
     */
    private _countTotalDaysInMonth;
    /**
     * Just for easy usage
     */
    private _groupWeeks;
    private _markFirstAndLastWeeks;
}
