import { Period } from './period';
import { DayItem } from '../interfaces/day-item.interface';
export declare class Week {
    private _dateStart;
    private _seedDate;
    private _periodWeeks;
    days: DayItem[];
    period: Period;
    periodId: number;
    firstWeekInPeriod: boolean;
    lastWeekInPeriod: boolean;
    private _periodVisible;
    private _dateEnd;
    constructor(_dateStart: Date, _seedDate: Date, _periodWeeks: number);
    get dateStart(): Date;
    get dateEnd(): Date;
    get periodLableVisible(): boolean;
    /**
     * Add related day
     * @param day
     */
    addDay(day: DayItem): void;
    /**
     * Add related period
     * @param period
     */
    addPeriod(period: Period): void;
    /**
     * Set visibility for period label
     * @param flag
     */
    setPeriodVisibility(flag: boolean): void;
    /**
     * To be able to draw borders for week
     */
    markAsFirstVisiblePeriodWeek(): void;
    markAsLastVisiblePeriodWeek(): void;
    /**
     * Calculate period ID based on week date start and seed date
     */
    private _getPeriodId;
}
