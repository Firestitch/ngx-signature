import { ChangeDetectorRef, ElementRef, Injector, OnDestroy, OnInit } from '@angular/core';
import { NgControl } from '@angular/forms';
import { FsDatePickerDialogFactory } from '../../../../libs/dialog/services/dialog-factory.service';
import { RangePickerComponent } from '../base/range-picker-base.component';
import { FsRangePickerStoreService } from '../../../services/range-picker-store.service';
import * as i0 from "@angular/core";
export declare abstract class RangePickerFromComponent extends RangePickerComponent implements OnInit, OnDestroy {
    protected _elRef: ElementRef;
    protected _injector: Injector;
    protected _datepickerFactory: FsDatePickerDialogFactory;
    protected _cdRef: ChangeDetectorRef;
    protected _ngControl: NgControl;
    private _rangePickerStore;
    constructor(_elRef: ElementRef, _injector: Injector, _datepickerFactory: FsDatePickerDialogFactory, _cdRef: ChangeDetectorRef, _ngControl: NgControl, _rangePickerStore: FsRangePickerStoreService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    registerPicker(): void;
    writeValue(value: any): void;
    cleared(event: any): void;
    /**
     * Set value which was selected in dialog
     * @param value
     */
    updateValueFromDialog(value: Date): void;
    updateValue(value: any): void;
    protected _tzChanged(originDate: Date | null): void;
    protected _processInputDate(date: Date | null): Date | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<RangePickerFromComponent, [null, null, null, null, { optional: true; self: true; }, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<RangePickerFromComponent, never, never, {}, {}, never>;
}
