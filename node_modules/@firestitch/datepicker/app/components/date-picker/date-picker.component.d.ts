import { ChangeDetectorRef, ElementRef, EventEmitter, Injector, Renderer2 } from '@angular/core';
import { PickerViewType } from '../../../libs/common/enums/picker-view-type.enum';
import { FsDatePickerDialogFactory } from '../../../libs/dialog/services/dialog-factory.service';
import { FsDatePickerBaseComponent } from '../../classes/base-component';
import * as i0 from "@angular/core";
export declare class FsDatePickerComponent extends FsDatePickerBaseComponent {
    protected elementRef: ElementRef;
    protected renderer: Renderer2;
    protected injector: Injector;
    protected _cdRef: ChangeDetectorRef;
    protected fsDatepickerFactory: FsDatePickerDialogFactory;
    static template: string;
    minYear: any;
    maxYear: any;
    minDate: any;
    maxDate: any;
    startOfDay: boolean;
    view: PickerViewType;
    format: string;
    minutes: boolean;
    change$: EventEmitter<any>;
    constructor(elementRef: ElementRef, renderer: Renderer2, injector: Injector, _cdRef: ChangeDetectorRef, fsDatepickerFactory: FsDatePickerDialogFactory);
    writeValue(value: any): void;
    updateInput(value: any): void;
    open(): void;
    protected updateValue(value: any): void;
    private _getDefaultComponents;
    static ɵfac: i0.ɵɵFactoryDeclaration<FsDatePickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FsDatePickerComponent, "[fsDatePicker]", never, { "minYear": "minYear"; "maxYear": "maxYear"; "minDate": "minDate"; "maxDate": "maxDate"; "startOfDay": "startOfDay"; "view": "view"; "format": "format"; "minutes": "minutes"; }, { "change$": "change"; }, never, never>;
}
