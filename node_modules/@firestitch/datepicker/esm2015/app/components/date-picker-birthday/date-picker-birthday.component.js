import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef, Injector, Input, Renderer2, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { FsDatePickerComponent } from '../date-picker/date-picker.component';
import { FsDateScrollPickerComponent } from '../date-scroll-picker/date-scroll-picker.component';
import { FsDatePickerDialogFactory } from '../../../libs/dialog/services/dialog-factory.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../libs/dialog/services/dialog-factory.service";
import * as i2 from "@firestitch/clear";
import * as i3 from "../date-picker-trigger/date-picker-trigger.component";
export class FsDatePickerBirthdayComponent extends FsDateScrollPickerComponent {
    constructor(renderer, injector, elementRef, _datepickerFactory, _cdRef) {
        super(renderer, injector, elementRef, _datepickerFactory, _cdRef);
        this.minYear = (new Date()).getFullYear() - 120;
        this.maxYear = (new Date()).getFullYear();
    }
}
FsDatePickerBirthdayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDatePickerBirthdayComponent, deps: [{ token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ElementRef }, { token: i1.FsDatePickerDialogFactory }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
FsDatePickerBirthdayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsDatePickerBirthdayComponent, selector: "[fsDatePickerBirthday]", inputs: { minYear: "minYear", maxYear: "maxYear" }, providers: [{
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => FsDatePickerBirthdayComponent),
            multi: true
        }], usesInheritance: true, ngImport: i0, template: "\n    <fs-clear [show]=\"value && !disabled && !readonly && clear\" (clear)=\"cleared($event)\"></fs-clear>\n    <fs-datepicker-trigger (click)=\"triggerClick()\" [disabled]=\"disabled || readonly\" [view]=\"view\"></fs-datepicker-trigger>\n  ", isInline: true, components: [{ type: i2.FsClearElementComponent, selector: "fs-clear", inputs: ["show"], outputs: ["clear"] }, { type: i3.FsDatePickerTriggerComponent, selector: "fs-datepicker-trigger", inputs: ["disabled", "view"], outputs: ["click"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDatePickerBirthdayComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[fsDatePickerBirthday]',
                    template: FsDatePickerComponent.template,
                    providers: [{
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => FsDatePickerBirthdayComponent),
                            multi: true
                        }],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ElementRef }, { type: i1.FsDatePickerDialogFactory }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { minYear: [{
                type: Input
            }], maxYear: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXItYmlydGhkYXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2FwcC9jb21wb25lbnRzL2RhdGUtcGlja2VyLWJpcnRoZGF5L2RhdGUtcGlja2VyLWJpcnRoZGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQzFDLFNBQVMsRUFBRSxVQUFVLEVBQ3JCLFVBQVUsRUFDVixRQUFRLEVBQ1IsS0FBSyxFQUNMLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUNqRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQzs7Ozs7QUFhakcsTUFBTSxPQUFRLDZCQUE4QixTQUFRLDJCQUEyQjtJQVE3RSxZQUNFLFFBQW1CLEVBQ25CLFFBQWtCLEVBQ2xCLFVBQXNCLEVBQ3RCLGtCQUE2QyxFQUM3QyxNQUF5QjtRQUV6QixLQUFLLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFaN0QsWUFBTyxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLEdBQUcsQ0FBQztRQUczQyxZQUFPLEdBQUcsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFVNUMsQ0FBQzs7MkhBaEJXLDZCQUE2QjsrR0FBN0IsNkJBQTZCLHFHQVA5QixDQUFDO1lBQ1YsT0FBTyxFQUFFLGlCQUFpQjtZQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDZCQUE2QixDQUFDO1lBQzVELEtBQUssRUFBRSxJQUFJO1NBQ1osQ0FBQzs0RkFHVSw2QkFBNkI7a0JBVjFDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsUUFBUSxFQUFFLHFCQUFxQixDQUFDLFFBQVE7b0JBQ3hDLFNBQVMsRUFBRSxDQUFDOzRCQUNWLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLDhCQUE4QixDQUFDOzRCQUM1RCxLQUFLLEVBQUUsSUFBSTt5QkFDWixDQUFDO29CQUNGLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDt3TkFJUSxPQUFPO3NCQURiLEtBQUs7Z0JBSUMsT0FBTztzQkFEYixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsIEVsZW1lbnRSZWYsXG4gIGZvcndhcmRSZWYsIEluamVjdCxcbiAgSW5qZWN0b3IsXG4gIElucHV0LFxuICBSZW5kZXJlcjIsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGc0RhdGVQaWNrZXJDb21wb25lbnQgfSBmcm9tICcuLi9kYXRlLXBpY2tlci9kYXRlLXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgRnNEYXRlU2Nyb2xsUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi4vZGF0ZS1zY3JvbGwtcGlja2VyL2RhdGUtc2Nyb2xsLXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgRnNEYXRlUGlja2VyRGlhbG9nRmFjdG9yeSB9IGZyb20gJy4uLy4uLy4uL2xpYnMvZGlhbG9nL3NlcnZpY2VzL2RpYWxvZy1mYWN0b3J5LnNlcnZpY2UnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1tmc0RhdGVQaWNrZXJCaXJ0aGRheV0nLFxuICB0ZW1wbGF0ZTogRnNEYXRlUGlja2VyQ29tcG9uZW50LnRlbXBsYXRlLFxuICBwcm92aWRlcnM6IFt7XG4gICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRnNEYXRlUGlja2VyQmlydGhkYXlDb21wb25lbnQpLFxuICAgIG11bHRpOiB0cnVlXG4gIH1dLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgIGNsYXNzIEZzRGF0ZVBpY2tlckJpcnRoZGF5Q29tcG9uZW50IGV4dGVuZHMgRnNEYXRlU2Nyb2xsUGlja2VyQ29tcG9uZW50IHtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgbWluWWVhciA9IChuZXcgRGF0ZSgpKS5nZXRGdWxsWWVhcigpIC0gMTIwO1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBtYXhZZWFyID0gKG5ldyBEYXRlKCkpLmdldEZ1bGxZZWFyKCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBpbmplY3RvcjogSW5qZWN0b3IsXG4gICAgZWxlbWVudFJlZjogRWxlbWVudFJlZixcbiAgICBfZGF0ZXBpY2tlckZhY3Rvcnk6IEZzRGF0ZVBpY2tlckRpYWxvZ0ZhY3RvcnksXG4gICAgX2NkUmVmOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgKSB7XG4gICAgc3VwZXIocmVuZGVyZXIsIGluamVjdG9yLCBlbGVtZW50UmVmLCBfZGF0ZXBpY2tlckZhY3RvcnksIF9jZFJlZik7XG4gIH1cbn1cbiJdfQ==