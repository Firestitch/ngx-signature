import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { PickerViewType } from '../../../../libs/common/enums/picker-view-type.enum';
import { FsDatePickerComponent } from '../../date-picker/date-picker.component';
import { RangePickerToComponent } from '../base/range-picker-to.component';
import * as i0 from "@angular/core";
import * as i1 from "@firestitch/clear";
import * as i2 from "../../date-picker-trigger/date-picker-trigger.component";
export class TimeRangePickerToComponent extends RangePickerToComponent {
    constructor() {
        super(...arguments);
        this.view = PickerViewType.Time;
    }
    set fsTimeRangeTo(value) {
        this._name = value;
    }
    set fsTimeRangeToPicker(value) {
        this._name = value;
    }
}
TimeRangePickerToComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimeRangePickerToComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TimeRangePickerToComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TimeRangePickerToComponent, selector: "[fsTimeRangeTo],[fsTimeRangeToPicker]", inputs: { fsTimeRangeTo: "fsTimeRangeTo", fsTimeRangeToPicker: "fsTimeRangeToPicker", view: "view" }, usesInheritance: true, ngImport: i0, template: "\n    <fs-clear [show]=\"value && !disabled && !readonly && clear\" (clear)=\"cleared($event)\"></fs-clear>\n    <fs-datepicker-trigger (click)=\"triggerClick()\" [disabled]=\"disabled || readonly\" [view]=\"view\"></fs-datepicker-trigger>\n  ", isInline: true, components: [{ type: i1.FsClearElementComponent, selector: "fs-clear", inputs: ["show"], outputs: ["clear"] }, { type: i2.FsDatePickerTriggerComponent, selector: "fs-datepicker-trigger", inputs: ["disabled", "view"], outputs: ["click"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimeRangePickerToComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[fsTimeRangeTo],[fsTimeRangeToPicker]',
                    template: FsDatePickerComponent.template,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { fsTimeRangeTo: [{
                type: Input
            }], fsTimeRangeToPicker: [{
                type: Input
            }], view: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1yYW5nZS1waWNrZXItdG8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2FwcC9jb21wb25lbnRzL3JhbmdlLXBpY2tlci90by90aW1lLXJhbmdlLXBpY2tlci10by5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxHQUNOLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUVyRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7OztBQVEzRSxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsc0JBQXNCO0lBTHRFOztRQWdCUyxTQUFJLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQztLQUVuQztJQVhDLElBQWEsYUFBYSxDQUFDLEtBQUs7UUFDOUIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQUVELElBQWEsbUJBQW1CLENBQUMsS0FBSztRQUNwQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDOzt3SEFSVSwwQkFBMEI7NEdBQTFCLDBCQUEwQjs0RkFBMUIsMEJBQTBCO2tCQUx0QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx1Q0FBdUM7b0JBQ2pELFFBQVEsRUFBRSxxQkFBcUIsQ0FBQyxRQUFRO29CQUN4QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OEJBR2MsYUFBYTtzQkFBekIsS0FBSztnQkFJTyxtQkFBbUI7c0JBQS9CLEtBQUs7Z0JBS0MsSUFBSTtzQkFEVixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQaWNrZXJWaWV3VHlwZSB9IGZyb20gJy4uLy4uLy4uLy4uL2xpYnMvY29tbW9uL2VudW1zL3BpY2tlci12aWV3LXR5cGUuZW51bSc7XG5cbmltcG9ydCB7IEZzRGF0ZVBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2RhdGUtcGlja2VyL2RhdGUtcGlja2VyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSYW5nZVBpY2tlclRvQ29tcG9uZW50IH0gZnJvbSAnLi4vYmFzZS9yYW5nZS1waWNrZXItdG8uY29tcG9uZW50JztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdbZnNUaW1lUmFuZ2VUb10sW2ZzVGltZVJhbmdlVG9QaWNrZXJdJyxcbiAgdGVtcGxhdGU6IEZzRGF0ZVBpY2tlckNvbXBvbmVudC50ZW1wbGF0ZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFRpbWVSYW5nZVBpY2tlclRvQ29tcG9uZW50IGV4dGVuZHMgUmFuZ2VQaWNrZXJUb0NvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgc2V0IGZzVGltZVJhbmdlVG8odmFsdWUpIHtcbiAgICB0aGlzLl9uYW1lID0gdmFsdWU7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgZnNUaW1lUmFuZ2VUb1BpY2tlcih2YWx1ZSkge1xuICAgIHRoaXMuX25hbWUgPSB2YWx1ZTtcbiAgfVxuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyB2aWV3ID0gUGlja2VyVmlld1R5cGUuVGltZTtcblxufVxuIl19