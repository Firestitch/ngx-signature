import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { PickerViewType } from '../../../../libs/common/enums/picker-view-type.enum';
import { FsDatePickerComponent } from '../../date-picker/date-picker.component';
import { RangePickerFromComponent } from '../base/range-picker-from.component';
import * as i0 from "@angular/core";
import * as i1 from "@firestitch/clear";
import * as i2 from "../../date-picker-trigger/date-picker-trigger.component";
export class TimeRangePickerFromComponent extends RangePickerFromComponent {
    constructor() {
        super(...arguments);
        this.view = PickerViewType.Time;
    }
    set fsTimeRangeFrom(value) {
        this._name = value;
    }
    set fsTimeRangeFromPicker(value) {
        this._name = value;
    }
    updateValue(value) {
        this._pickerRef.updateStartDate(value);
        super.updateValue(value);
    }
}
TimeRangePickerFromComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimeRangePickerFromComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TimeRangePickerFromComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TimeRangePickerFromComponent, selector: "[fsTimeRangeFrom],[fsTimeRangeFromPicker]", inputs: { fsTimeRangeFrom: "fsTimeRangeFrom", fsTimeRangeFromPicker: "fsTimeRangeFromPicker", view: "view" }, usesInheritance: true, ngImport: i0, template: "\n    <fs-clear [show]=\"value && !disabled && !readonly && clear\" (clear)=\"cleared($event)\"></fs-clear>\n    <fs-datepicker-trigger (click)=\"triggerClick()\" [disabled]=\"disabled || readonly\" [view]=\"view\"></fs-datepicker-trigger>\n  ", isInline: true, components: [{ type: i1.FsClearElementComponent, selector: "fs-clear", inputs: ["show"], outputs: ["clear"] }, { type: i2.FsDatePickerTriggerComponent, selector: "fs-datepicker-trigger", inputs: ["disabled", "view"], outputs: ["click"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimeRangePickerFromComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[fsTimeRangeFrom],[fsTimeRangeFromPicker]',
                    template: FsDatePickerComponent.template,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { fsTimeRangeFrom: [{
                type: Input
            }], fsTimeRangeFromPicker: [{
                type: Input
            }], view: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1yYW5nZS1waWNrZXItZnJvbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYXBwL2NvbXBvbmVudHMvcmFuZ2UtcGlja2VyL2Zyb20vdGltZS1yYW5nZS1waWNrZXItZnJvbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxHQUNOLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUVyRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQzs7OztBQVEvRSxNQUFNLE9BQU8sNEJBQTZCLFNBQVEsd0JBQXdCO0lBTDFFOztRQWdCUyxTQUFJLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQztLQU9uQztJQWhCQyxJQUFhLGVBQWUsQ0FBQyxLQUFLO1FBQ2hDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxJQUFhLHFCQUFxQixDQUFDLEtBQUs7UUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQUtNLFdBQVcsQ0FBQyxLQUFLO1FBQ3RCLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXZDLEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7MEhBakJVLDRCQUE0Qjs4R0FBNUIsNEJBQTRCOzRGQUE1Qiw0QkFBNEI7a0JBTHhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDJDQUEyQztvQkFDckQsUUFBUSxFQUFFLHFCQUFxQixDQUFDLFFBQVE7b0JBQ3hDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs4QkFHYyxlQUFlO3NCQUEzQixLQUFLO2dCQUlPLHFCQUFxQjtzQkFBakMsS0FBSztnQkFLQyxJQUFJO3NCQURWLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBpY2tlclZpZXdUeXBlIH0gZnJvbSAnLi4vLi4vLi4vLi4vbGlicy9jb21tb24vZW51bXMvcGlja2VyLXZpZXctdHlwZS5lbnVtJztcblxuaW1wb3J0IHsgRnNEYXRlUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vZGF0ZS1waWNrZXIvZGF0ZS1waWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFJhbmdlUGlja2VyRnJvbUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UvcmFuZ2UtcGlja2VyLWZyb20uY29tcG9uZW50JztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdbZnNUaW1lUmFuZ2VGcm9tXSxbZnNUaW1lUmFuZ2VGcm9tUGlja2VyXScsXG4gIHRlbXBsYXRlOiBGc0RhdGVQaWNrZXJDb21wb25lbnQudGVtcGxhdGUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUaW1lUmFuZ2VQaWNrZXJGcm9tQ29tcG9uZW50IGV4dGVuZHMgUmFuZ2VQaWNrZXJGcm9tQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSBzZXQgZnNUaW1lUmFuZ2VGcm9tKHZhbHVlKSB7XG4gICAgdGhpcy5fbmFtZSA9IHZhbHVlO1xuICB9XG5cbiAgQElucHV0KCkgc2V0IGZzVGltZVJhbmdlRnJvbVBpY2tlcih2YWx1ZSkge1xuICAgIHRoaXMuX25hbWUgPSB2YWx1ZTtcbiAgfVxuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyB2aWV3ID0gUGlja2VyVmlld1R5cGUuVGltZTtcblxuICBwdWJsaWMgdXBkYXRlVmFsdWUodmFsdWUpOiB2b2lkIHtcbiAgICB0aGlzLl9waWNrZXJSZWYudXBkYXRlU3RhcnREYXRlKHZhbHVlKTtcblxuICAgIHN1cGVyLnVwZGF0ZVZhbHVlKHZhbHVlKTtcbiAgfVxufVxuIl19