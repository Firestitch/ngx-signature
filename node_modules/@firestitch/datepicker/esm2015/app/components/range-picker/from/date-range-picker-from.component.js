import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { FsDatePickerComponent } from '../../date-picker/date-picker.component';
import { RangePickerFromComponent } from '../base/range-picker-from.component';
import * as i0 from "@angular/core";
import * as i1 from "@firestitch/clear";
import * as i2 from "../../date-picker-trigger/date-picker-trigger.component";
export class DateRangePickerFromComponent extends RangePickerFromComponent {
    set fsDateRangeFrom(value) {
        this._name = value;
    }
    set fsDateRangeFromPicker(value) {
        this._name = value;
    }
}
DateRangePickerFromComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DateRangePickerFromComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
DateRangePickerFromComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DateRangePickerFromComponent, selector: "[fsDateRangeFrom],[fsDateRangeFromPicker]", inputs: { fsDateRangeFrom: "fsDateRangeFrom", fsDateRangeFromPicker: "fsDateRangeFromPicker" }, usesInheritance: true, ngImport: i0, template: "\n    <fs-clear [show]=\"value && !disabled && !readonly && clear\" (clear)=\"cleared($event)\"></fs-clear>\n    <fs-datepicker-trigger (click)=\"triggerClick()\" [disabled]=\"disabled || readonly\" [view]=\"view\"></fs-datepicker-trigger>\n  ", isInline: true, components: [{ type: i1.FsClearElementComponent, selector: "fs-clear", inputs: ["show"], outputs: ["clear"] }, { type: i2.FsDatePickerTriggerComponent, selector: "fs-datepicker-trigger", inputs: ["disabled", "view"], outputs: ["click"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DateRangePickerFromComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[fsDateRangeFrom],[fsDateRangeFromPicker]',
                    template: FsDatePickerComponent.template,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { fsDateRangeFrom: [{
                type: Input
            }], fsDateRangeFromPicker: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1yYW5nZS1waWNrZXItZnJvbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYXBwL2NvbXBvbmVudHMvcmFuZ2UtcGlja2VyL2Zyb20vZGF0ZS1yYW5nZS1waWNrZXItZnJvbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxHQUNOLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDOzs7O0FBUS9FLE1BQU0sT0FBTyw0QkFBNkIsU0FBUSx3QkFBd0I7SUFFeEUsSUFBYSxlQUFlLENBQUMsS0FBSztRQUNoQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNyQixDQUFDO0lBRUQsSUFBYSxxQkFBcUIsQ0FBQyxLQUFLO1FBQ3RDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7OzBIQVJVLDRCQUE0Qjs4R0FBNUIsNEJBQTRCOzRGQUE1Qiw0QkFBNEI7a0JBTHhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDJDQUEyQztvQkFDckQsUUFBUSxFQUFFLHFCQUFxQixDQUFDLFFBQVE7b0JBQ3hDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs4QkFHYyxlQUFlO3NCQUEzQixLQUFLO2dCQUlPLHFCQUFxQjtzQkFBakMsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgRnNEYXRlUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vZGF0ZS1waWNrZXIvZGF0ZS1waWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFJhbmdlUGlja2VyRnJvbUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UvcmFuZ2UtcGlja2VyLWZyb20uY29tcG9uZW50JztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdbZnNEYXRlUmFuZ2VGcm9tXSxbZnNEYXRlUmFuZ2VGcm9tUGlja2VyXScsXG4gIHRlbXBsYXRlOiBGc0RhdGVQaWNrZXJDb21wb25lbnQudGVtcGxhdGUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBEYXRlUmFuZ2VQaWNrZXJGcm9tQ29tcG9uZW50IGV4dGVuZHMgUmFuZ2VQaWNrZXJGcm9tQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSBzZXQgZnNEYXRlUmFuZ2VGcm9tKHZhbHVlKSB7XG4gICAgdGhpcy5fbmFtZSA9IHZhbHVlO1xuICB9XG5cbiAgQElucHV0KCkgc2V0IGZzRGF0ZVJhbmdlRnJvbVBpY2tlcih2YWx1ZSkge1xuICAgIHRoaXMuX25hbWUgPSB2YWx1ZTtcbiAgfVxuXG59XG4iXX0=