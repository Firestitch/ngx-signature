import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { PickerViewType } from '../../../../libs/common/enums/picker-view-type.enum';
import { FsDatePickerComponent } from '../../date-picker/date-picker.component';
import { RangePickerFromComponent } from '../base/range-picker-from.component';
import * as i0 from "@angular/core";
import * as i1 from "@firestitch/clear";
import * as i2 from "../../date-picker-trigger/date-picker-trigger.component";
export class DateTimeRangePickerFromComponent extends RangePickerFromComponent {
    constructor() {
        super(...arguments);
        this.view = PickerViewType.DateTime;
    }
    set fsDateTimeRangeFrom(value) {
        this._name = value;
    }
    set fsDateTimeRangeFromPicker(value) {
        this._name = value;
    }
    updateValue(value) {
        this._pickerRef.updateStartDate(value);
        super.updateValue(value);
    }
}
DateTimeRangePickerFromComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DateTimeRangePickerFromComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
DateTimeRangePickerFromComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DateTimeRangePickerFromComponent, selector: "[fsDateTimeRangeFrom],[fsDateTimeRangeFromPicker]", inputs: { fsDateTimeRangeFrom: "fsDateTimeRangeFrom", fsDateTimeRangeFromPicker: "fsDateTimeRangeFromPicker", view: "view" }, usesInheritance: true, ngImport: i0, template: "\n    <fs-clear [show]=\"value && !disabled && !readonly && clear\" (clear)=\"cleared($event)\"></fs-clear>\n    <fs-datepicker-trigger (click)=\"triggerClick()\" [disabled]=\"disabled || readonly\" [view]=\"view\"></fs-datepicker-trigger>\n  ", isInline: true, components: [{ type: i1.FsClearElementComponent, selector: "fs-clear", inputs: ["show"], outputs: ["clear"] }, { type: i2.FsDatePickerTriggerComponent, selector: "fs-datepicker-trigger", inputs: ["disabled", "view"], outputs: ["click"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DateTimeRangePickerFromComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[fsDateTimeRangeFrom],[fsDateTimeRangeFromPicker]',
                    template: FsDatePickerComponent.template,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { fsDateTimeRangeFrom: [{
                type: Input
            }], fsDateTimeRangeFromPicker: [{
                type: Input
            }], view: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS10aW1lLXJhbmdlLXBpY2tlci1mcm9tLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvY29tcG9uZW50cy9yYW5nZS1waWNrZXIvZnJvbS9kYXRlLXRpbWUtcmFuZ2UtcGlja2VyLWZyb20uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULEtBQUssR0FDTixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scURBQXFELENBQUM7QUFFckYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDaEYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUNBQXFDLENBQUM7Ozs7QUFRL0UsTUFBTSxPQUFPLGdDQUFpQyxTQUFRLHdCQUF3QjtJQUw5RTs7UUFnQlMsU0FBSSxHQUFHLGNBQWMsQ0FBQyxRQUFRLENBQUM7S0FPdkM7SUFoQkMsSUFBYSxtQkFBbUIsQ0FBQyxLQUFLO1FBQ3BDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxJQUFhLHlCQUF5QixDQUFDLEtBQUs7UUFDMUMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQUtNLFdBQVcsQ0FBQyxLQUFLO1FBQ3RCLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXZDLEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQzs7OEhBakJVLGdDQUFnQztrSEFBaEMsZ0NBQWdDOzRGQUFoQyxnQ0FBZ0M7a0JBTDVDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG1EQUFtRDtvQkFDN0QsUUFBUSxFQUFFLHFCQUFxQixDQUFDLFFBQVE7b0JBQ3hDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs4QkFHYyxtQkFBbUI7c0JBQS9CLEtBQUs7Z0JBSU8seUJBQXlCO3NCQUFyQyxLQUFLO2dCQUtDLElBQUk7c0JBRFYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUGlja2VyVmlld1R5cGUgfSBmcm9tICcuLi8uLi8uLi8uLi9saWJzL2NvbW1vbi9lbnVtcy9waWNrZXItdmlldy10eXBlLmVudW0nO1xuXG5pbXBvcnQgeyBGc0RhdGVQaWNrZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9kYXRlLXBpY2tlci9kYXRlLXBpY2tlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUmFuZ2VQaWNrZXJGcm9tQ29tcG9uZW50IH0gZnJvbSAnLi4vYmFzZS9yYW5nZS1waWNrZXItZnJvbS5jb21wb25lbnQnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1tmc0RhdGVUaW1lUmFuZ2VGcm9tXSxbZnNEYXRlVGltZVJhbmdlRnJvbVBpY2tlcl0nLFxuICB0ZW1wbGF0ZTogRnNEYXRlUGlja2VyQ29tcG9uZW50LnRlbXBsYXRlLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgRGF0ZVRpbWVSYW5nZVBpY2tlckZyb21Db21wb25lbnQgZXh0ZW5kcyBSYW5nZVBpY2tlckZyb21Db21wb25lbnQge1xuXG4gIEBJbnB1dCgpIHNldCBmc0RhdGVUaW1lUmFuZ2VGcm9tKHZhbHVlKSB7XG4gICAgdGhpcy5fbmFtZSA9IHZhbHVlO1xuICB9XG5cbiAgQElucHV0KCkgc2V0IGZzRGF0ZVRpbWVSYW5nZUZyb21QaWNrZXIodmFsdWUpIHtcbiAgICB0aGlzLl9uYW1lID0gdmFsdWU7XG4gIH1cblxuICBASW5wdXQoKVxuICBwdWJsaWMgdmlldyA9IFBpY2tlclZpZXdUeXBlLkRhdGVUaW1lO1xuXG4gIHB1YmxpYyB1cGRhdGVWYWx1ZSh2YWx1ZSk6IHZvaWQge1xuICAgIHRoaXMuX3BpY2tlclJlZi51cGRhdGVTdGFydERhdGUodmFsdWUpO1xuXG4gICAgc3VwZXIudXBkYXRlVmFsdWUodmFsdWUpO1xuICB9XG59XG4iXX0=