import { Injectable } from '@angular/core';
import { RangePickerRef } from '../classes/range-picker-ref';
import * as i0 from "@angular/core";
export class FsRangePickerStoreService {
    constructor() {
        this._store = new Map();
    }
    registerPickerFrom(name, value, view) {
        this._createIfNotExistsPicker(name, view);
        const pickerRef = this._store.get(name);
        // pickerRef.updateStartDate(value);
        return pickerRef;
    }
    destroyStartDatePicker(name) {
        const pickerRef = this._store.get(name);
        if (pickerRef) {
            pickerRef.destroyStartDatePicker();
            this._destroyRefIfRelatedDestroyed(name, pickerRef);
        }
    }
    destroyEndDatePicker(name) {
        const pickerRef = this._store.get(name);
        if (pickerRef) {
            pickerRef.destroyEndDatePicker();
            this._destroyRefIfRelatedDestroyed(name, pickerRef);
        }
    }
    registerPickerTo(name, value, view) {
        this._createIfNotExistsPicker(name, view);
        const pickerRef = this._store.get(name);
        // pickerRef.updateEndDate(value);
        return pickerRef;
    }
    _createIfNotExistsPicker(name, view) {
        if (!this._store.has(name)) {
            this._store.set(name, new RangePickerRef(view));
        }
    }
    _destroyRefIfRelatedDestroyed(name, ref) {
        if (!ref.startDatePickerExists && !ref.endDatePickerExists) {
            ref.destroy();
            this._store.delete(name);
        }
    }
}
FsRangePickerStoreService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsRangePickerStoreService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
FsRangePickerStoreService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsRangePickerStoreService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsRangePickerStoreService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZ2UtcGlja2VyLXN0b3JlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYXBwL3NlcnZpY2VzL3JhbmdlLXBpY2tlci1zdG9yZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDZCQUE2QixDQUFDOztBQUk3RCxNQUFNLE9BQU8seUJBQXlCO0lBR3BDO1FBRlEsV0FBTSxHQUFHLElBQUksR0FBRyxFQUEwQixDQUFDO0lBR25ELENBQUM7SUFFTSxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUk7UUFDekMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUUxQyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV4QyxvQ0FBb0M7UUFFcEMsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVNLHNCQUFzQixDQUFDLElBQVk7UUFDeEMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFeEMsSUFBSSxTQUFTLEVBQUU7WUFDYixTQUFTLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztZQUVuQyxJQUFJLENBQUMsNkJBQTZCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1NBQ3JEO0lBQ0gsQ0FBQztJQUVNLG9CQUFvQixDQUFDLElBQVk7UUFDdEMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFeEMsSUFBSSxTQUFTLEVBQUU7WUFDYixTQUFTLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztZQUVqQyxJQUFJLENBQUMsNkJBQTZCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1NBQ3JEO0lBQ0gsQ0FBQztJQUVNLGdCQUFnQixDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSTtRQUN2QyxJQUFJLENBQUMsd0JBQXdCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRTFDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRXhDLGtDQUFrQztRQUVsQyxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRU8sd0JBQXdCLENBQUMsSUFBWSxFQUFFLElBQVk7UUFDekQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzFCLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQ2pEO0lBQ0gsQ0FBQztJQUVPLDZCQUE2QixDQUFDLElBQUksRUFBRSxHQUFHO1FBQzdDLElBQUksQ0FBQyxHQUFHLENBQUMscUJBQXFCLElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUU7WUFDMUQsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDMUI7SUFDSCxDQUFDOzt1SEF6RFUseUJBQXlCOzJIQUF6Qix5QkFBeUI7NEZBQXpCLHlCQUF5QjtrQkFEckMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJhbmdlUGlja2VyUmVmIH0gZnJvbSAnLi4vY2xhc3Nlcy9yYW5nZS1waWNrZXItcmVmJztcblxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRnNSYW5nZVBpY2tlclN0b3JlU2VydmljZSB7XG4gIHByaXZhdGUgX3N0b3JlID0gbmV3IE1hcDxzdHJpbmcsIFJhbmdlUGlja2VyUmVmPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgcHVibGljIHJlZ2lzdGVyUGlja2VyRnJvbShuYW1lLCB2YWx1ZSwgdmlldykge1xuICAgIHRoaXMuX2NyZWF0ZUlmTm90RXhpc3RzUGlja2VyKG5hbWUsIHZpZXcpO1xuXG4gICAgY29uc3QgcGlja2VyUmVmID0gdGhpcy5fc3RvcmUuZ2V0KG5hbWUpO1xuXG4gICAgLy8gcGlja2VyUmVmLnVwZGF0ZVN0YXJ0RGF0ZSh2YWx1ZSk7XG5cbiAgICByZXR1cm4gcGlja2VyUmVmO1xuICB9XG5cbiAgcHVibGljIGRlc3Ryb3lTdGFydERhdGVQaWNrZXIobmFtZTogc3RyaW5nKSB7XG4gICAgY29uc3QgcGlja2VyUmVmID0gdGhpcy5fc3RvcmUuZ2V0KG5hbWUpO1xuXG4gICAgaWYgKHBpY2tlclJlZikge1xuICAgICAgcGlja2VyUmVmLmRlc3Ryb3lTdGFydERhdGVQaWNrZXIoKTtcblxuICAgICAgdGhpcy5fZGVzdHJveVJlZklmUmVsYXRlZERlc3Ryb3llZChuYW1lLCBwaWNrZXJSZWYpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBkZXN0cm95RW5kRGF0ZVBpY2tlcihuYW1lOiBzdHJpbmcpIHtcbiAgICBjb25zdCBwaWNrZXJSZWYgPSB0aGlzLl9zdG9yZS5nZXQobmFtZSk7XG5cbiAgICBpZiAocGlja2VyUmVmKSB7XG4gICAgICBwaWNrZXJSZWYuZGVzdHJveUVuZERhdGVQaWNrZXIoKTtcblxuICAgICAgdGhpcy5fZGVzdHJveVJlZklmUmVsYXRlZERlc3Ryb3llZChuYW1lLCBwaWNrZXJSZWYpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyByZWdpc3RlclBpY2tlclRvKG5hbWUsIHZhbHVlLCB2aWV3KTogUmFuZ2VQaWNrZXJSZWYge1xuICAgIHRoaXMuX2NyZWF0ZUlmTm90RXhpc3RzUGlja2VyKG5hbWUsIHZpZXcpO1xuXG4gICAgY29uc3QgcGlja2VyUmVmID0gdGhpcy5fc3RvcmUuZ2V0KG5hbWUpO1xuXG4gICAgLy8gcGlja2VyUmVmLnVwZGF0ZUVuZERhdGUodmFsdWUpO1xuXG4gICAgcmV0dXJuIHBpY2tlclJlZjtcbiAgfVxuXG4gIHByaXZhdGUgX2NyZWF0ZUlmTm90RXhpc3RzUGlja2VyKG5hbWU6IHN0cmluZywgdmlldzogc3RyaW5nKSB7XG4gICAgaWYgKCF0aGlzLl9zdG9yZS5oYXMobmFtZSkpIHtcbiAgICAgIHRoaXMuX3N0b3JlLnNldChuYW1lLCBuZXcgUmFuZ2VQaWNrZXJSZWYodmlldykpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgX2Rlc3Ryb3lSZWZJZlJlbGF0ZWREZXN0cm95ZWQobmFtZSwgcmVmKSB7XG4gICAgaWYgKCFyZWYuc3RhcnREYXRlUGlja2VyRXhpc3RzICYmICFyZWYuZW5kRGF0ZVBpY2tlckV4aXN0cykge1xuICAgICAgcmVmLmRlc3Ryb3koKTtcbiAgICAgIHRoaXMuX3N0b3JlLmRlbGV0ZShuYW1lKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==