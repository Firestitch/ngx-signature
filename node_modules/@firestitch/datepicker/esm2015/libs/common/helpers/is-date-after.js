import { isAfter, isEqual, isValid } from 'date-fns';
import { PickerViewType } from '../../common/enums/picker-view-type.enum';
import { cloneDate } from './clone-date';
import { isSameDate } from './is-same-date';
export function isDateAfter(target, from, view) {
    let startDate, endDate;
    if (view === PickerViewType.Time) {
        if (from) {
            startDate = cloneDate(from);
        }
        if (target) {
            endDate = cloneDate(target);
        }
    }
    else {
        startDate = from;
        endDate = target;
    }
    if (!startDate || !endDate) {
        return true;
    }
    if (view === PickerViewType.Date && isValid(startDate) && isValid(endDate) && isSameDate(startDate, endDate)) {
        return true;
    }
    if ((view === PickerViewType.DateTime || view === PickerViewType.Time) && isEqual(startDate, endDate)) {
        return true;
    }
    return isAfter(endDate, startDate);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtZGF0ZS1hZnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWJzL2NvbW1vbi9oZWxwZXJzL2lzLWRhdGUtYWZ0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRXJELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUUxRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUc1QyxNQUFNLFVBQVUsV0FBVyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBb0I7SUFDNUQsSUFBSSxTQUFTLEVBQUUsT0FBTyxDQUFDO0lBRXZCLElBQUksSUFBSSxLQUFLLGNBQWMsQ0FBQyxJQUFJLEVBQUU7UUFDaEMsSUFBSSxJQUFJLEVBQUU7WUFDUixTQUFTLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzdCO1FBRUQsSUFBSSxNQUFNLEVBQUU7WUFDVixPQUFPLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzdCO0tBQ0Y7U0FBTTtRQUNMLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDakIsT0FBTyxHQUFHLE1BQU0sQ0FBQztLQUNsQjtJQUVELElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQyxPQUFPLEVBQUU7UUFDMUIsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUVELElBQUksSUFBSSxLQUFLLGNBQWMsQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxVQUFVLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxFQUFFO1FBQzVHLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxJQUFJLENBQUMsSUFBSSxLQUFLLGNBQWMsQ0FBQyxRQUFRLElBQUksSUFBSSxLQUFLLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxPQUFPLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxFQUFFO1FBQ3JHLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFFRCxPQUFPLE9BQU8sQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDckMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQWZ0ZXIsIGlzRXF1YWwsIGlzVmFsaWQgfSBmcm9tICdkYXRlLWZucyc7XG5cbmltcG9ydCB7IFBpY2tlclZpZXdUeXBlIH0gZnJvbSAnLi4vLi4vY29tbW9uL2VudW1zL3BpY2tlci12aWV3LXR5cGUuZW51bSc7XG5cbmltcG9ydCB7IGNsb25lRGF0ZSB9IGZyb20gJy4vY2xvbmUtZGF0ZSc7XG5pbXBvcnQgeyBpc1NhbWVEYXRlIH0gZnJvbSAnLi9pcy1zYW1lLWRhdGUnO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBpc0RhdGVBZnRlcih0YXJnZXQsIGZyb20sIHZpZXc6IFBpY2tlclZpZXdUeXBlKTogYm9vbGVhbiB7XG4gIGxldCBzdGFydERhdGUsIGVuZERhdGU7XG5cbiAgaWYgKHZpZXcgPT09IFBpY2tlclZpZXdUeXBlLlRpbWUpIHtcbiAgICBpZiAoZnJvbSkge1xuICAgICAgc3RhcnREYXRlID0gY2xvbmVEYXRlKGZyb20pO1xuICAgIH1cblxuICAgIGlmICh0YXJnZXQpIHtcbiAgICAgIGVuZERhdGUgPSBjbG9uZURhdGUodGFyZ2V0KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgc3RhcnREYXRlID0gZnJvbTtcbiAgICBlbmREYXRlID0gdGFyZ2V0O1xuICB9XG5cbiAgaWYgKCFzdGFydERhdGUgfHwgIWVuZERhdGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh2aWV3ID09PSBQaWNrZXJWaWV3VHlwZS5EYXRlICYmIGlzVmFsaWQoc3RhcnREYXRlKSAmJiBpc1ZhbGlkKGVuZERhdGUpICYmIGlzU2FtZURhdGUoc3RhcnREYXRlLCBlbmREYXRlKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKCh2aWV3ID09PSBQaWNrZXJWaWV3VHlwZS5EYXRlVGltZSB8fCB2aWV3ID09PSBQaWNrZXJWaWV3VHlwZS5UaW1lKSAmJiBpc0VxdWFsKHN0YXJ0RGF0ZSwgZW5kRGF0ZSkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBpc0FmdGVyKGVuZERhdGUsIHN0YXJ0RGF0ZSk7XG59XG4iXX0=