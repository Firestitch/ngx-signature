import { endOfDay, isWithinInterval, lightFormat, startOfDay } from 'date-fns';
export function isRangeDisabled(disabledDays, start, end) {
    if (!disabledDays || !disabledDays.length) {
        return false;
    }
    for (let i = 0; i < disabledDays.length; i++) {
        const value = disabledDays[i];
        const startDay = startOfDay(value[0]);
        const endDay = endOfDay(value[1]);
        const startDayIntersectWithDisabled = isWithinInterval(start, { start: startDay, end: endDay })
            || lightFormat(start, 'yyyy-MM-dd') === lightFormat(value[0], 'yyyy-MM-dd');
        const endDayIntersectWithDisabled = isWithinInterval(end, { start: startDay, end: endDay })
            || lightFormat(end, 'yyyy-MM-dd') === lightFormat(value[1], 'yyyy-MM-dd');
        if (startDayIntersectWithDisabled && endDayIntersectWithDisabled) {
            return true;
        }
    }
    return false;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtcmFuZ2UtZGlzYWJsZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGlicy9jb21tb24vaGVscGVycy9pcy1yYW5nZS1kaXNhYmxlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFL0UsTUFBTSxVQUFVLGVBQWUsQ0FBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLEdBQUc7SUFDdEQsSUFBSSxDQUFDLFlBQVksSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUU7UUFDekMsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzVDLE1BQU0sS0FBSyxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUU5QixNQUFNLFFBQVEsR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEMsTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWxDLE1BQU0sNkJBQTZCLEdBQ2pDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxDQUFDO2VBQ3RELFdBQVcsQ0FBQyxLQUFLLEVBQUUsWUFBWSxDQUFDLEtBQUssV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUU5RSxNQUFNLDJCQUEyQixHQUMvQixnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQztlQUNwRCxXQUFXLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxLQUFLLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFFNUUsSUFBSSw2QkFBNkIsSUFBSSwyQkFBMkIsRUFBRTtZQUNoRSxPQUFPLElBQUksQ0FBQztTQUNiO0tBQ0Y7SUFFRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmRPZkRheSwgaXNXaXRoaW5JbnRlcnZhbCwgbGlnaHRGb3JtYXQsIHN0YXJ0T2ZEYXkgfSBmcm9tICdkYXRlLWZucyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1JhbmdlRGlzYWJsZWQoZGlzYWJsZWREYXlzLCBzdGFydCwgZW5kKSB7XG4gIGlmICghZGlzYWJsZWREYXlzIHx8ICFkaXNhYmxlZERheXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBkaXNhYmxlZERheXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCB2YWx1ZSA9IGRpc2FibGVkRGF5c1tpXTtcblxuICAgIGNvbnN0IHN0YXJ0RGF5ID0gc3RhcnRPZkRheSh2YWx1ZVswXSk7XG4gICAgY29uc3QgZW5kRGF5ID0gZW5kT2ZEYXkodmFsdWVbMV0pO1xuXG4gICAgY29uc3Qgc3RhcnREYXlJbnRlcnNlY3RXaXRoRGlzYWJsZWQgPVxuICAgICAgaXNXaXRoaW5JbnRlcnZhbChzdGFydCwgeyBzdGFydDogc3RhcnREYXksIGVuZDogZW5kRGF5IH0pXG4gICAgICB8fCBsaWdodEZvcm1hdChzdGFydCwgJ3l5eXktTU0tZGQnKSA9PT0gbGlnaHRGb3JtYXQodmFsdWVbMF0sICd5eXl5LU1NLWRkJyk7XG5cbiAgICBjb25zdCBlbmREYXlJbnRlcnNlY3RXaXRoRGlzYWJsZWQgPVxuICAgICAgaXNXaXRoaW5JbnRlcnZhbChlbmQsIHsgc3RhcnQ6IHN0YXJ0RGF5LCBlbmQ6IGVuZERheSB9KVxuICAgICAgfHwgbGlnaHRGb3JtYXQoZW5kLCAneXl5eS1NTS1kZCcpID09PSBsaWdodEZvcm1hdCh2YWx1ZVsxXSwgJ3l5eXktTU0tZGQnKTtcblxuICAgIGlmIChzdGFydERheUludGVyc2VjdFdpdGhEaXNhYmxlZCAmJiBlbmREYXlJbnRlcnNlY3RXaXRoRGlzYWJsZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cbiJdfQ==