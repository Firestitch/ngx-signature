import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
import { FsDatePickerDialogModel } from '../../../../../dialog/classes/dialog-model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/tabs";
import * as i2 from "../virtual-scroll-calendar/virtual-scroll-calendar.component";
import * as i3 from "../time-picker/time-picker.component";
import * as i4 from "@angular/common";
export class FDatePickerMobileDatetimePickerComponent {
    constructor() {
        this.tabChange = new EventEmitter();
    }
    selectedDateTimeTabChange(index) {
        this.tabChange.emit(index);
    }
}
FDatePickerMobileDatetimePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FDatePickerMobileDatetimePickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
FDatePickerMobileDatetimePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FDatePickerMobileDatetimePickerComponent, selector: "fs-datepicker-mobile-datetime-picker", inputs: { datePickerModel: "datePickerModel" }, outputs: { tabChange: "tabChange" }, ngImport: i0, template: "<mat-tab-group mat-stretch-tabs\n               dynamicHeight\n               (selectedIndexChange)=\"selectedDateTimeTabChange($event)\"\n               #tabGroup>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <ng-container *ngIf=\"datePickerModel.model$ | async as model; else noDate\">\n        {{ model | date: 'MMM d, yyyy'}}\n      </ng-container>\n      <ng-template #noDate>Date</ng-template>\n    </ng-template>\n\n    <fs-datepicker-mobile-scroll-calendar [datePickerModel]=\"datePickerModel\"\n                                          [autoClose]=\"false\"\n                                          [parentTabGroup]=\"tabGroup\"\n                                          [parentTabIndex]=\"0\">\n    </fs-datepicker-mobile-scroll-calendar>\n\n  </mat-tab>\n\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <ng-container *ngIf=\"datePickerModel.model$ | async as model; else noTime\">\n        {{ model | date: 'h:mm'}}\n        {{ model | date: 'aaa' | lowercase}}\n      </ng-container>\n      <ng-template #noTime>Time</ng-template>\n    </ng-template>\n\n    <fs-datepicker-mobile-timepicker [datePickerModel]=\"datePickerModel\"\n                                     [autoClose]=\"false\"\n                                     [showNotSelected]=\"false\">\n    </fs-datepicker-mobile-timepicker>\n  </mat-tab>\n</mat-tab-group>\n", styles: [""], components: [{ type: i1.MatTabGroup, selector: "mat-tab-group", inputs: ["color", "disableRipple"], exportAs: ["matTabGroup"] }, { type: i1.MatTab, selector: "mat-tab", inputs: ["disabled", "label", "aria-label", "aria-labelledby"], exportAs: ["matTab"] }, { type: i2.FsDatePickerVirtualScrollCalendarComponent, selector: "fs-datepicker-mobile-scroll-calendar", inputs: ["datePickerModel", "autoClose", "parentTabGroup", "parentTabIndex"] }, { type: i3.FsMobileTimePickerComponent, selector: "fs-datepicker-mobile-timepicker", inputs: ["datePickerModel", "autoClose", "showNotSelected"] }], directives: [{ type: i1.MatTabLabel, selector: "[mat-tab-label], [matTabLabel]" }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4.AsyncPipe, "date": i4.DatePipe, "lowercase": i4.LowerCasePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FDatePickerMobileDatetimePickerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'fs-datepicker-mobile-datetime-picker',
                    templateUrl: './date-time-picker.component.html',
                    styleUrls: ['./date-time-picker.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { datePickerModel: [{
                type: Input
            }], tabChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS10aW1lLXBpY2tlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGlicy9kaWFsb2cvbW9kdWxlcy9tb2JpbGUtZGlhbG9nLWNvbnRhaW5lci9jb21wb25lbnRzL2RhdGUtdGltZS1waWNrZXIvZGF0ZS10aW1lLXBpY2tlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGlicy9kaWFsb2cvbW9kdWxlcy9tb2JpbGUtZGlhbG9nLWNvbnRhaW5lci9jb21wb25lbnRzL2RhdGUtdGltZS1waWNrZXIvZGF0ZS10aW1lLXBpY2tlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFBRSxZQUFZLEVBQ3ZCLEtBQUssRUFBRSxNQUFNLEdBQ2QsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNENBQTRDLENBQUM7Ozs7OztBQVFyRixNQUFNLE9BQU8sd0NBQXdDO0lBTnJEO1FBWVMsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7S0FNL0M7SUFKUSx5QkFBeUIsQ0FBQyxLQUFhO1FBQzVDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdCLENBQUM7O3NJQVZVLHdDQUF3QzswSEFBeEMsd0NBQXdDLGlLQ2RyRCxpMUNBbUNBOzRGRHJCYSx3Q0FBd0M7a0JBTnBELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNDQUFzQztvQkFDaEQsV0FBVyxFQUFFLG1DQUFtQztvQkFDaEQsU0FBUyxFQUFFLENBQUMsbUNBQW1DLENBQUM7b0JBQ2hELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs4QkFJUSxlQUFlO3NCQURyQixLQUFLO2dCQUlDLFNBQVM7c0JBRGYsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEZzRGF0ZVBpY2tlckRpYWxvZ01vZGVsIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vZGlhbG9nL2NsYXNzZXMvZGlhbG9nLW1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZnMtZGF0ZXBpY2tlci1tb2JpbGUtZGF0ZXRpbWUtcGlja2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RhdGUtdGltZS1waWNrZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9kYXRlLXRpbWUtcGlja2VyLmNvbXBvbmVudC5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBGRGF0ZVBpY2tlck1vYmlsZURhdGV0aW1lUGlja2VyQ29tcG9uZW50IHtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgZGF0ZVBpY2tlck1vZGVsOiBGc0RhdGVQaWNrZXJEaWFsb2dNb2RlbDtcblxuICBAT3V0cHV0KClcbiAgcHVibGljIHRhYkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xuXG4gIHB1YmxpYyBzZWxlY3RlZERhdGVUaW1lVGFiQ2hhbmdlKGluZGV4OiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLnRhYkNoYW5nZS5lbWl0KGluZGV4KTtcbiAgfVxuXG59XG4iLCI8bWF0LXRhYi1ncm91cCBtYXQtc3RyZXRjaC10YWJzXG4gICAgICAgICAgICAgICBkeW5hbWljSGVpZ2h0XG4gICAgICAgICAgICAgICAoc2VsZWN0ZWRJbmRleENoYW5nZSk9XCJzZWxlY3RlZERhdGVUaW1lVGFiQ2hhbmdlKCRldmVudClcIlxuICAgICAgICAgICAgICAgI3RhYkdyb3VwPlxuICA8bWF0LXRhYj5cbiAgICA8bmctdGVtcGxhdGUgbWF0LXRhYi1sYWJlbD5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJkYXRlUGlja2VyTW9kZWwubW9kZWwkIHwgYXN5bmMgYXMgbW9kZWw7IGVsc2Ugbm9EYXRlXCI+XG4gICAgICAgIHt7IG1vZGVsIHwgZGF0ZTogJ01NTSBkLCB5eXl5J319XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDxuZy10ZW1wbGF0ZSAjbm9EYXRlPkRhdGU8L25nLXRlbXBsYXRlPlxuICAgIDwvbmctdGVtcGxhdGU+XG5cbiAgICA8ZnMtZGF0ZXBpY2tlci1tb2JpbGUtc2Nyb2xsLWNhbGVuZGFyIFtkYXRlUGlja2VyTW9kZWxdPVwiZGF0ZVBpY2tlck1vZGVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFthdXRvQ2xvc2VdPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3BhcmVudFRhYkdyb3VwXT1cInRhYkdyb3VwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtwYXJlbnRUYWJJbmRleF09XCIwXCI+XG4gICAgPC9mcy1kYXRlcGlja2VyLW1vYmlsZS1zY3JvbGwtY2FsZW5kYXI+XG5cbiAgPC9tYXQtdGFiPlxuXG4gIDxtYXQtdGFiPlxuICAgIDxuZy10ZW1wbGF0ZSBtYXQtdGFiLWxhYmVsPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImRhdGVQaWNrZXJNb2RlbC5tb2RlbCQgfCBhc3luYyBhcyBtb2RlbDsgZWxzZSBub1RpbWVcIj5cbiAgICAgICAge3sgbW9kZWwgfCBkYXRlOiAnaDptbSd9fVxuICAgICAgICB7eyBtb2RlbCB8IGRhdGU6ICdhYWEnIHwgbG93ZXJjYXNlfX1cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPG5nLXRlbXBsYXRlICNub1RpbWU+VGltZTwvbmctdGVtcGxhdGU+XG4gICAgPC9uZy10ZW1wbGF0ZT5cblxuICAgIDxmcy1kYXRlcGlja2VyLW1vYmlsZS10aW1lcGlja2VyIFtkYXRlUGlja2VyTW9kZWxdPVwiZGF0ZVBpY2tlck1vZGVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYXV0b0Nsb3NlXT1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc2hvd05vdFNlbGVjdGVkXT1cImZhbHNlXCI+XG4gICAgPC9mcy1kYXRlcGlja2VyLW1vYmlsZS10aW1lcGlja2VyPlxuICA8L21hdC10YWI+XG48L21hdC10YWItZ3JvdXA+XG4iXX0=