import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { MatBottomSheetRef } from '@angular/material/bottom-sheet';
import { FsDatePickerDialogModel } from '../../../../../dialog/classes/dialog-model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/bottom-sheet";
import * as i2 from "../../../../../calendar/components/time/time.component";
import * as i3 from "@angular/common";
export class FsMobileTimePickerComponent {
    constructor(_bottomSheet) {
        this._bottomSheet = _bottomSheet;
        this.autoClose = true;
        this.showNotSelected = true;
    }
    dateChanged(date) {
        this.datePickerModel.model = date;
    }
    close() {
        if (this.autoClose) {
            this._bottomSheet.dismiss();
        }
    }
}
FsMobileTimePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsMobileTimePickerComponent, deps: [{ token: i1.MatBottomSheetRef }], target: i0.ɵɵFactoryTarget.Component });
FsMobileTimePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsMobileTimePickerComponent, selector: "fs-datepicker-mobile-timepicker", inputs: { datePickerModel: "datePickerModel", autoClose: "autoClose", showNotSelected: "showNotSelected" }, ngImport: i0, template: "<fs-date-picker-time\n  class=\"fs-date-picker-dialog\"\n  [date]=\"datePickerModel.model$ | async\"\n  [minutes]=\"datePickerModel.minutes\"\n  [disabledTimes]=\"datePickerModel.disabledTimes$ | async\"\n  [expanded]=\"datePickerModel.timeExpanded$ | async\"\n  [showNotSelected]=\"showNotSelected\"\n  (onChange)=\"dateChanged($event)\"\n></fs-date-picker-time>\n", styles: [":host ::ng-deep .month-year.time{display:none}\n"], components: [{ type: i2.FsDatePickerTimeComponent, selector: "fs-date-picker-time", inputs: ["date", "disabledMinutes", "disabledHours", "disabledTimes", "expanded", "minutes", "showNotSelected"], outputs: ["onChange"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsMobileTimePickerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'fs-datepicker-mobile-timepicker',
                    templateUrl: './time-picker.component.html',
                    styleUrls: ['./time-picker.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.MatBottomSheetRef }]; }, propDecorators: { datePickerModel: [{
                type: Input
            }], autoClose: [{
                type: Input
            }], showNotSelected: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYnMvZGlhbG9nL21vZHVsZXMvbW9iaWxlLWRpYWxvZy1jb250YWluZXIvY29tcG9uZW50cy90aW1lLXBpY2tlci90aW1lLXBpY2tlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGlicy9kaWFsb2cvbW9kdWxlcy9tb2JpbGUtZGlhbG9nLWNvbnRhaW5lci9jb21wb25lbnRzL3RpbWUtcGlja2VyL3RpbWUtcGlja2VyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULEtBQUssR0FDTixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVuRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQzs7Ozs7QUFTckYsTUFBTSxPQUFPLDJCQUEyQjtJQVd0QyxZQUNVLFlBQStCO1FBQS9CLGlCQUFZLEdBQVosWUFBWSxDQUFtQjtRQU5sQyxjQUFTLEdBQUcsSUFBSSxDQUFDO1FBR2pCLG9CQUFlLEdBQUcsSUFBSSxDQUFDO0lBSzlCLENBQUM7SUFFTSxXQUFXLENBQUMsSUFBSTtRQUNyQixJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDcEMsQ0FBQztJQUVNLEtBQUs7UUFDVixJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUM3QjtJQUNILENBQUM7O3lIQXhCVSwyQkFBMkI7NkdBQTNCLDJCQUEyQixtTENqQnhDLCtXQVNBOzRGRFFhLDJCQUEyQjtrQkFOdkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUNBQWlDO29CQUMzQyxXQUFXLEVBQUUsOEJBQThCO29CQUMzQyxTQUFTLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQztvQkFDM0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEO3dHQUlRLGVBQWU7c0JBRHJCLEtBQUs7Z0JBSUMsU0FBUztzQkFEZixLQUFLO2dCQUlDLGVBQWU7c0JBRHJCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE1hdEJvdHRvbVNoZWV0UmVmIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYm90dG9tLXNoZWV0JztcblxuaW1wb3J0IHsgRnNEYXRlUGlja2VyRGlhbG9nTW9kZWwgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9kaWFsb2cvY2xhc3Nlcy9kaWFsb2ctbW9kZWwnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZzLWRhdGVwaWNrZXItbW9iaWxlLXRpbWVwaWNrZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdGltZS1waWNrZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90aW1lLXBpY2tlci5jb21wb25lbnQuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgRnNNb2JpbGVUaW1lUGlja2VyQ29tcG9uZW50IHtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgZGF0ZVBpY2tlck1vZGVsOiBGc0RhdGVQaWNrZXJEaWFsb2dNb2RlbDtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgYXV0b0Nsb3NlID0gdHJ1ZTtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgc2hvd05vdFNlbGVjdGVkID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9ib3R0b21TaGVldDogTWF0Qm90dG9tU2hlZXRSZWYsXG4gICkge1xuICB9XG5cbiAgcHVibGljIGRhdGVDaGFuZ2VkKGRhdGUpOiB2b2lkIHtcbiAgICB0aGlzLmRhdGVQaWNrZXJNb2RlbC5tb2RlbCA9IGRhdGU7XG4gIH1cblxuICBwdWJsaWMgY2xvc2UoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuYXV0b0Nsb3NlKSB7XG4gICAgICB0aGlzLl9ib3R0b21TaGVldC5kaXNtaXNzKCk7XG4gICAgfVxuICB9XG5cbn1cbiIsIjxmcy1kYXRlLXBpY2tlci10aW1lXG4gIGNsYXNzPVwiZnMtZGF0ZS1waWNrZXItZGlhbG9nXCJcbiAgW2RhdGVdPVwiZGF0ZVBpY2tlck1vZGVsLm1vZGVsJCB8IGFzeW5jXCJcbiAgW21pbnV0ZXNdPVwiZGF0ZVBpY2tlck1vZGVsLm1pbnV0ZXNcIlxuICBbZGlzYWJsZWRUaW1lc109XCJkYXRlUGlja2VyTW9kZWwuZGlzYWJsZWRUaW1lcyQgfCBhc3luY1wiXG4gIFtleHBhbmRlZF09XCJkYXRlUGlja2VyTW9kZWwudGltZUV4cGFuZGVkJCB8IGFzeW5jXCJcbiAgW3Nob3dOb3RTZWxlY3RlZF09XCJzaG93Tm90U2VsZWN0ZWRcIlxuICAob25DaGFuZ2UpPVwiZGF0ZUNoYW5nZWQoJGV2ZW50KVwiXG4+PC9mcy1kYXRlLXBpY2tlci10aW1lPlxuIl19