import { ChangeDetectionStrategy, Component, Inject, } from '@angular/core';
import { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/bottom-sheet";
import * as i2 from "../virtual-scroll-calendar/virtual-scroll-calendar.component";
import * as i3 from "../time-picker/time-picker.component";
import * as i4 from "../date-time-picker/date-time-picker.component";
import * as i5 from "@angular/material/list";
import * as i6 from "@angular/material/button";
import * as i7 from "@angular/common";
export class FsMobileCalendarDialogComponent {
    constructor(_data, _bottomSheetRef) {
        this._data = _data;
        this._bottomSheetRef = _bottomSheetRef;
        this.selectedDateTimeTab = 0;
        this._dialogRef = this._data.dateDialogRef;
    }
    get datePickerModel() {
        return this._dialogRef.pickerModel;
    }
    get dialogRef() {
        return this._dialogRef;
    }
    toggleTimeExpand() {
        this.datePickerModel.timeExpanded = !this.datePickerModel.timeExpanded;
    }
    selectedDateTimeTabChange(index) {
        this.selectedDateTimeTab = index;
    }
    close() {
        this._bottomSheetRef.dismiss();
    }
    datetimeTabChanged(index) {
        this.selectedDateTimeTab = index;
    }
}
FsMobileCalendarDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsMobileCalendarDialogComponent, deps: [{ token: MAT_BOTTOM_SHEET_DATA }, { token: i1.MatBottomSheetRef }], target: i0.ɵɵFactoryTarget.Component });
FsMobileCalendarDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsMobileCalendarDialogComponent, selector: "ng-component", ngImport: i0, template: "<div class=\"fs-date-picker-dialog\">\n  <div class=\"calendar-container\">\n    <ng-container [ngSwitch]=\"datePickerModel.view\">\n      <ng-template [ngSwitchCase]=\"'date'\">\n        <fs-datepicker-mobile-scroll-calendar [datePickerModel]=\"datePickerModel\">\n        </fs-datepicker-mobile-scroll-calendar>\n      </ng-template>\n\n      <ng-template [ngSwitchCase]=\"'week'\">\n        <fs-datepicker-mobile-scroll-calendar [datePickerModel]=\"datePickerModel\">\n        </fs-datepicker-mobile-scroll-calendar>\n      </ng-template>\n\n      <ng-template [ngSwitchCase]=\"'monthrange'\">\n        <fs-datepicker-mobile-scroll-calendar [datePickerModel]=\"datePickerModel\">\n        </fs-datepicker-mobile-scroll-calendar>\n      </ng-template>\n\n      <ng-template [ngSwitchCase]=\"'time'\">\n        <fs-datepicker-mobile-timepicker [datePickerModel]=\"datePickerModel\">\n        </fs-datepicker-mobile-timepicker>\n      </ng-template>\n\n      <ng-template [ngSwitchCase]=\"'datetime'\">\n        <fs-datepicker-mobile-datetime-picker [datePickerModel]=\"datePickerModel\"\n                                              (tabChange)=\"datetimeTabChanged($event)\">\n        </fs-datepicker-mobile-datetime-picker>\n      </ng-template>\n    </ng-container>\n  </div>\n</div>\n\n<mat-nav-list class=\"actions\">\n  <ng-container *ngIf=\"datePickerModel.minutes\n                    && (\n                      (datePickerModel.isDateTimeView && selectedDateTimeTab !== 0)\n                      || datePickerModel.isTimeView\n                    )\">\n    <mat-list-item (click)=\"toggleTimeExpand()\">\n      <button type=\"button\"\n              mat-button\n              class=\"button-more\">\n        <ng-container *ngIf=\"!(datePickerModel.timeExpanded$ | async); else lessMinutes\">\n          More Minutes\n        </ng-container>\n        <ng-template #lessMinutes>\n          Less Minutes\n        </ng-template>\n      </button>\n    </mat-list-item>\n\n  </ng-container>\n\n  <mat-list-item (click)=\"close()\">\n    <button mat-icon-button color=\"primary\">\n      Done\n    </button>\n  </mat-list-item>\n</mat-nav-list>\n", styles: ["fs-date-picker-calendar{display:block}:host ::ng-deep .actions .mat-list-item-content{justify-content:center}.example-viewport{height:328px}\n"], components: [{ type: i2.FsDatePickerVirtualScrollCalendarComponent, selector: "fs-datepicker-mobile-scroll-calendar", inputs: ["datePickerModel", "autoClose", "parentTabGroup", "parentTabIndex"] }, { type: i3.FsMobileTimePickerComponent, selector: "fs-datepicker-mobile-timepicker", inputs: ["datePickerModel", "autoClose", "showNotSelected"] }, { type: i4.FDatePickerMobileDatetimePickerComponent, selector: "fs-datepicker-mobile-datetime-picker", inputs: ["datePickerModel"], outputs: ["tabChange"] }, { type: i5.MatNavList, selector: "mat-nav-list", inputs: ["disableRipple", "disabled"], exportAs: ["matNavList"] }, { type: i5.MatListItem, selector: "mat-list-item, a[mat-list-item], button[mat-list-item]", inputs: ["disableRipple", "disabled"], exportAs: ["matListItem"] }, { type: i6.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i7.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i7.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i7.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsMobileCalendarDialogComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './mobile-dialog.component.html',
                    styleUrls: ['./mobile-dialog.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_BOTTOM_SHEET_DATA]
                }] }, { type: i1.MatBottomSheetRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9iaWxlLWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGlicy9kaWFsb2cvbW9kdWxlcy9tb2JpbGUtZGlhbG9nLWNvbnRhaW5lci9jb21wb25lbnRzL21vYmlsZS1kaWFsb2cvbW9iaWxlLWRpYWxvZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGlicy9kaWFsb2cvbW9kdWxlcy9tb2JpbGUtZGlhbG9nLWNvbnRhaW5lci9jb21wb25lbnRzL21vYmlsZS1kaWFsb2cvbW9iaWxlLWRpYWxvZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxNQUFNLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLHFCQUFxQixFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7Ozs7Ozs7OztBQVcxRixNQUFNLE9BQU8sK0JBQStCO0lBTTFDLFlBRVUsS0FBVSxFQUNWLGVBQXVDO1FBRHZDLFVBQUssR0FBTCxLQUFLLENBQUs7UUFDVixvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7UUFQMUMsd0JBQW1CLEdBQUcsQ0FBQyxDQUFDO1FBUzdCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUM7SUFDN0MsQ0FBQztJQUVELElBQVcsZUFBZTtRQUN4QixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFXLFNBQVM7UUFDbEIsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxnQkFBZ0I7UUFDckIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQztJQUN6RSxDQUFDO0lBRU0seUJBQXlCLENBQUMsS0FBSztRQUNwQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7SUFFTSxLQUFLO1FBQ1YsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBRU0sa0JBQWtCLENBQUMsS0FBYTtRQUNyQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7OzZIQXBDVSwrQkFBK0Isa0JBT2hDLHFCQUFxQjtpSEFQcEIsK0JBQStCLG9EQ2pCNUMseW1FQTJEQTs0RkQxQ2EsK0JBQStCO2tCQUwzQyxTQUFTO21CQUFDO29CQUNULFdBQVcsRUFBRSxnQ0FBZ0M7b0JBQzdDLFNBQVMsRUFBRSxDQUFDLGdDQUFnQyxDQUFDO29CQUM3QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OzBCQVFJLE1BQU07MkJBQUMscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5qZWN0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTUFUX0JPVFRPTV9TSEVFVF9EQVRBLCBNYXRCb3R0b21TaGVldFJlZiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2JvdHRvbS1zaGVldCc7XG5cbmltcG9ydCB7IEZzRGF0ZVBpY2tlckRpYWxvZ01vZGVsIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vZGlhbG9nL2NsYXNzZXMvZGlhbG9nLW1vZGVsJztcbmltcG9ydCB7IEZzRGF0ZVBpY2tlckRpYWxvZ1JlZiB9IGZyb20gJy4uLy4uLy4uLy4uL2NsYXNzZXMvZGlhbG9nLXJlZic7XG5cblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiAnLi9tb2JpbGUtZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbW9iaWxlLWRpYWxvZy5jb21wb25lbnQuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgRnNNb2JpbGVDYWxlbmRhckRpYWxvZ0NvbXBvbmVudCB7XG5cbiAgcHVibGljIHNlbGVjdGVkRGF0ZVRpbWVUYWIgPSAwO1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgX2RpYWxvZ1JlZjogRnNEYXRlUGlja2VyRGlhbG9nUmVmO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoTUFUX0JPVFRPTV9TSEVFVF9EQVRBKVxuICAgIHByaXZhdGUgX2RhdGE6IGFueSxcbiAgICBwcml2YXRlIF9ib3R0b21TaGVldFJlZjogTWF0Qm90dG9tU2hlZXRSZWY8YW55PixcbiAgKSB7XG4gICAgdGhpcy5fZGlhbG9nUmVmID0gdGhpcy5fZGF0YS5kYXRlRGlhbG9nUmVmO1xuICB9XG5cbiAgcHVibGljIGdldCBkYXRlUGlja2VyTW9kZWwoKTogRnNEYXRlUGlja2VyRGlhbG9nTW9kZWwge1xuICAgIHJldHVybiB0aGlzLl9kaWFsb2dSZWYucGlja2VyTW9kZWw7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGRpYWxvZ1JlZigpOiBGc0RhdGVQaWNrZXJEaWFsb2dSZWYge1xuICAgIHJldHVybiB0aGlzLl9kaWFsb2dSZWY7XG4gIH1cblxuICBwdWJsaWMgdG9nZ2xlVGltZUV4cGFuZCgpIHtcbiAgICB0aGlzLmRhdGVQaWNrZXJNb2RlbC50aW1lRXhwYW5kZWQgPSAhdGhpcy5kYXRlUGlja2VyTW9kZWwudGltZUV4cGFuZGVkO1xuICB9XG5cbiAgcHVibGljIHNlbGVjdGVkRGF0ZVRpbWVUYWJDaGFuZ2UoaW5kZXgpIHtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZVRpbWVUYWIgPSBpbmRleDtcbiAgfVxuXG4gIHB1YmxpYyBjbG9zZSgpOiB2b2lkIHtcbiAgICB0aGlzLl9ib3R0b21TaGVldFJlZi5kaXNtaXNzKCk7XG4gIH1cblxuICBwdWJsaWMgZGF0ZXRpbWVUYWJDaGFuZ2VkKGluZGV4OiBudW1iZXIpIHtcbiAgICB0aGlzLnNlbGVjdGVkRGF0ZVRpbWVUYWIgPSBpbmRleDtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImZzLWRhdGUtcGlja2VyLWRpYWxvZ1wiPlxuICA8ZGl2IGNsYXNzPVwiY2FsZW5kYXItY29udGFpbmVyXCI+XG4gICAgPG5nLWNvbnRhaW5lciBbbmdTd2l0Y2hdPVwiZGF0ZVBpY2tlck1vZGVsLnZpZXdcIj5cbiAgICAgIDxuZy10ZW1wbGF0ZSBbbmdTd2l0Y2hDYXNlXT1cIidkYXRlJ1wiPlxuICAgICAgICA8ZnMtZGF0ZXBpY2tlci1tb2JpbGUtc2Nyb2xsLWNhbGVuZGFyIFtkYXRlUGlja2VyTW9kZWxdPVwiZGF0ZVBpY2tlck1vZGVsXCI+XG4gICAgICAgIDwvZnMtZGF0ZXBpY2tlci1tb2JpbGUtc2Nyb2xsLWNhbGVuZGFyPlxuICAgICAgPC9uZy10ZW1wbGF0ZT5cblxuICAgICAgPG5nLXRlbXBsYXRlIFtuZ1N3aXRjaENhc2VdPVwiJ3dlZWsnXCI+XG4gICAgICAgIDxmcy1kYXRlcGlja2VyLW1vYmlsZS1zY3JvbGwtY2FsZW5kYXIgW2RhdGVQaWNrZXJNb2RlbF09XCJkYXRlUGlja2VyTW9kZWxcIj5cbiAgICAgICAgPC9mcy1kYXRlcGlja2VyLW1vYmlsZS1zY3JvbGwtY2FsZW5kYXI+XG4gICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICA8bmctdGVtcGxhdGUgW25nU3dpdGNoQ2FzZV09XCInbW9udGhyYW5nZSdcIj5cbiAgICAgICAgPGZzLWRhdGVwaWNrZXItbW9iaWxlLXNjcm9sbC1jYWxlbmRhciBbZGF0ZVBpY2tlck1vZGVsXT1cImRhdGVQaWNrZXJNb2RlbFwiPlxuICAgICAgICA8L2ZzLWRhdGVwaWNrZXItbW9iaWxlLXNjcm9sbC1jYWxlbmRhcj5cbiAgICAgIDwvbmctdGVtcGxhdGU+XG5cbiAgICAgIDxuZy10ZW1wbGF0ZSBbbmdTd2l0Y2hDYXNlXT1cIid0aW1lJ1wiPlxuICAgICAgICA8ZnMtZGF0ZXBpY2tlci1tb2JpbGUtdGltZXBpY2tlciBbZGF0ZVBpY2tlck1vZGVsXT1cImRhdGVQaWNrZXJNb2RlbFwiPlxuICAgICAgICA8L2ZzLWRhdGVwaWNrZXItbW9iaWxlLXRpbWVwaWNrZXI+XG4gICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICA8bmctdGVtcGxhdGUgW25nU3dpdGNoQ2FzZV09XCInZGF0ZXRpbWUnXCI+XG4gICAgICAgIDxmcy1kYXRlcGlja2VyLW1vYmlsZS1kYXRldGltZS1waWNrZXIgW2RhdGVQaWNrZXJNb2RlbF09XCJkYXRlUGlja2VyTW9kZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0YWJDaGFuZ2UpPVwiZGF0ZXRpbWVUYWJDaGFuZ2VkKCRldmVudClcIj5cbiAgICAgICAgPC9mcy1kYXRlcGlja2VyLW1vYmlsZS1kYXRldGltZS1waWNrZXI+XG4gICAgICA8L25nLXRlbXBsYXRlPlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48bWF0LW5hdi1saXN0IGNsYXNzPVwiYWN0aW9uc1wiPlxuICA8bmctY29udGFpbmVyICpuZ0lmPVwiZGF0ZVBpY2tlck1vZGVsLm1pbnV0ZXNcbiAgICAgICAgICAgICAgICAgICAgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgIChkYXRlUGlja2VyTW9kZWwuaXNEYXRlVGltZVZpZXcgJiYgc2VsZWN0ZWREYXRlVGltZVRhYiAhPT0gMClcbiAgICAgICAgICAgICAgICAgICAgICB8fCBkYXRlUGlja2VyTW9kZWwuaXNUaW1lVmlld1xuICAgICAgICAgICAgICAgICAgICApXCI+XG4gICAgPG1hdC1saXN0LWl0ZW0gKGNsaWNrKT1cInRvZ2dsZVRpbWVFeHBhbmQoKVwiPlxuICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgbWF0LWJ1dHRvblxuICAgICAgICAgICAgICBjbGFzcz1cImJ1dHRvbi1tb3JlXCI+XG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhKGRhdGVQaWNrZXJNb2RlbC50aW1lRXhwYW5kZWQkIHwgYXN5bmMpOyBlbHNlIGxlc3NNaW51dGVzXCI+XG4gICAgICAgICAgTW9yZSBNaW51dGVzXG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICA8bmctdGVtcGxhdGUgI2xlc3NNaW51dGVzPlxuICAgICAgICAgIExlc3MgTWludXRlc1xuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9tYXQtbGlzdC1pdGVtPlxuXG4gIDwvbmctY29udGFpbmVyPlxuXG4gIDxtYXQtbGlzdC1pdGVtIChjbGljayk9XCJjbG9zZSgpXCI+XG4gICAgPGJ1dHRvbiBtYXQtaWNvbi1idXR0b24gY29sb3I9XCJwcmltYXJ5XCI+XG4gICAgICBEb25lXG4gICAgPC9idXR0b24+XG4gIDwvbWF0LWxpc3QtaXRlbT5cbjwvbWF0LW5hdi1saXN0PlxuIl19