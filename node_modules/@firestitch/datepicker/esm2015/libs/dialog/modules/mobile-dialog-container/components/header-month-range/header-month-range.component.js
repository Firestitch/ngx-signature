import { ChangeDetectionStrategy, Component, Input, ElementRef, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/icon";
import * as i2 from "@angular/common";
import * as i3 from "@firestitch/date";
export class FsDatePickerMobileHeaderMonthRangeComponent {
    constructor(_elRef) {
        this._elRef = _elRef;
    }
}
FsDatePickerMobileHeaderMonthRangeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDatePickerMobileHeaderMonthRangeComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
FsDatePickerMobileHeaderMonthRangeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsDatePickerMobileHeaderMonthRangeComponent, selector: "fs-date-picker-mobile-header-month-range", inputs: { rangeFrom: "rangeFrom", rangeTo: "rangeTo" }, ngImport: i0, template: "<ng-container *ngIf=\"rangeFrom || rangeTo else notSelected\">\n  <ng-container *ngIf=\"rangeFrom else notSelected\">\n    {{ rangeFrom | fsDateFormat: 'day-date' }}\n  </ng-container>\n  &nbsp;\n  <ng-container *ngIf=\"rangeTo\">\n    <mat-icon>arrow_forward</mat-icon>&nbsp;\n    {{ rangeTo | fsDateFormat: 'day-date' }}\n  </ng-container>\n</ng-container>\n\n\n<ng-template #notSelected>\n  Not Selected\n</ng-template>\n", styles: [":host{display:flex;justify-content:center;align-items:center}\n"], components: [{ type: i1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "fsDateFormat": i3.FsDateFormatPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDatePickerMobileHeaderMonthRangeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'fs-date-picker-mobile-header-month-range',
                    templateUrl: './header-month-range.component.html',
                    styleUrls: [
                        './header-month-range.component.scss',
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { rangeFrom: [{
                type: Input
            }], rangeTo: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLW1vbnRoLXJhbmdlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWJzL2RpYWxvZy9tb2R1bGVzL21vYmlsZS1kaWFsb2ctY29udGFpbmVyL2NvbXBvbmVudHMvaGVhZGVyLW1vbnRoLXJhbmdlL2hlYWRlci1tb250aC1yYW5nZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGlicy9kaWFsb2cvbW9kdWxlcy9tb2JpbGUtZGlhbG9nLWNvbnRhaW5lci9jb21wb25lbnRzL2hlYWRlci1tb250aC1yYW5nZS9oZWFkZXItbW9udGgtcmFuZ2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUNMLFVBQVUsR0FDWCxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFXdkIsTUFBTSxPQUFPLDJDQUEyQztJQVN0RCxZQUNVLE1BQWtCO1FBQWxCLFdBQU0sR0FBTixNQUFNLENBQVk7SUFDekIsQ0FBQzs7eUlBWE8sMkNBQTJDOzZIQUEzQywyQ0FBMkMsd0lDaEJ4RCwwYUFlQTs0RkRDYSwyQ0FBMkM7a0JBUnZELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDBDQUEwQztvQkFDcEQsV0FBVyxFQUFFLHFDQUFxQztvQkFDbEQsU0FBUyxFQUFFO3dCQUNULHFDQUFxQztxQkFDdEM7b0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEO2lHQUlRLFNBQVM7c0JBRGYsS0FBSztnQkFJQyxPQUFPO3NCQURiLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgRWxlbWVudFJlZixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZnMtZGF0ZS1waWNrZXItbW9iaWxlLWhlYWRlci1tb250aC1yYW5nZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9oZWFkZXItbW9udGgtcmFuZ2UuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFtcbiAgICAnLi9oZWFkZXItbW9udGgtcmFuZ2UuY29tcG9uZW50LnNjc3MnLFxuICBdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgRnNEYXRlUGlja2VyTW9iaWxlSGVhZGVyTW9udGhSYW5nZUNvbXBvbmVudCB7XG5cbiAgQElucHV0KClcbiAgcHVibGljIHJhbmdlRnJvbTogRGF0ZTtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgcmFuZ2VUbzogRGF0ZTtcblxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgX2VsUmVmOiBFbGVtZW50UmVmLFxuICApIHt9XG5cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJyYW5nZUZyb20gfHwgcmFuZ2VUbyBlbHNlIG5vdFNlbGVjdGVkXCI+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJyYW5nZUZyb20gZWxzZSBub3RTZWxlY3RlZFwiPlxuICAgIHt7IHJhbmdlRnJvbSB8IGZzRGF0ZUZvcm1hdDogJ2RheS1kYXRlJyB9fVxuICA8L25nLWNvbnRhaW5lcj5cbiAgJm5ic3A7XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJyYW5nZVRvXCI+XG4gICAgPG1hdC1pY29uPmFycm93X2ZvcndhcmQ8L21hdC1pY29uPiZuYnNwO1xuICAgIHt7IHJhbmdlVG8gfCBmc0RhdGVGb3JtYXQ6ICdkYXktZGF0ZScgfX1cbiAgPC9uZy1jb250YWluZXI+XG48L25nLWNvbnRhaW5lcj5cblxuXG48bmctdGVtcGxhdGUgI25vdFNlbGVjdGVkPlxuICBOb3QgU2VsZWN0ZWRcbjwvbmctdGVtcGxhdGU+XG4iXX0=