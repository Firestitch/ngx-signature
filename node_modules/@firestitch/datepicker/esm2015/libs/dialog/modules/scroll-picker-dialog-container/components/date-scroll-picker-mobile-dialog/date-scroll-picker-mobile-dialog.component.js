import { ChangeDetectionStrategy, Component, Inject, } from '@angular/core';
import { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/bottom-sheet";
import * as i2 from "../date-scroll-picker/date-scroll-picker.component";
import * as i3 from "@angular/material/list";
import * as i4 from "@angular/material/button";
export class FsDateScrollPickerMobileDialogComponent {
    constructor(_data, _bottomSheetRef) {
        this._data = _data;
        this._bottomSheetRef = _bottomSheetRef;
        this._dialogRef = _data.dateDialogRef;
    }
    get dialogRef() {
        return this._dialogRef;
    }
    change(date) {
        this._date = date;
    }
    close(save = false) {
        if (save) {
            this._dialogRef.updateValue(this._date);
        }
        this._bottomSheetRef.dismiss();
    }
}
FsDateScrollPickerMobileDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDateScrollPickerMobileDialogComponent, deps: [{ token: MAT_BOTTOM_SHEET_DATA }, { token: i1.MatBottomSheetRef }], target: i0.ɵɵFactoryTarget.Component });
FsDateScrollPickerMobileDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsDateScrollPickerMobileDialogComponent, selector: "ng-component", ngImport: i0, template: "<div class=\"fs-date-picker-dialog fs-date-picker-range\" tabindex=\"0\">\n  <div class=\"wrap\">\n    <fs-date-scroll-picker [model]=\"dialogRef.pickerModel.model\"\n                           [minYear]=\"dialogRef.options.minYear\"\n                           [maxDate]=\"dialogRef.options.maxDate\"\n                           [maxYear]=\"dialogRef.options.maxYear\"\n                           [showDay]=\"dialogRef.options.showDay\"\n                           [showMonth]=\"dialogRef.options.showMonth\"\n                           [showYear]=\"dialogRef.options.showYear\"\n                           (changed)=\"change($event)\">\n    </fs-date-scroll-picker>\n\n    <mat-nav-list class=\"actions\">\n      <mat-list-item (click)=\"close(true)\">\n        <button mat-icon-button color=\"primary\">\n          Select\n        </button>\n      </mat-list-item>\n\n      <mat-list-item (click)=\"close(false)\">\n        <button mat-icon-button>\n          Cancel\n        </button>\n      </mat-list-item>\n    </mat-nav-list>\n  </div>\n</div>\n", styles: [":host ::ng-deep .actions .mat-list-item-content{justify-content:center}\n"], components: [{ type: i2.FsDateScrollPickerDialogComponent, selector: "fs-date-scroll-picker", inputs: ["model", "showMonth", "showDay", "showYear", "minYear", "maxYear", "maxDate"], outputs: ["changed"] }, { type: i3.MatNavList, selector: "mat-nav-list", inputs: ["disableRipple", "disabled"], exportAs: ["matNavList"] }, { type: i3.MatListItem, selector: "mat-list-item, a[mat-list-item], button[mat-list-item]", inputs: ["disableRipple", "disabled"], exportAs: ["matListItem"] }, { type: i4.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDateScrollPickerMobileDialogComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './date-scroll-picker-mobile-dialog.component.html',
                    styleUrls: ['./date-scroll-picker-mobile-dialog.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_BOTTOM_SHEET_DATA]
                }] }, { type: i1.MatBottomSheetRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1zY3JvbGwtcGlja2VyLW1vYmlsZS1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYnMvZGlhbG9nL21vZHVsZXMvc2Nyb2xsLXBpY2tlci1kaWFsb2ctY29udGFpbmVyL2NvbXBvbmVudHMvZGF0ZS1zY3JvbGwtcGlja2VyLW1vYmlsZS1kaWFsb2cvZGF0ZS1zY3JvbGwtcGlja2VyLW1vYmlsZS1kaWFsb2cuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYnMvZGlhbG9nL21vZHVsZXMvc2Nyb2xsLXBpY2tlci1kaWFsb2ctY29udGFpbmVyL2NvbXBvbmVudHMvZGF0ZS1zY3JvbGwtcGlja2VyLW1vYmlsZS1kaWFsb2cvZGF0ZS1zY3JvbGwtcGlja2VyLW1vYmlsZS1kaWFsb2cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7Ozs7QUFVMUYsTUFBTSxPQUFPLHVDQUF1QztJQU1sRCxZQUVVLEtBQVUsRUFDVixlQUF1QztRQUR2QyxVQUFLLEdBQUwsS0FBSyxDQUFLO1FBQ1Ysb0JBQWUsR0FBZixlQUFlLENBQXdCO1FBRS9DLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQztJQUN4QyxDQUFDO0lBRUQsSUFBVyxTQUFTO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDO0lBRU0sTUFBTSxDQUFDLElBQWlCO1FBQzdCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3BCLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBSSxHQUFHLEtBQUs7UUFDdkIsSUFBSSxJQUFJLEVBQUU7WUFDUixJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDekM7UUFFRCxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pDLENBQUM7O3FJQTVCVSx1Q0FBdUMsa0JBT3hDLHFCQUFxQjt5SEFQcEIsdUNBQXVDLG9EQ2hCcEQsK2hDQTJCQTs0RkRYYSx1Q0FBdUM7a0JBTG5ELFNBQVM7bUJBQUM7b0JBQ1QsV0FBVyxFQUFFLG1EQUFtRDtvQkFDaEUsU0FBUyxFQUFFLENBQUMsbURBQW1ELENBQUM7b0JBQ2hFLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7MEJBUUksTUFBTTsyQkFBQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBJbmplY3QsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBNQVRfQk9UVE9NX1NIRUVUX0RBVEEsIE1hdEJvdHRvbVNoZWV0UmVmIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYm90dG9tLXNoZWV0JztcblxuaW1wb3J0IHsgRnNEYXRlUGlja2VyRGlhbG9nUmVmIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vZGlhbG9nL2NsYXNzZXMvZGlhbG9nLXJlZic7XG5cblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiAnLi9kYXRlLXNjcm9sbC1waWNrZXItbW9iaWxlLWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2RhdGUtc2Nyb2xsLXBpY2tlci1tb2JpbGUtZGlhbG9nLmNvbXBvbmVudC5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBGc0RhdGVTY3JvbGxQaWNrZXJNb2JpbGVEaWFsb2dDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX2RhdGU6IERhdGUgfCBudWxsO1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgX2RpYWxvZ1JlZjogRnNEYXRlUGlja2VyRGlhbG9nUmVmO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoTUFUX0JPVFRPTV9TSEVFVF9EQVRBKVxuICAgIHByaXZhdGUgX2RhdGE6IGFueSxcbiAgICBwcml2YXRlIF9ib3R0b21TaGVldFJlZjogTWF0Qm90dG9tU2hlZXRSZWY8YW55PixcbiAgKSB7XG4gICAgdGhpcy5fZGlhbG9nUmVmID0gX2RhdGEuZGF0ZURpYWxvZ1JlZjtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgZGlhbG9nUmVmKCk6IEZzRGF0ZVBpY2tlckRpYWxvZ1JlZiB7XG4gICAgcmV0dXJuIHRoaXMuX2RpYWxvZ1JlZjtcbiAgfVxuXG4gIHB1YmxpYyBjaGFuZ2UoZGF0ZTogRGF0ZSB8IG51bGwpIHtcbiAgICB0aGlzLl9kYXRlID0gZGF0ZTtcbiAgfVxuXG4gIHB1YmxpYyBjbG9zZShzYXZlID0gZmFsc2UpIHtcbiAgICBpZiAoc2F2ZSkge1xuICAgICAgdGhpcy5fZGlhbG9nUmVmLnVwZGF0ZVZhbHVlKHRoaXMuX2RhdGUpO1xuICAgIH1cblxuICAgIHRoaXMuX2JvdHRvbVNoZWV0UmVmLmRpc21pc3MoKTtcbiAgfVxuXG59XG4iLCI8ZGl2IGNsYXNzPVwiZnMtZGF0ZS1waWNrZXItZGlhbG9nIGZzLWRhdGUtcGlja2VyLXJhbmdlXCIgdGFiaW5kZXg9XCIwXCI+XG4gIDxkaXYgY2xhc3M9XCJ3cmFwXCI+XG4gICAgPGZzLWRhdGUtc2Nyb2xsLXBpY2tlciBbbW9kZWxdPVwiZGlhbG9nUmVmLnBpY2tlck1vZGVsLm1vZGVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFttaW5ZZWFyXT1cImRpYWxvZ1JlZi5vcHRpb25zLm1pblllYXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgW21heERhdGVdPVwiZGlhbG9nUmVmLm9wdGlvbnMubWF4RGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBbbWF4WWVhcl09XCJkaWFsb2dSZWYub3B0aW9ucy5tYXhZZWFyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzaG93RGF5XT1cImRpYWxvZ1JlZi5vcHRpb25zLnNob3dEYXlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgW3Nob3dNb250aF09XCJkaWFsb2dSZWYub3B0aW9ucy5zaG93TW9udGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgW3Nob3dZZWFyXT1cImRpYWxvZ1JlZi5vcHRpb25zLnNob3dZZWFyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaGFuZ2VkKT1cImNoYW5nZSgkZXZlbnQpXCI+XG4gICAgPC9mcy1kYXRlLXNjcm9sbC1waWNrZXI+XG5cbiAgICA8bWF0LW5hdi1saXN0IGNsYXNzPVwiYWN0aW9uc1wiPlxuICAgICAgPG1hdC1saXN0LWl0ZW0gKGNsaWNrKT1cImNsb3NlKHRydWUpXCI+XG4gICAgICAgIDxidXR0b24gbWF0LWljb24tYnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiPlxuICAgICAgICAgIFNlbGVjdFxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvbWF0LWxpc3QtaXRlbT5cblxuICAgICAgPG1hdC1saXN0LWl0ZW0gKGNsaWNrKT1cImNsb3NlKGZhbHNlKVwiPlxuICAgICAgICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbj5cbiAgICAgICAgICBDYW5jZWxcbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L21hdC1saXN0LWl0ZW0+XG4gICAgPC9tYXQtbmF2LWxpc3Q+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=