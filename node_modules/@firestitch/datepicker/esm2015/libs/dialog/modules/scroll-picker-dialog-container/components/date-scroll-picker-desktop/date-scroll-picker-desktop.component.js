import { ChangeDetectionStrategy, Component, } from '@angular/core';
import { FsDatePickerDialogRef } from '../../../../../dialog/classes/dialog-ref';
import * as i0 from "@angular/core";
import * as i1 from "../../../../../dialog/classes/dialog-ref";
import * as i2 from "../date-scroll-picker/date-scroll-picker.component";
import * as i3 from "@angular/material/button";
export class FsDateScrollPickerDesktopComponent {
    constructor(_dialogRef) {
        this._dialogRef = _dialogRef;
    }
    get dialogRef() {
        return this._dialogRef;
    }
    change(date) {
        this._date = date;
    }
    close(save = false) {
        if (save) {
            this._dialogRef.updateValue(this._date);
        }
        this._dialogRef.close();
    }
}
FsDateScrollPickerDesktopComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDateScrollPickerDesktopComponent, deps: [{ token: i1.FsDatePickerDialogRef }], target: i0.ɵɵFactoryTarget.Component });
FsDateScrollPickerDesktopComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FsDateScrollPickerDesktopComponent, selector: "ng-component", ngImport: i0, template: "<div class=\"fs-date-picker-dialog fs-date-picker-dialog-shadow fs-date-picker-range\" tabindex=\"0\">\n  <div class=\"wrap\">\n    <fs-date-scroll-picker [model]=\"dialogRef.pickerModel.model\"\n                           [minYear]=\"dialogRef.options.minYear\"\n                           [maxDate]=\"dialogRef.options.maxDate\"\n                           [maxYear]=\"dialogRef.options.maxYear\"\n                           [showDay]=\"dialogRef.options.showDay\"\n                           [showMonth]=\"dialogRef.options.showMonth\"\n                           [showYear]=\"dialogRef.options.showYear\"\n                           (changed)=\"change($event)\">\n    </fs-date-scroll-picker>\n\n    <div class=\"buttons\">\n      <button type=\"button\" mat-button color=\"primary\" (click)=\"close(true)\">Select</button>\n      <button type=\"button\" mat-button (click)=\"close(false)\">Cancel</button>\n    </div>\n  </div>\n</div>\n", styles: [""], components: [{ type: i2.FsDateScrollPickerDialogComponent, selector: "fs-date-scroll-picker", inputs: ["model", "showMonth", "showDay", "showYear", "minYear", "maxYear", "maxDate"], outputs: ["changed"] }, { type: i3.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FsDateScrollPickerDesktopComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './date-scroll-picker-desktop.component.html',
                    styleUrls: ['./date-scroll-picker-desktop.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.FsDatePickerDialogRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1zY3JvbGwtcGlja2VyLWRlc2t0b3AuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYnMvZGlhbG9nL21vZHVsZXMvc2Nyb2xsLXBpY2tlci1kaWFsb2ctY29udGFpbmVyL2NvbXBvbmVudHMvZGF0ZS1zY3JvbGwtcGlja2VyLWRlc2t0b3AvZGF0ZS1zY3JvbGwtcGlja2VyLWRlc2t0b3AuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYnMvZGlhbG9nL21vZHVsZXMvc2Nyb2xsLXBpY2tlci1kaWFsb2ctY29udGFpbmVyL2NvbXBvbmVudHMvZGF0ZS1zY3JvbGwtcGlja2VyLWRlc2t0b3AvZGF0ZS1zY3JvbGwtcGlja2VyLWRlc2t0b3AuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEdBQ1YsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMENBQTBDLENBQUM7Ozs7O0FBUWpGLE1BQU0sT0FBTyxrQ0FBa0M7SUFJN0MsWUFDWSxVQUFpQztRQUFqQyxlQUFVLEdBQVYsVUFBVSxDQUF1QjtJQUMxQyxDQUFDO0lBRUosSUFBVyxTQUFTO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDO0lBRU0sTUFBTSxDQUFDLElBQWlCO1FBQzdCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3BCLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBSSxHQUFHLEtBQUs7UUFDdkIsSUFBSSxJQUFJLEVBQUU7WUFDUixJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDekM7UUFFRCxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzFCLENBQUM7O2dJQXRCVSxrQ0FBa0M7b0hBQWxDLGtDQUFrQyxvRENiL0MsZzdCQWtCQTs0RkRMYSxrQ0FBa0M7a0JBTDlDLFNBQVM7bUJBQUM7b0JBQ1QsV0FBVyxFQUFFLDZDQUE2QztvQkFDMUQsU0FBUyxFQUFFLENBQUMsNkNBQTZDLENBQUM7b0JBQzFELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBGc0RhdGVQaWNrZXJEaWFsb2dSZWYgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9kaWFsb2cvY2xhc3Nlcy9kaWFsb2ctcmVmJztcblxuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGVVcmw6ICcuL2RhdGUtc2Nyb2xsLXBpY2tlci1kZXNrdG9wLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZGF0ZS1zY3JvbGwtcGlja2VyLWRlc2t0b3AuY29tcG9uZW50LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEZzRGF0ZVNjcm9sbFBpY2tlckRlc2t0b3BDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX2RhdGU6IERhdGUgfCBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBfZGlhbG9nUmVmOiBGc0RhdGVQaWNrZXJEaWFsb2dSZWYsXG4gICkge31cblxuICBwdWJsaWMgZ2V0IGRpYWxvZ1JlZigpOiBGc0RhdGVQaWNrZXJEaWFsb2dSZWYge1xuICAgIHJldHVybiB0aGlzLl9kaWFsb2dSZWY7XG4gIH1cblxuICBwdWJsaWMgY2hhbmdlKGRhdGU6IERhdGUgfCBudWxsKSB7XG4gICAgdGhpcy5fZGF0ZSA9IGRhdGU7XG4gIH1cblxuICBwdWJsaWMgY2xvc2Uoc2F2ZSA9IGZhbHNlKSB7XG4gICAgaWYgKHNhdmUpIHtcbiAgICAgIHRoaXMuX2RpYWxvZ1JlZi51cGRhdGVWYWx1ZSh0aGlzLl9kYXRlKTtcbiAgICB9XG5cbiAgICB0aGlzLl9kaWFsb2dSZWYuY2xvc2UoKTtcbiAgfVxuXG59XG4iLCI8ZGl2IGNsYXNzPVwiZnMtZGF0ZS1waWNrZXItZGlhbG9nIGZzLWRhdGUtcGlja2VyLWRpYWxvZy1zaGFkb3cgZnMtZGF0ZS1waWNrZXItcmFuZ2VcIiB0YWJpbmRleD1cIjBcIj5cbiAgPGRpdiBjbGFzcz1cIndyYXBcIj5cbiAgICA8ZnMtZGF0ZS1zY3JvbGwtcGlja2VyIFttb2RlbF09XCJkaWFsb2dSZWYucGlja2VyTW9kZWwubW9kZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgW21pblllYXJdPVwiZGlhbG9nUmVmLm9wdGlvbnMubWluWWVhclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBbbWF4RGF0ZV09XCJkaWFsb2dSZWYub3B0aW9ucy5tYXhEYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFttYXhZZWFyXT1cImRpYWxvZ1JlZi5vcHRpb25zLm1heFllYXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgW3Nob3dEYXldPVwiZGlhbG9nUmVmLm9wdGlvbnMuc2hvd0RheVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBbc2hvd01vbnRoXT1cImRpYWxvZ1JlZi5vcHRpb25zLnNob3dNb250aFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBbc2hvd1llYXJdPVwiZGlhbG9nUmVmLm9wdGlvbnMuc2hvd1llYXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgKGNoYW5nZWQpPVwiY2hhbmdlKCRldmVudClcIj5cbiAgICA8L2ZzLWRhdGUtc2Nyb2xsLXBpY2tlcj5cblxuICAgIDxkaXYgY2xhc3M9XCJidXR0b25zXCI+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBtYXQtYnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIChjbGljayk9XCJjbG9zZSh0cnVlKVwiPlNlbGVjdDwvYnV0dG9uPlxuICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgbWF0LWJ1dHRvbiAoY2xpY2spPVwiY2xvc2UoZmFsc2UpXCI+Q2FuY2VsPC9idXR0b24+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=